pipeline {
    agent {
        node {
            label 'skyvera-non-docker-jenkins-win-build'
            customWorkspace "c:\\jenkins\\build"
        }
    }
    options {
        skipDefaultCheckout true
        timestamps()
    }
    parameters {
        string(name: 'Version', defaultValue: '7.0.2.x', description: 'Version to set (x is replaced with current build number)')
    }
    stages {
        stage('Prepare for build') {
            steps {
                echo 'Setting parameters...'
                script {
                    env.BUILD_VERSION = params.Version.replace('x', env.BUILD_NUMBER)
                }
                
                echo 'Cleanup previous build workspace...'
                dir ("${env.WORKSPACE}") {
                    deleteDir()
                }
                powershell "Write-Host 'Disk space usage:'(Get-PSDrive C | Select-Object Used,Free)"
                
                echo 'Checkout SCM..'
                checkout scm
				
				echo "Writing '${env.BUILD_VERSION}' to build_version.txt"
                bat "echo ${env.BUILD_VERSION}>> build_version.txt"
            }
        }
        stage('Build') {
            steps {
                echo 'Executing build...'
                powershell "${env.WORKSPACE}/BuildJenkins/MsBuild/RC/build.ps1 ${env.BUILD_VERSION} \"${env.WORKSPACE}\" \"${env.WORKSPACE}/finalBuild\""
            }
        }
    }
    post {
        success {
            echo 'Publishing artifacts...'
			archiveArtifacts "build_version.txt"
			archiveArtifacts "InstallShield/Build Dependencies/PublisherSetup2016*.zip"
			archiveArtifacts "InstallShield/WorkEngine5/Product Configuration 1/PrimaryRelease/DiskImages/DISK1/WorkEngine*.exe"
			archiveArtifacts "output/binaries/_PublishedWebsites/AdminSite_Package/AdminSite.zip"
			archiveArtifacts "output/binaries/_PublishedWebsites/BillingSite_Package/BillingSite.zip"
            zip(zipFile: "SilentInstaller.zip", dir: "${env.WORKSPACE}/finalBuild", archive: true)
        }
        cleanup {
            powershell "Write-Host 'Disk space usage before cleanup:' (Get-PSDrive C | Select-Object Used,Free)"
            echo 'Cleanup workspace...'
            dir ("${env.WORKSPACE}") {
                deleteDir()
            }
            powershell "Write-Host 'Disk space usage after cleanup:' (Get-PSDrive C | Select-Object Used,Free)"
        }
    }
}
