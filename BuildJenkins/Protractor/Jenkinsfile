pipeline {
	agent {
		label 'skyvera-jenkins-protractor'
	}
	  parameters {
		string(name: 'TargetHost', defaultValue: '10.25.2.82', description: 'Target host to deploy to')
		string(name: 'FullHostName', defaultValue: 'tenant02.epmldev.com', description: 'Target full host name')
		string(name: 'BaseUrl', defaultValue: 'http://tenant02.epmldev.com', description: 'Protractor baseUrl')
		string(name: 'SiteCollection', defaultValue: '/epm', description: 'Protractor siteCollection')
		string(name: 'Username', defaultValue: 'farmadmin', description: 'Protractor username')
		string(name: 'Password', defaultValue: 'Pass@word1', description: 'Protractor password')
	}
	stages {
		stage('Preparing for UI tests execution') {
			steps {
				echo 'Set scripts permissions...'
				sh "chmod +x ${env.WORKSPACE}/BuildJenkins/Protractor/*.sh"
				
				echo 'Installing dependencies...'
				dir ("${env.WORKSPACE}/EMPLiveAutomationTesting/protractor") {
					sh "${env.WORKSPACE}/BuildJenkins/Protractor/install-dependencies.sh"
				}
				
				echo 'Updating hosts file...'
				dir ("${env.WORKSPACE}/EMPLiveAutomationTesting/protractor") {
					sh "${env.WORKSPACE}/BuildJenkins/Protractor/update-hosts-file.sh ${params.TargetHost} ${params.FullHostName}"
				}
				script{
					env.VERSION = "(${env.BRANCH_NAME}#${env.BUILD_NUMBER})"
				}
			}
		}
		stage('Executing UI tests') {
			steps {
				echo 'Run tests...'
				dir ("${env.WORKSPACE}/EMPLiveAutomationTesting/protractor") {
					sh "npm install; npm run e2e-tc -- --params.headlessBrowser=true --baseUrl='${params.BaseUrl}' --params.login.admin.user='${params.Username}'  --params.login.admin.password='${params.Password}'  --params.siteCollection='${params.SiteCollection}'"
				}
			}
		}
	}
	post {
		always {
			echo 'Generating Allure report...'
			script {
				allure([
					includeProperties: false,
					jdk: '',
					properties: [],
					reportBuildPolicy: 'ALWAYS',
					results: [[path: "EMPLiveAutomationTesting/protractor/auto-generated/allure-results"]]
				])
			}
		}
	}
}
