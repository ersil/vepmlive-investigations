//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18331
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UplandIntegrations.TenroxDataService {
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18331")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
    public partial class TenroxFaultContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int errorIdField;
        
        private string errorMessageField;
        
        private string correlationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ErrorId {
            get {
                return this.errorIdField;
            }
            set {
                this.errorIdField = value;
                this.RaisePropertyChanged("ErrorId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CorrelationId {
            get {
                return this.correlationIdField;
            }
            set {
                this.correlationIdField = value;
                this.RaisePropertyChanged("CorrelationId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18331")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Tenrox.Shared.Utilities")]
    public partial class UserToken : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string authenticatedGuidField;
        
        private bool forceTenroxField;
        
        private bool forceTenroxFieldSpecified;
        
        private string iPAddressFieldField;
        
        private string orgNameField;
        
        private string passwordField;
        
        private int uniqueIdField;
        
        private bool uniqueIdFieldSpecified;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string AuthenticatedGuid {
            get {
                return this.authenticatedGuidField;
            }
            set {
                this.authenticatedGuidField = value;
                this.RaisePropertyChanged("AuthenticatedGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool ForceTenrox {
            get {
                return this.forceTenroxField;
            }
            set {
                this.forceTenroxField = value;
                this.RaisePropertyChanged("ForceTenrox");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForceTenroxSpecified {
            get {
                return this.forceTenroxFieldSpecified;
            }
            set {
                this.forceTenroxFieldSpecified = value;
                this.RaisePropertyChanged("ForceTenroxSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string IPAddressField {
            get {
                return this.iPAddressFieldField;
            }
            set {
                this.iPAddressFieldField = value;
                this.RaisePropertyChanged("IPAddressField");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string OrgName {
            get {
                return this.orgNameField;
            }
            set {
                this.orgNameField = value;
                this.RaisePropertyChanged("OrgName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int UniqueId {
            get {
                return this.uniqueIdField;
            }
            set {
                this.uniqueIdField = value;
                this.RaisePropertyChanged("UniqueId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UniqueIdSpecified {
            get {
                return this.uniqueIdFieldSpecified;
            }
            set {
                this.uniqueIdFieldSpecified = value;
                this.RaisePropertyChanged("UniqueIdSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Tenrox.Application.SDK", ConfigurationName="TenroxDataService.IExecuteStoredProcedure")]
    public interface IExecuteStoredProcedure {
        
        // CODEGEN: Parameter 'RunStoredProcedureResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedure", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(UplandIntegrations.TenroxDataService.TenroxFaultContract), Action="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureTenroxFaultContr" +
            "actFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        UplandIntegrations.TenroxDataService.RunStoredProcedureResponse RunStoredProcedure(UplandIntegrations.TenroxDataService.RunStoredProcedureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedure", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureResponse")]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureResponse> RunStoredProcedureAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureRequest request);
        
        // CODEGEN: Parameter 'p_UserToken' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureExecute", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureExecuteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(UplandIntegrations.TenroxDataService.TenroxFaultContract), Action="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureExecuteTenroxFau" +
            "ltContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteResponse RunStoredProcedureExecute(UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureExecute", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureExecuteResponse")]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteResponse> RunStoredProcedureExecuteAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteRequest request);
        
        // CODEGEN: Parameter 'p_UserToken' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureNonQuery", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureNonQueryResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(UplandIntegrations.TenroxDataService.TenroxFaultContract), Action="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureNonQueryTenroxFa" +
            "ultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryResponse RunStoredProcedureNonQuery(UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureNonQuery", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureNonQueryResponse" +
            "")]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryResponse> RunStoredProcedureNonQueryAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryRequest request);
        
        // CODEGEN: Parameter 'RunStoredProcedureScalarResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureScalar", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureScalarResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(UplandIntegrations.TenroxDataService.TenroxFaultContract), Action="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureScalarTenroxFaul" +
            "tContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        UplandIntegrations.TenroxDataService.RunStoredProcedureScalarResponse RunStoredProcedureScalar(UplandIntegrations.TenroxDataService.RunStoredProcedureScalarRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureScalar", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureScalarResponse")]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureScalarResponse> RunStoredProcedureScalarAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureScalarRequest request);
        
        // CODEGEN: Parameter 'RunStoredProcedureDataSetResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureDataSet", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureDataSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(UplandIntegrations.TenroxDataService.TenroxFaultContract), Action="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureDataSetTenroxFau" +
            "ltContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetResponse RunStoredProcedureDataSet(UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureDataSet", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureDataSetResponse")]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetResponse> RunStoredProcedureDataSetAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetRequest request);
        
        // CODEGEN: Parameter 'RunStoredProcedureSerializedResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureSerialized", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureSerializedRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(UplandIntegrations.TenroxDataService.TenroxFaultContract), Action="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureSerializedTenrox" +
            "FaultContractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedResponse RunStoredProcedureSerialized(UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="RunStoredProcedureSerialized", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/RunStoredProcedureSerializedRespon" +
            "se")]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedResponse> RunStoredProcedureSerializedAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedRequest request);
        
        // CODEGEN: Parameter 'ProcessErrorMessagesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="ProcessErrorMessages", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/ProcessErrorMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(UplandIntegrations.TenroxDataService.TenroxFaultContract), Action="Tenrox.Application.SDK/IExecuteStoredProcedure/ProcessErrorMessagesTenroxFaultCon" +
            "tractFault", Name="TenroxFaultContract", Namespace="http://Tenrox.Server.Framework.WebServices.FaultContracts")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        UplandIntegrations.TenroxDataService.ProcessErrorMessagesResponse ProcessErrorMessages(UplandIntegrations.TenroxDataService.ProcessErrorMessagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ProcessErrorMessages", ReplyAction="Tenrox.Application.SDK/IExecuteStoredProcedure/ProcessErrorMessagesResponse")]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.ProcessErrorMessagesResponse> ProcessErrorMessagesAsync(UplandIntegrations.TenroxDataService.ProcessErrorMessagesRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedure", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UplandIntegrations.TenroxDataService.UserToken p_UserToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string p_strStoredProcAlias;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=2)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] p_Parameters;
        
        public RunStoredProcedureRequest() {
        }
        
        public RunStoredProcedureRequest(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            this.p_UserToken = p_UserToken;
            this.p_strStoredProcAlias = p_strStoredProcAlias;
            this.p_Parameters = p_Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureResponse", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable RunStoredProcedureResult;
        
        public RunStoredProcedureResponse() {
        }
        
        public RunStoredProcedureResponse(System.Data.DataTable RunStoredProcedureResult) {
            this.RunStoredProcedureResult = RunStoredProcedureResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureExecute", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureExecuteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UplandIntegrations.TenroxDataService.UserToken p_UserToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string p_strStoredProcAlias;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=2)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] p_Parameters;
        
        public RunStoredProcedureExecuteRequest() {
        }
        
        public RunStoredProcedureExecuteRequest(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            this.p_UserToken = p_UserToken;
            this.p_strStoredProcAlias = p_strStoredProcAlias;
            this.p_Parameters = p_Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureExecuteResponse", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureExecuteResponse {
        
        public RunStoredProcedureExecuteResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureNonQuery", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureNonQueryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UplandIntegrations.TenroxDataService.UserToken p_UserToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string p_strStoredProcAlias;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=2)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] p_Parameters;
        
        public RunStoredProcedureNonQueryRequest() {
        }
        
        public RunStoredProcedureNonQueryRequest(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            this.p_UserToken = p_UserToken;
            this.p_strStoredProcAlias = p_strStoredProcAlias;
            this.p_Parameters = p_Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureNonQueryResponse", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureNonQueryResponse {
        
        public RunStoredProcedureNonQueryResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureScalar", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureScalarRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UplandIntegrations.TenroxDataService.UserToken p_UserToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string p_strStoredProcAlias;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=2)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] p_Parameters;
        
        public RunStoredProcedureScalarRequest() {
        }
        
        public RunStoredProcedureScalarRequest(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            this.p_UserToken = p_UserToken;
            this.p_strStoredProcAlias = p_strStoredProcAlias;
            this.p_Parameters = p_Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureScalarResponse", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureScalarResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object RunStoredProcedureScalarResult;
        
        public RunStoredProcedureScalarResponse() {
        }
        
        public RunStoredProcedureScalarResponse(object RunStoredProcedureScalarResult) {
            this.RunStoredProcedureScalarResult = RunStoredProcedureScalarResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureDataSet", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureDataSetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UplandIntegrations.TenroxDataService.UserToken p_UserToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string p_strStoredProcAlias;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=2)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] p_Parameters;
        
        public RunStoredProcedureDataSetRequest() {
        }
        
        public RunStoredProcedureDataSetRequest(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            this.p_UserToken = p_UserToken;
            this.p_strStoredProcAlias = p_strStoredProcAlias;
            this.p_Parameters = p_Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureDataSetResponse", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureDataSetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet RunStoredProcedureDataSetResult;
        
        public RunStoredProcedureDataSetResponse() {
        }
        
        public RunStoredProcedureDataSetResponse(System.Data.DataSet RunStoredProcedureDataSetResult) {
            this.RunStoredProcedureDataSetResult = RunStoredProcedureDataSetResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureSerialized", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureSerializedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string p_strUserToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string p_strStoredProcAlias;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=2)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] p_Parameters;
        
        public RunStoredProcedureSerializedRequest() {
        }
        
        public RunStoredProcedureSerializedRequest(string p_strUserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            this.p_strUserToken = p_strUserToken;
            this.p_strStoredProcAlias = p_strStoredProcAlias;
            this.p_Parameters = p_Parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RunStoredProcedureSerializedResponse", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class RunStoredProcedureSerializedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable RunStoredProcedureSerializedResult;
        
        public RunStoredProcedureSerializedResponse() {
        }
        
        public RunStoredProcedureSerializedResponse(System.Data.DataTable RunStoredProcedureSerializedResult) {
            this.RunStoredProcedureSerializedResult = RunStoredProcedureSerializedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessErrorMessages", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class ProcessErrorMessagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string p_UserToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable retDataTable;
        
        public ProcessErrorMessagesRequest() {
        }
        
        public ProcessErrorMessagesRequest(string p_UserToken, System.Data.DataTable retDataTable) {
            this.p_UserToken = p_UserToken;
            this.retDataTable = retDataTable;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessErrorMessagesResponse", WrapperNamespace="Tenrox.Application.SDK", IsWrapped=true)]
    public partial class ProcessErrorMessagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Tenrox.Application.SDK", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable ProcessErrorMessagesResult;
        
        public ProcessErrorMessagesResponse() {
        }
        
        public ProcessErrorMessagesResponse(System.Data.DataTable ProcessErrorMessagesResult) {
            this.ProcessErrorMessagesResult = ProcessErrorMessagesResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExecuteStoredProcedureChannel : UplandIntegrations.TenroxDataService.IExecuteStoredProcedure, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteStoredProcedureClient : System.ServiceModel.ClientBase<UplandIntegrations.TenroxDataService.IExecuteStoredProcedure>, UplandIntegrations.TenroxDataService.IExecuteStoredProcedure {
        
        public ExecuteStoredProcedureClient() {
        }
        
        public ExecuteStoredProcedureClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExecuteStoredProcedureClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExecuteStoredProcedureClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExecuteStoredProcedureClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplandIntegrations.TenroxDataService.RunStoredProcedureResponse UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedure(UplandIntegrations.TenroxDataService.RunStoredProcedureRequest request) {
            return base.Channel.RunStoredProcedure(request);
        }
        
        public System.Data.DataTable RunStoredProcedure(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            UplandIntegrations.TenroxDataService.RunStoredProcedureResponse retVal = ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedure(inValue);
            return retVal.RunStoredProcedureResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureResponse> UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureRequest request) {
            return base.Channel.RunStoredProcedureAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureResponse> RunStoredProcedureAsync(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            return ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteResponse UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureExecute(UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteRequest request) {
            return base.Channel.RunStoredProcedureExecute(request);
        }
        
        public void RunStoredProcedureExecute(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteResponse retVal = ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureExecute(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteResponse> UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureExecuteAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteRequest request) {
            return base.Channel.RunStoredProcedureExecuteAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteResponse> RunStoredProcedureExecuteAsync(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureExecuteRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            return ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureExecuteAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryResponse UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureNonQuery(UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryRequest request) {
            return base.Channel.RunStoredProcedureNonQuery(request);
        }
        
        public void RunStoredProcedureNonQuery(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryResponse retVal = ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureNonQuery(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryResponse> UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureNonQueryAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryRequest request) {
            return base.Channel.RunStoredProcedureNonQueryAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryResponse> RunStoredProcedureNonQueryAsync(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureNonQueryRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            return ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureNonQueryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplandIntegrations.TenroxDataService.RunStoredProcedureScalarResponse UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureScalar(UplandIntegrations.TenroxDataService.RunStoredProcedureScalarRequest request) {
            return base.Channel.RunStoredProcedureScalar(request);
        }
        
        public object RunStoredProcedureScalar(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureScalarRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureScalarRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            UplandIntegrations.TenroxDataService.RunStoredProcedureScalarResponse retVal = ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureScalar(inValue);
            return retVal.RunStoredProcedureScalarResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureScalarResponse> UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureScalarAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureScalarRequest request) {
            return base.Channel.RunStoredProcedureScalarAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureScalarResponse> RunStoredProcedureScalarAsync(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureScalarRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureScalarRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            return ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureScalarAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetResponse UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureDataSet(UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetRequest request) {
            return base.Channel.RunStoredProcedureDataSet(request);
        }
        
        public System.Data.DataSet RunStoredProcedureDataSet(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetResponse retVal = ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureDataSet(inValue);
            return retVal.RunStoredProcedureDataSetResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetResponse> UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureDataSetAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetRequest request) {
            return base.Channel.RunStoredProcedureDataSetAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetResponse> RunStoredProcedureDataSetAsync(UplandIntegrations.TenroxDataService.UserToken p_UserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureDataSetRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            return ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureDataSetAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedResponse UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureSerialized(UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedRequest request) {
            return base.Channel.RunStoredProcedureSerialized(request);
        }
        
        public System.Data.DataTable RunStoredProcedureSerialized(string p_strUserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedRequest();
            inValue.p_strUserToken = p_strUserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedResponse retVal = ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureSerialized(inValue);
            return retVal.RunStoredProcedureSerializedResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedResponse> UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.RunStoredProcedureSerializedAsync(UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedRequest request) {
            return base.Channel.RunStoredProcedureSerializedAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedResponse> RunStoredProcedureSerializedAsync(string p_strUserToken, string p_strStoredProcAlias, object[] p_Parameters) {
            UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedRequest inValue = new UplandIntegrations.TenroxDataService.RunStoredProcedureSerializedRequest();
            inValue.p_strUserToken = p_strUserToken;
            inValue.p_strStoredProcAlias = p_strStoredProcAlias;
            inValue.p_Parameters = p_Parameters;
            return ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).RunStoredProcedureSerializedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UplandIntegrations.TenroxDataService.ProcessErrorMessagesResponse UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.ProcessErrorMessages(UplandIntegrations.TenroxDataService.ProcessErrorMessagesRequest request) {
            return base.Channel.ProcessErrorMessages(request);
        }
        
        public System.Data.DataTable ProcessErrorMessages(string p_UserToken, System.Data.DataTable retDataTable) {
            UplandIntegrations.TenroxDataService.ProcessErrorMessagesRequest inValue = new UplandIntegrations.TenroxDataService.ProcessErrorMessagesRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.retDataTable = retDataTable;
            UplandIntegrations.TenroxDataService.ProcessErrorMessagesResponse retVal = ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).ProcessErrorMessages(inValue);
            return retVal.ProcessErrorMessagesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.ProcessErrorMessagesResponse> UplandIntegrations.TenroxDataService.IExecuteStoredProcedure.ProcessErrorMessagesAsync(UplandIntegrations.TenroxDataService.ProcessErrorMessagesRequest request) {
            return base.Channel.ProcessErrorMessagesAsync(request);
        }
        
        public System.Threading.Tasks.Task<UplandIntegrations.TenroxDataService.ProcessErrorMessagesResponse> ProcessErrorMessagesAsync(string p_UserToken, System.Data.DataTable retDataTable) {
            UplandIntegrations.TenroxDataService.ProcessErrorMessagesRequest inValue = new UplandIntegrations.TenroxDataService.ProcessErrorMessagesRequest();
            inValue.p_UserToken = p_UserToken;
            inValue.retDataTable = retDataTable;
            return ((UplandIntegrations.TenroxDataService.IExecuteStoredProcedure)(this)).ProcessErrorMessagesAsync(inValue);
        }
    }
}
