//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPMLiveWebParts.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EPMLiveWebParts.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Tab Id=&quot;Ribbon.AssignmentPlannerTab&quot;
        ///    Title=&quot;Assignment Planner&quot;
        ///    Description=&quot;Assignment Planner&quot;
        ///    Command=&quot;AssignmentPlannerContextualTab.EnableAssignmentPlannerTab&quot;
        ///    Sequence=&quot;501&quot;&gt;
        ///	&lt;Scaling Id=&quot;Ribbon.AssignmentPlannerTab.Scaling&quot;&gt;
        ///		&lt;MaxSize Id=&quot;Ribbon.AssignmentPlannerTab.MaxSizeNew&quot; GroupId=&quot;Ribbon.AssignmentPlannerTab.AssignmentPlannerGroupShare&quot; Size=&quot;AssignmentPlannerLayout&quot; /&gt;
        ///		&lt;MaxSize Id=&quot;Ribbon.AssignmentPlannerTab.MaxSizeManage&quot; GroupId=&quot;Ribbon.AssignmentPlannerTab.Assig [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssignmentPlanner_ContextualTab {
            get {
                return ResourceManager.GetString("AssignmentPlanner_ContextualTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;GroupTemplate Id=&quot;Ribbon.Templates.AssignmentPlannerTemplate&quot;&gt;
        ///  &lt;Layout Title=&quot;AssignmentPlannerLayout&quot; LayoutTitle=&quot;AssignmentPlannerLayout&quot;&gt;
        ///    &lt;OverflowSection Type=&quot;OneRow&quot; DisplayMode=&quot;Large&quot; TemplateAlias=&quot;ONERW&quot; /&gt;
        ///	&lt;OverflowSection Type=&quot;OneRow&quot; DisplayMode=&quot;Large&quot; TemplateAlias=&quot;ONERWFIXED&quot; /&gt;
        ///    &lt;OverflowSection Type=&quot;ThreeRow&quot; DisplayMode=&quot;Medium&quot; TemplateAlias=&quot;THRRW&quot; /&gt;
        ///	&lt;OverflowSection Type=&quot;ThreeRow&quot; DisplayMode=&quot;Medium&quot; TemplateAlias=&quot;THRRWFIXED&quot; /&gt;
        ///  &lt;/Layout&gt;
        ///  &lt;Layout Title=&quot;A [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssignmentPlanner_ContextualTabTemplate {
            get {
                return ResourceManager.GetString("AssignmentPlanner_ContextualTabTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;AssignmentPlanner/&gt;.
        /// </summary>
        internal static string AssignmentPlanner_DataXml {
            get {
                return ResourceManager.GetString("AssignmentPlanner_DataXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;AssignmentPlanner/&gt;.
        /// </summary>
        internal static string AssignmentPlanner_LayoutXml {
            get {
                return ResourceManager.GetString("AssignmentPlanner_LayoutXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Sections&gt;
        ///	&lt;Section URL=&quot;{WebUrl}/mywork.aspx&quot; Title=&quot;Tasks&quot;&gt;
        ///		&lt;Items&gt;
        ///			&lt;Item Icon=&quot;_layouts/images/newtask.gif&quot; ID=&quot;1&quot;&gt;
        ///				&lt;Query List=&quot;Task Center&quot;&gt;
        ///					&lt;![CDATA[&lt;And&gt;&lt;Eq&gt;&lt;FieldRef Name=&apos;AssignedTo&apos;/&gt;&lt;Value Type=&apos;Integer&apos;&gt;&lt;UserID/&gt;&lt;/Value&gt;&lt;/Eq&gt;&lt;Gt&gt;&lt;FieldRef Name=&apos;Created&apos;/&gt;&lt;Value Type=&apos;DateTime&apos;&gt;&lt;Today OffsetDays=&quot;-2&quot;/&gt;&lt;/Value&gt;&lt;/Gt&gt;&lt;/And&gt;]]&gt;
        ///				&lt;/Query&gt;
        ///				&lt;Displays&gt;
        ///					&lt;Display Comparator=&quot;GT&quot; Value=&quot;1&quot;&gt;
        ///						&lt;![CDATA[You have &lt;a href=&quot;{WebUrl}/mywork.aspx&quot;&gt;{#} New Tasks&lt;/a&gt; assigned  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string defaultXml {
            get {
                return ResourceManager.GetString("defaultXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ToggleButton
        ///Id=&quot;Ribbon.List.ViewFormat.Gantt&quot;
        ///Sequence=&quot;20&quot;
        ///Command=&quot;DisplayGanttView&quot;
        ///Image32by32=&quot;/_layouts/epmlive/images/ganttview.gif&quot;
        ///LabelText=&quot;Gantt View&quot;
        ///QueryCommand=&quot;QueryDisplayGanttView&quot;
        ///TemplateAlias=&quot;o1&quot;
        ////&gt;
        ///
        ///
        ///.
        /// </summary>
        internal static string gridribbon {
            get {
                return ResourceManager.GetString("gridribbon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;GroupTemplate Id=&quot;Ribbon.Templates.Grid.Flexible&quot;&gt;
        ///	&lt;Layout Title=&quot;LargeLarge&quot;&gt;
        ///          &lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;o1&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///          &lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;o2&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///        &lt;/Layout&gt;
        ///        &lt;Layout Title=&quot;LargeMedium&quot;&gt;
        ///          &lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;o1&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///          &lt;OverflowSection Type=&quot;ThreeRow&quot; TemplateAlias=&quot;o2&quot; DisplayMode=&quot;Medium&quot;/&gt;
        ///        &lt;/Layout&gt;
        ///        &lt;Layout Ti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string gridribbontemplate {
            get {
                return ResourceManager.GetString("gridribbontemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table style=&quot;width: 450px;&quot;&gt;
        ///    &lt;tr&gt;
        ///    &lt;td&gt;&lt;input id=&quot;cbUseCentralizedSettings__ID__&quot; name=&quot;cbUseCentralizedSettings__ID__&quot;
        ///                    type=&quot;checkbox&quot; onclick=&quot;toggleCentralizedSettingsUsage__ID__()&quot; /&gt;
        ///      Use Centralized Settings
        ///      &lt;div style=&apos;width: 100%&apos; class=&apos;UserDottedLine&apos;&gt; &lt;/div&gt;&lt;/td&gt;
        ///  &lt;/tr&gt;
        ///  &lt;tr id=&quot;trListsAndFields__ID__&quot;&gt;
        ///    &lt;td&gt;&lt;table width=&quot;100%&quot;&gt;
        ///        &lt;tr&gt;
        ///          &lt;td colspan=&quot;3&quot;&gt;&lt;strong&gt;Lists and Fields&lt;/strong&gt;&lt;/td&gt;
        ///        &lt;/tr&gt;
        ///		&lt;tr&gt;
        ///          &lt;td  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MyWorkToolPart {
            get {
                return ResourceManager.GetString("MyWorkToolPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ContextualGroup Id=&quot;Ribbon.MyWorkContextualTabGroup&quot;
        ///				 Color=&quot;Blue&quot;
        ///				 Title=&quot;{title}&quot;
        ///				 Command=&quot;MyWorkContextualTab.EnableContextualGroup&quot;
        ///				 Sequence=&quot;502&quot;
        ///				 ContextualGroupId=&quot;MyWorkContextualTabGroup&quot;&gt;
        ///  &lt;Tab Id=&quot;Ribbon.MyWorkTab&quot;
        ///	   Title=&quot;Manage&quot;
        ///	   Description=&quot;Manage Work&quot;
        ///	   Command=&quot;MyWorkContextualTab.EnableMyWorkTab&quot;
        ///	   Sequence=&quot;501&quot;&gt;
        ///	&lt;Scaling Id=&quot;Ribbon.MyWorkTab.Scaling&quot;&gt;
        ///	  &lt;MaxSize Id=&quot;Ribbon.MyWorkTab.MaxSizeNew&quot; GroupId=&quot;Ribbon.MyWorkTab.MyWorkGroupNew&quot; Siz [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MyWorkWebPart_ContextualTab {
            get {
                return ResourceManager.GetString("MyWorkWebPart_ContextualTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;GroupTemplate Id=&quot;Ribbon.Templates.MyWorkTemplate&quot;&gt;
        ///  &lt;Layout Title=&quot;MyWorkLayout&quot; LayoutTitle=&quot;MyWorkLayout&quot;&gt;
        ///    &lt;OverflowSection Type=&quot;OneRow&quot; DisplayMode=&quot;Large&quot; TemplateAlias=&quot;ONERW&quot; /&gt;
        ///    &lt;OverflowSection Type=&quot;OneRow&quot; DisplayMode=&quot;Large&quot; TemplateAlias=&quot;ONERWFIXED&quot; /&gt;
        ///    &lt;OverflowSection Type=&quot;ThreeRow&quot; DisplayMode=&quot;Medium&quot; TemplateAlias=&quot;THRRW&quot; /&gt;
        ///	&lt;OverflowSection Type=&quot;ThreeRow&quot; DisplayMode=&quot;Medium&quot; TemplateAlias=&quot;THRRWFIXED&quot; /&gt;
        ///  &lt;/Layout&gt;
        ///  &lt;Layout Title=&quot;MyWorkLayoutSmall&quot; LayoutTitle= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MyWorkWebPart_ContextualTabTemplate {
            get {
                return ResourceManager.GetString("MyWorkWebPart_ContextualTabTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script type=&quot;text/javascript&quot;&gt;
        /////&lt;![CDATA[
        ///	function _addCustomPageComponent()
        ///	{
        ///		var _customPageComponent = new ContextualTabWebPart.CustomPageComponent(&apos;{webPartPageComponentId}&apos;,&apos;{allWorkGridId}&apos;,&apos;{workingOnGridId}&apos;);
        ///
        ///		var ribbonPageManager = SP.Ribbon.PageManager.get_instance();
        ///		ribbonPageManager.addPageComponent(_customPageComponent);
        ///		ribbonPageManager.get_focusManager().requestFocusForComponent(_customPageComponent);
        ///	}
        ///
        ///	function _registerCustomPageComponent()
        ///	{
        ///		SP.SOD.regist [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MyWorkWebPart_DelayScript {
            get {
                return ResourceManager.GetString("MyWorkWebPart_DelayScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;MyWork&gt;
        ///  &lt;Query&gt;
        ///    &lt;Where&gt;
        ///      &lt;Eq&gt;
        ///        &lt;FieldRef Name=&apos;Complete&apos; /&gt;
        ///        &lt;Value Type=&apos;Boolean&apos;&gt;1&lt;/Value&gt;
        ///      &lt;/Eq&gt;
        ///    &lt;/Where&gt;
        ///  &lt;/Query&gt;
        ///  &lt;CompleteItemsQuery&gt;True&lt;/CompleteItemsQuery&gt;
        ///&lt;/MyWork&gt;.
        /// </summary>
        internal static string MyWorkWebPart_MyWorkCompleteQuery {
            get {
                return ResourceManager.GetString("MyWorkWebPart_MyWorkCompleteQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;MyWork&gt;
        ///  &lt;Query&gt;
        ///    &lt;Where&gt;
        ///	  &lt;And&gt;
        ///	    &lt;Neq&gt;
        ///		  &lt;FieldRef Name=&quot;Complete&quot; /&gt;
        ///		  &lt;Value Type=&quot;Boolean&quot;&gt;1&lt;/Value&gt;
        ///		&lt;/Neq&gt;
        ///		&lt;Or&gt;
        ///		  &lt;IsNull&gt;
        ///		    &lt;FieldRef Name=&quot;DueDate&quot; /&gt;
        ///	      &lt;/IsNull&gt;
        ///		  &lt;And&gt;
        ///		    &lt;Geq&gt;
        ///			  &lt;FieldRef Name=&quot;DueDate&quot; /&gt;
        ///			  &lt;Value IncludeTimeValue=&quot;TRUE&quot; Type=&quot;DateTime&quot;&gt;{FromDateTime}&lt;/Value&gt;
        ///			&lt;/Geq&gt;
        ///			&lt;Leq&gt;
        ///			  &lt;FieldRef Name=&quot;DueDate&quot; /&gt;
        ///			  &lt;Value IncludeTimeValue=&quot;TRUE&quot; Type=&quot;DateTime&quot;&gt;{ToDateTime}&lt;/Value&gt;
        ///			&lt;/Leq&gt;
        ///	      &lt;/And&gt;
        ///		&lt;/Or&gt;
        ///	  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MyWorkWebPart_MyWorkNonCompleteQuery {
            get {
                return ResourceManager.GetString("MyWorkWebPart_MyWorkNonCompleteQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div align=&quot;center&quot; id=&quot;MWG_Loader_{12}&quot; width=&quot;100%&quot;&gt;&lt;img style=&quot;vertical-align:middle;&quot; src=&quot;_layouts/images/gears_anv4.gif&quot;/&gt;&amp;nbsp;Loading Items...&lt;/div&gt;
        ///&lt;div{2}&gt;
        ///&lt;treegrid Data_Url=&quot;{0}/_vti_bin/WorkEngine.asmx&quot; Data_Timeout=&quot;0&quot; Data_Method=&quot;Soap&quot; Data_Function=&quot;Execute&quot; Data_Namespace=&quot;workengine.com&quot; Data_Param_Function=&quot;GetMyWorkGridData&quot; Data_Param_Dataxml=&quot;{1}&quot;
        ///            Layout_Url=&quot;{0}/_vti_bin/WorkEngine.asmx&quot; Layout_Timeout=&quot;0&quot; Layout_Method=&quot;Soap&quot; Layout_Function=&quot;Execute&quot; Layout_Namespace [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MyWorkWebPart_TreeGridHtmlCode {
            get {
                return ResourceManager.GetString("MyWorkWebPart_TreeGridHtmlCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script type=&quot;text/javascript&quot;&gt;
        ///    var $ = document;
        ///    var cssId = &apos;MyWorkWebPartCss&apos;;
        ///    if (!$.getElementById(cssId))
        ///    {
        ///        var head = $.getElementsByTagName(&apos;head&apos;)[0];
        ///        var link = $.createElement(&apos;link&apos;);
        ///        link.id = cssId;
        ///        link.rel = &apos;stylesheet&apos;;
        ///        link.type = &apos;text/css&apos;;
        ///        link.href = &apos;/_layouts/epmlive/MyWorkWebPart.css&apos;;
        ///        link.media = &apos;all&apos;;
        ///        head.appendChild(link);
        ///    }
        ///
        ///    var activeGrid;
        ///    var activeRow;
        ///    var acti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MyWorkWebPartJS {
            get {
                return ResourceManager.GetString("MyWorkWebPartJS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ContextualGroup Id=&quot;Ribbon.ResourceGridContextualTabGroup&quot;
        ///				 Title=&quot;{title}&quot;
        ///				 Command=&quot;ResourceGridContextualTab.EnableContextualGroup&quot;
        ///				 Sequence=&quot;502&quot;
        ///				 ContextualGroupId=&quot;ResourceGridContextualTabGroup&quot;&gt;
        ///  &lt;Tab Id=&quot;Ribbon.ResourceGridTab&quot;
        ///	   Title=&quot;Manage&quot;
        ///	   Description=&quot;Manage Resources&quot;
        ///	   Command=&quot;ResourceGridContextualTab.EnableResourceGridTab&quot;
        ///	   Sequence=&quot;501&quot;&gt;
        ///	&lt;Scaling Id=&quot;Ribbon.ResourceGridTab.Scaling&quot;&gt;
        ///		&lt;MaxSize Id=&quot;Ribbon.ResourceGridTab.MaxSizeNew&quot; GroupId=&quot;Rib [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ResourceGrid_ContextualTab {
            get {
                return ResourceManager.GetString("ResourceGrid_ContextualTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;GroupTemplate Id=&quot;Ribbon.Templates.ResourceGridTemplate&quot;&gt;
        ///  &lt;Layout Title=&quot;ResourceGridLayout&quot; LayoutTitle=&quot;ResourceGridLayout&quot;&gt;
        ///    &lt;OverflowSection Type=&quot;OneRow&quot; DisplayMode=&quot;Large&quot; TemplateAlias=&quot;ONERW&quot; /&gt;
        ///    &lt;OverflowSection Type=&quot;ThreeRow&quot; DisplayMode=&quot;Medium&quot; TemplateAlias=&quot;THRRW&quot; /&gt;
        ///    &lt;OverflowSection Type=&quot;ThreeRow&quot; DisplayMode=&quot;Medium&quot; TemplateAlias=&quot;THRRWFIXED&quot; /&gt;
        ///  &lt;/Layout&gt;
        ///  &lt;Layout Title=&quot;ResourceGridLayoutSmall&quot; LayoutTitle=&quot;ResourceGridLayoutSmall&quot;&gt;
        ///	&lt;OverflowSection Type=&quot;OneRow&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ResourceGrid_ContextualTabTemplate {
            get {
                return ResourceManager.GetString("ResourceGrid_ContextualTabTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ResourceGridDataGrid&gt;
        ///	&lt;IncludeReadOnly&gt;true&lt;/IncludeReadOnly&gt;
        ///&lt;/ResourceGridDataGrid&gt;.
        /// </summary>
        internal static string ResourceGrid_DataXml {
            get {
                return ResourceManager.GetString("ResourceGrid_DataXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script type=&quot;text/javascript&quot;&gt;
        /////&lt;![CDATA[
        ///	function _addCustomPageComponent() {
        ///		var _customPageComponent = new ContextualTabWebPart.CustomPageComponent(&apos;{webPartPageComponentId}&apos;,&apos;{gridId}&apos;);
        ///
        ///		var ribbonPageManager = SP.Ribbon.PageManager.get_instance();
        ///		ribbonPageManager.addPageComponent(_customPageComponent);
        ///		ribbonPageManager.get_focusManager().requestFocusForComponent(_customPageComponent);
        ///	}
        ///
        ///	function _registerCustomPageComponent() {
        ///		SP.SOD.registerSod(&quot;EPMLive.ResourceGrid.Con [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ResourceGrid_DelayScript {
            get {
                return ResourceManager.GetString("ResourceGrid_DelayScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ResourceGridLayoutGrid/&gt;.
        /// </summary>
        internal static string ResourceGrid_LayoutXml {
            get {
                return ResourceManager.GetString("ResourceGrid_LayoutXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BeginUpdate
        ///BackColor = RGB(255,255,255)
        ///MarkSearchColumn = False
        ///ShowFocusRect = False
        ///HasLines = False
        ///LinesAtRoot = 1
        ///Indent = 24
        ///DefaultItemHeight = 20
        ///
        ///HTMLPicture(&quot;excel&quot;) = &quot;gAAAABgYAEAgBEChSohIAC0KFEKEEKIEKgkNhQAAkZjkCgkejshkUjkklk0nlEplUrlRofQSADbMhEABwl8xmYAI0KaoPawANgYYwAeIDIIARE3mU0A08n1AoVEo1IBVDYrjo7NrFQoaoqoAK5+IYAXE3N1iAB2tCcfcwQFosswpsCns/fDVmlBobQm4GHVMi0KJQBBcceE3VAscJ3XgADAAucFgWDwt1ADNVa6bgUtoAcxSxeWxuPyMfAGUjhwfkwGmdQ5kxbXAL/f+jyGByeEjhQzrwEJ1OOy2m20uC3SszpvE/A4m40+6TfLOOqmEZS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TextFile1 {
            get {
                return ResourceManager.GetString("TextFile1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;style type=&quot;text/css&quot;&gt;
        ///#backbutton {
        ///                TEXT-DECORATION: none
        ///}
        ///#backbutton IMG {
        ///                VERTICAL-ALIGN: top
        ///}
        ///.backbutton-text {
        ///                PADDING-LEFT: 3px; FONT-FAMILY: Segoe UI Light, Segoe, Helvetica; COLOR: #4f4f4f; FONT-SIZE: 16px; VERTICAL-ALIGN: middle
        ///}
        ///.backbutton {
        ///                PADDING-BOTTOM: 2px; MARGIN-TOP: 10px; PADDING-LEFT: 21px; WIDTH: 40px; BACKGROUND: url(/_layouts/epmlive/images/backbutton.png) no-repeat; MARGIN-LEFT: 10px
        ///}
        ///.backbutton:hove [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtBackButton {
            get {
                return ResourceManager.GetString("txtBackButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script type=&quot;text/javascript&quot;&gt;
        ///      ctx = new ContextInfo();
        ///      
        ///      var existingHash = &apos;&apos;;
        ///      if(window.location.href.indexOf(&quot;#&quot;) &gt; -1){
        ///        existingHash = window.location.href.substr(window.location.href.indexOf(&quot;#&quot;));
        ///      }
        ///      ctx.existingServerFilterHash = existingHash;
        ///      if (ctx.existingServerFilterHash.indexOf(&quot;ServerFilter=&quot;) == 1) {
        ///        ctx.existingServerFilterHash = ctx.existingServerFilterHash.replace(/-/g, &apos;&amp;&apos;).replace(/&amp;&amp;/g, &apos;-&apos;);
        ///        var serverFilterRoo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtContext {
            get {
                return ResourceManager.GetString("txtContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var singleItemUrl#gridid#;
        ///var arrColumnLookups#gridid#;
        ///var defaultxml#gridid#;
        ///var minValues#gridid#;
        ///var maxValues#gridid#;
        ///
        ///var firstItem#gridid# = 0;
        ///var lastItem#gridid# = 0;
        ///var fItemHide#gridid# = 0;
        ///var sf#gridid#;
        ///var sv#gridid#;
        ///var st#gridid#;
        ///
        ///var bPageSetup#gridid# = false;
        ///
        ///function selectRow#gridid#(id, ind)
        ///{
        ///	
        ///	curRowId = id;
        ///	curGrid = mygrid#gridid#;
        ///
        ///	var c = curGrid.cells(id, 0);
        ///	if (c.isCheckbox())
        ///	{
        ///		UnCheckAll(curGrid);
        ///		c.cell. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtEditGridJS {
            get {
                return ResourceManager.GetString("txtEditGridJS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script language=&quot;javascript&quot;&gt;
        ///function GanttZoomIn()
        ///{
        ///	var G2antt1#gridid# = document.getElementById(&quot;G2antt1#gridid#&quot;);
        ///	switch(G2antt1#gridid#.Chart.UnitScale)
        ///	{
        ///		case 2:
        ///			G2antt1#gridid#.Chart.UnitScale = 16;
        ///			G2antt1#gridid#.Chart.UnitWidth = 18;
        ///			G2antt1#gridid#.Chart.Level(1).Label = &quot;&lt;%m1%&gt;&quot;;
        ///            G2antt1#gridid#.Chart.Level(0).Label = &quot;&lt;%yyyy%&gt;&quot;;
        ///			break;
        ///		case 16:
        ///			G2antt1#gridid#.Chart.UnitScale = 256;
        ///			G2antt1#gridid#.Chart.UnitWidth = 18;
        ///			G2antt1#gridid#. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtFileFunctions {
            get {
                return ResourceManager.GetString("txtFileFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///	&lt;Cfg id=&apos;GanttGrid#gridid#&apos; SuppressCfg=&apos;1&apos; DateStrings=&apos;2&apos; ConstWidth=&quot;1&quot; NoVScroll=&quot;1&quot;/&gt;
        ///	&lt;Cfg MainCol=&apos;Title&apos; NameCol=&apos;Title&apos; Style=&apos;GM&apos; CSS=&quot;/_layouts/epmlive/treegrid/mywork/grid.css&quot;/&gt;
        ///	&lt;Cfg Undo=&apos;1&apos;/&gt;
        ///	&lt;Cfg ExportType=&apos;Expanded,Outline&apos;/&gt;
        ///	&lt;Cfg ChildParts=&apos;0&apos;/&gt;
        ///	&lt;Cfg PrintCols=&apos;1&apos;/&gt;
        ///	&lt;Cfg ExportCols=&apos;1&apos;/&gt;
        ///	&lt;Cfg ShowDeleted=&apos;0&apos; Calculated=&apos;0&apos;/&gt;
        ///	&lt;Cfg FullId=&apos;0&apos;/&gt;
        ///	&lt;Cfg SelectingCells=&quot;1&quot; SelectClass=&quot;0&quot; /&gt;
        ///	&lt;Cfg Searching=&apos;1&apos;/&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;&gt;&lt;/Toolbar&gt;
        ///	&lt;Panel Visible=&apos;0&apos;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtGanttLayout {
            get {
                return ResourceManager.GetString("txtGanttLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Group
        ///                Id=&quot;Ribbon.List.EPMLiveGanttView&quot;
        ///                Sequence=&quot;30&quot;
        ///                Command=&quot;EPMLiveGanttViewGroup&quot;
        ///                Description=&quot;&quot;
        ///                Title=&quot;Gantt&quot;
        ///                Image32by32Popup=&quot;/_layouts/#language#/images/formatmap32x32.png&quot; Image32by32PopupTop=&quot;-448&quot; Image32by32PopupLeft=&quot;-192&quot;
        ///                Template=&quot;Ribbon.Templates.Flexible2&quot;
        ///          &gt;
        ///            &lt;Controls Id=&quot;Ribbon.List.GanttView.Controls&quot;&gt;
        ///              &lt;Button
        ///                Id=&quot;R [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtGanttRibbon {
            get {
                return ResourceManager.GetString("txtGanttRibbon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///	&lt;Cfg id=&apos;Grid#gridid#&apos; SuppressCfg=&apos;1&apos; DateStrings=&apos;2&apos; ConstWidth=&quot;1&quot; NoVScroll=&quot;1&quot;/&gt;
        ///	&lt;Cfg MainCol=&apos;Title&apos; NameCol=&apos;Title&apos; Style=&apos;GM&apos; CSS=&quot;/_layouts/epmlive/treegrid/mywork/grid.css&quot;/&gt;
        ///	&lt;Cfg Undo=&apos;1&apos;/&gt;
        ///	&lt;Cfg ExportType=&apos;Expanded,Outline&apos;/&gt;
        ///	&lt;Cfg ChildParts=&apos;0&apos;/&gt;
        ///	&lt;Cfg PrintCols=&apos;1&apos;/&gt;
        ///	&lt;Cfg ExportCols=&apos;1&apos;/&gt;
        ///	&lt;Cfg ShowDeleted=&apos;0&apos; Calculated=&apos;0&apos;/&gt;
        ///	&lt;Cfg FullId=&apos;0&apos;/&gt;
        ///	&lt;Cfg SelectingCells=&quot;1&quot; SelectClass=&quot;0&quot; /&gt;
        ///	&lt;Cfg Searching=&apos;1&apos;/&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;&gt;&lt;/Toolbar&gt;
        ///	&lt;Panel Visible=&apos;0&apos; /&gt;
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtGridLayout {
            get {
                return ResourceManager.GetString("txtGridLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;LI id=mp1_0_5 class=&quot;ms-core-menu-item&quot; type=option text=&quot;Shared With&quot; onClick=&quot;#gridfunc#&quot; iconSrc=&quot;#image#&quot; type=&quot;option&quot; iconAltText sequence=&quot;1160&quot; CUICommand=&quot;&quot;&gt;
        ///
        ///&lt;A id=mp1_0_5_Anchor class=ms-core-menu-link title=&quot;#title#&quot; onclick=&quot;return false;&quot; href=&quot;javascript:;&quot;&gt;
        ///&lt;DIV class=ms-hide&gt;&lt;IMG id=mp1_0_5_ICON title=&quot;&quot; alt=&quot;&quot; src=&quot;#image#&quot; width=16 height=16&gt;&lt;/DIV&gt;
        ///&lt;DIV id=ID_MngPerms class=ms-core-menu-label&gt;&lt;SPAN class=ms-core-menu-title&gt;#title#&lt;/SPAN&gt;&lt;SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;SPAN class=ms-accessible&gt;&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtGridMenus {
            get {
                return ResourceManager.GetString("txtGridMenus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div id=&quot;dlgSaving#gridid#&quot; class=&quot;dialog&quot;&gt;
        ///    &lt;table width=&quot;100%&quot;&gt;
        ///        &lt;tr&gt;
        ///            &lt;td align=&quot;center&quot; class=&quot;ms-sectionheader&quot;&gt;
        ///                &lt;img src=&quot;_layouts/images/gears_anv4.gif&quot; style=&quot;vertical-align: middle;&quot;/&gt;&lt;br /&gt;
        ///                &lt;H3 class=&quot;ms-standardheader&quot;&gt;Saving Items...&lt;/h3&gt;
        ///            &lt;/td&gt;
        ///        &lt;/tr&gt;
        ///    &lt;/table&gt;
        ///&lt;/div&gt; 
        ///
        ///&lt;div id=&quot;dlgRefresh#gridid#&quot; class=&quot;dialog&quot;&gt;
        ///    &lt;table width=&quot;100%&quot;&gt;
        ///        &lt;tr&gt;
        ///            &lt;td align=&quot;center&quot; class=&quot;ms-sectionheader&quot;&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtGridSaving {
            get {
                return ResourceManager.GetString("txtGridSaving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	function changeList()
        ///	{
        ///		document.getElementById(&quot;divTpLoading&quot;).style.display = &quot;&quot;;
        ///		document.getElementById(&quot;divEverything&quot;).style.display = &quot;none&quot;;
        ///		
        ///		var ddlList = document.getElementById(&quot;ddlList#tpid#&quot;);
        ///		var strList = ddlList.options[ddlList.selectedIndex].value;
        ///		
        ///		dhtmlxAjax.post(webUrl + &quot;/_layouts/epmlive/getListInfo.aspx&quot;, &quot;listurl=&quot; + strList, changeListResponse);	
        ///	}
        ///	
        ///	
        ///	function changeListResponse(loader)
        ///	{
        ///		if(loader.xmlDoc.responseText!=null)
        ///		{
        ///			var xmlDoc =  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtGridToolpartJS {
            get {
                return ResourceManager.GetString("txtGridToolpartJS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var singleEditItemUrl#gridid#;
        ///var inEditMode#gridid#;
        ///
        ///function fireEvent(element,event){
        ///    if (document.createEventObject){
        ///        // dispatch for IE
        ///        var evt = document.createEventObject();
        ///        return element.fireEvent(&apos;on&apos;+event,evt)
        ///    }
        ///    else{
        ///        // dispatch for firefox + others
        ///        var evt = document.createEvent(&quot;HTMLEvents&quot;);
        ///        evt.initEvent(event, true, true ); // event type,bubbling,cancelable
        ///        return !element.dispatchEvent(evt);
        ///    }
        ///}
        ///
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtInlineEdit {
            get {
                return ResourceManager.GetString("txtInlineEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	function changeList()
        ///	{
        ///		document.getElementById(&quot;divTpLoading&quot;).style.display = &quot;&quot;;
        ///		document.getElementById(&quot;divEverything&quot;).style.display = &quot;none&quot;;
        ///		
        ///		var ddlList = document.getElementById(&quot;ddlList#tpid#&quot;);
        ///		var strList = ddlList.options[ddlList.selectedIndex].value;
        ///		
        ///		dhtmlxAjax.post(webUrl + &quot;/_layouts/epmlive/getListInfo.aspx&quot;, &quot;listurl=&quot; + strList, changeListResponse);	
        ///	}
        ///	
        ///	
        ///	function changeListResponse(loader)
        ///	{
        ///		if(loader.xmlDoc.responseText!=null)
        ///		{
        ///			var xmlDoc =  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtListSummaryJS {
            get {
                return ResourceManager.GetString("txtListSummaryJS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Views&gt;
        ///	&lt;View Name=&quot;All Work&quot; WBS=&quot;0&quot; ShowCompleteCheck=&quot;1&quot; Default=&quot;1&quot;&gt;
        ///		&lt;Column Name=&quot;~Icon&quot;/&gt;
        ///		&lt;Column Name=&quot;Title&quot; Display=&quot;Title&quot;/&gt;
        ///		&lt;Column Name=&quot;~Site&quot;/&gt;
        ///		&lt;Column Name=&quot;~List&quot;/&gt;
        ///		&lt;Column Name=&quot;StartDate&quot; Display=&quot;Start&quot; Format=&quot;DateOnly&quot;/&gt;
        ///		&lt;Column Name=&quot;DueDate&quot; Display=&quot;Finish&quot; Format=&quot;DateOnly&quot;/&gt;
        ///		&lt;Column Name=&quot;PercentComplete&quot; Display=&quot;% Complete&quot; Format=&quot;Percent&quot;/&gt;
        ///		&lt;Column Name=&quot;~Complete&quot;/&gt;
        ///		
        ///		&lt;GroupBy Column=&quot;Project&quot; Expand=&quot;1&quot;/&gt;
        ///		&lt;GroupBy Column=&quot;~List&quot; Expand=&quot;1&quot;/&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyWorkRollupXML {
            get {
                return ResourceManager.GetString("txtMyWorkRollupXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///	        &lt;/td&gt;
        ///	    &lt;/tr&gt;
        ///	&lt;/table&gt;
        ///&lt;/td&gt;
        ///&lt;td class=&quot;ms-toolbar&quot; nowrap=&quot;true&quot; align=&quot;right&quot;&gt;
        ///	&lt;table border=0 cellpadding=0 cellspacing=0 style=&apos;margin-right: 4px&apos;&gt;
        ///		    &lt;tr&gt;
        ///		    
        ///		    &lt;td nowrap class=&quot;ms-listheaderlabel&quot;&gt;Resource Pool View:&amp;nbsp;&lt;/td&gt;
        ///            &lt;td id=&quot;&quot; nowrap=&quot;nowrap&quot; class=&quot;ms-viewselector&quot;&gt;
        ///			
        ///				&lt;select onChange=&quot;changeview#gridid#()&quot; id=&quot;viewselector#gridid#&quot;&gt;
        ///					#lists#
        ///				&lt;/select&gt;
        ///
        ///            &lt;/td&gt;
        ///            &lt;/tr&gt;
        ///		    &lt;/table&gt;
        ///&lt;/td&gt;
        ///&lt;/tr&gt;
        ///&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtResourcePlannerBottom {
            get {
                return ResourceManager.GetString("txtResourcePlannerBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function postResources#gridid#(){
        ///	var arrRows = mygrid#gridid#.getCheckedRows(0).split(&apos;,&apos;);
        ///	var ress = &quot;&quot;;
        ///	var resCount = 0;
        ///	if(arrRows != &apos;&apos;)
        ///	{
        ///		for(var i = 0;i &lt; arrRows.length;i++)
        ///		{
        ///			var res = mygrid#gridid#.getUserData(arrRows[i],&quot;itemid&quot;);
        ///			if(res !=&quot;&quot;)
        ///			{
        ///				ress += &quot;|&quot; + res;
        ///				resCount++;
        ///			}
        ///		}
        ///		if(resCount &gt; 20)
        ///		{
        ///			alert(&apos;If you select more than 20 resources, performance may decrease.&apos;);
        ///		}
        ///		if(ress != &quot;&quot;)
        ///		{
        ///			ress = ress.substring(1);
        ///			docume [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtResourcePlannerJavascript1 {
            get {
                return ResourceManager.GetString("txtResourcePlannerJavascript1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mygrid#gridid#.addFocusedCommands = function($arr)
        ///{
        ///	Array.add($arr, &apos;EnableResourcePlannerTab&apos;);
        ///	Array.add($arr, &apos;EnableResourcePlannerMain&apos;);
        ///	Array.add($arr, &apos;SelectResources&apos;);
        ///	Array.add($arr, &apos;SavePlan&apos;);
        ///	Array.add($arr, &apos;OpenPlan&apos;);
        ///	Array.add($arr, &apos;PrintPlan&apos;);
        ///	Array.add($arr, &apos;EnableResourcePlannerGantt&apos;);
        ///	Array.add($arr, &apos;ZoomOut&apos;);
        ///	Array.add($arr, &apos;ZoomIn&apos;);
        ///	Array.add($arr, &apos;ScrollTo&apos;);
        ///	return $arr;
        ///}
        ///
        ///mygrid#gridid#.getGlobalCommands = function($arr)
        ///{
        ///	return $arr;
        ///}        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtResourcePlannerRibbonScripts {
            get {
                return ResourceManager.GetString("txtResourcePlannerRibbonScripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Tab Id=&quot;Ribbon.ResourcePlanner&quot; Title=&quot;Planner&quot; Description=&quot;&quot; Command=&quot;EnableResourcePlannerTab&quot; Sequence=&quot;501&quot;&gt;
        ///	&lt;Scaling Id=&quot;Ribbon.ResourcePlanner.Scaling&quot;&gt;
        ///    	&lt;MaxSize Id=&quot;Ribbon.ResourcePlanner.Scaling.Main.MaxSize&quot; Sequence=&quot;10&quot; GroupId=&quot;Ribbon.ResourcePlanner.Main&quot; Size=&quot;LargeLarge&quot; /&gt;
        ///		&lt;MaxSize Id=&quot;Ribbon.ResourcePlanner.Scaling.Gantt.MaxSize&quot; Sequence=&quot;10&quot; GroupId=&quot;Ribbon.ResourcePlanner.Gantt&quot; Size=&quot;MediumMedium&quot; /&gt;
        ///    &lt;/Scaling&gt;
        ///	&lt;Groups Id=&quot;ResourcePlannerGroups&quot;&gt;
        ///		&lt;Group Id=&quot;Ribbon [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtResourcePlannerTab {
            get {
                return ResourceManager.GetString("txtResourcePlannerTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table class=&quot;ms-menutoolbar&quot; cellpadding=&quot;2&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///&lt;tr height=&quot;23&quot;&gt;
        ///&lt;td class=&quot;ms-toolbar&quot; &gt;
        ///	&lt;table&gt;
        ///        &lt;tr&gt;
        ///        &lt;td valign=&quot;center&quot;&gt;.
        /// </summary>
        internal static string txtResourcePlannerTop {
            get {
                return ResourceManager.GetString("txtResourcePlannerTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var curGrid;
        ///var curRowId;
        ///var curRow;
        ///
        ///function epmlive_delete(grid, rowid)
        ///{
        ///	if(confirm(&apos;Are you sure you want to send the item(s) to the Recycle Bin?&apos;))
        ///	{
        ///		if(grid)
        ///			curGrid = grid;
        ///
        ///		if(rowid)
        ///			curRowId = rowid;
        ///
        ///		var weburl = curGrid.getUserData(curRowId,&quot;SiteUrl&quot;);
        ///		var listid = curGrid.getUserData(curRowId,&quot;listid&quot;);
        ///		var itemid = curGrid.getUserData(curRowId,&quot;itemid&quot;);
        ///		var webid = curGrid.getUserData(curRowId,&quot;webid&quot;);
        ///
        ///		if(weburl == &quot;/&quot;)
        ///			weburl = &quot;&quot;;
        ///
        ///
        ///
        ///		we [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtRibbonScripts {
            get {
                return ResourceManager.GetString("txtRibbonScripts", resourceCulture);
            }
        }
    }
}
