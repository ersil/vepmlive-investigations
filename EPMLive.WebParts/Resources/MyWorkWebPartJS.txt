<script type="text/javascript">
    var $ = document;
    var cssId = 'MyWorkWebPartCss';
    if (!$.getElementById(cssId))
    {
        var head = $.getElementsByTagName('head')[0];
        var link = $.createElement('link');
        link.id = cssId;
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = '/_layouts/epmlive/MyWorkWebPart.css';
        link.media = 'all';
        head.appendChild(link);
    }

    var activeGrid;
    var activeRow;
    var activeCol;

    var activeFlag;

    var editMode = new Object();

    var iconUrl = '/_layouts/epmlive/images/mywork/';

    function priorityPopup(grid, row, col)
    {
        activeGrid = grid;
        activeRow = row;
        activeCol = col;

        grid.CloseDialog();

        var hpImg = iconUrl + 'high-priority.png';
        var mpImg = iconUrl + 'medium-priority.png';
        var lpImg = iconUrl + 'low-priority.png';

        var priority;

        switch (grid.GetValue(row, col))
        {
            case hpImg:
                priority = 'high';
                break;
            case lpImg:
                priority = 'low';
                break;
            case mpImg:
            default:
                priority = 'medium';
                break;
        }

        var html = '<ul class="MWG_Popup"><li';

        if (priority == 'high') html += ' class="MWG_PopupSelected"';

        html += ' onclick="setCellValue(\'' + hpImg + '\')"><img src="' + hpImg + '" /></li><li';

        if (priority == 'medium') html += ' class="MWG_PopupSelected"';

        html += ' onclick="setCellValue(\'' + mpImg + '\')"><img src="' + mpImg + '" /></li><li';

        if (priority == 'low') html += ' class="MWG_PopupSelected"';

        html += ' onclick="setCellValue(\'' + lpImg + '\')"><img src="' + lpImg + '" /></li></ul>';

        grid.ShowDialog(row, col, html);
    }

    function setCellValue(value, grid, row, col)
    {
        grid = grid || activeGrid;
        row = row || activeRow;
        col = col || activeCol;

        grid.SetValue(row, col, value, 1);
    }

    function updateFlag(grid, row, col)
    {
        activeGrid = grid;
        activeRow = row;
        activeCol = col;

        grid.CloseDialog();

        var unflaggedImg = iconUrl + 'unflagged.png';
        var flaggedImg = iconUrl + 'flagged.png';

        switch (grid.GetValue(row, col))
        {
            case flaggedImg:
                activeFlag = 0;
                break;
            case unflaggedImg:
            default:
                activeFlag = 1;
                break;
        }

        var dataXml = '<MyPersonalization><Item ID="' + activeRow['ItemID'] + '" /><List ID="' + activeRow['ListID'] + '" /><Web ID="' + activeRow['WebID'] + '" /><Site ID="' + activeRow['SiteID'] + '" /><Personalizations><Personalization Key="Flag" Value="' + activeFlag + '" /></Personalizations></MyPersonalization>';

        EPMLiveCore.WorkEngineAPI.Execute("SetMyPersonalization", dataXml, flagUpdateCompleted);
    }

    function flagUpdateCompleted(response)
    {
        if (responseIsSuccess(response))
        {
            var flag = iconUrl + 'unflagged.png';
            if (activeFlag == 1) flag = iconUrl + 'flagged.png';

            setCellValue(flag);
        } else activeGrid.CloseDialog();
    }

    function responseIsSuccess(response)
    {
        return getDocFromXml(response).documentElement.attributes[0].value == 0;
    }

    function editSaveRow(grid, row, col)
    {
        if (editMode[row.id] == "undefined") editMode[row.id] = false;

        if (!editMode[row.id])
        {
            activeGrid = grid;

            var saveRowHtml = $.getElementById('MWG_SaveRowHtml').innerHTML;
            saveRowHtml = saveRowHtml.replace(/RowID/g, row.id);

            setCellValue(saveRowHtml, null, row, col);

            editRow(grid, row);

            editMode[row.id] = true;
        } else editMode[row.id] = false;
    }

    function editRow(grid, row)
    {
        var editableFields = getEditableFields(grid, row);

        var i = 0;
    }

    function getEditableFields(grid, row)
    {
        var dataXml = '<FieldInfo><Item ID="' + row['ItemID'] + '" /><List ID="' + row['ListID'] + '" /><Web ID="' + row['WebID'] + '" /><Site ID="' + row['SiteID'] + '" /><Fields>';

        var cols = grid.ColNames[1];

        for (var col in cols)
        {
            dataXml += cols[col] + ',';
        }

        dataXml = dataXml.substring(0, dataXml.length - 1);

        dataXml += '</Fields></FieldInfo>';

        EPMLiveCore.WorkEngineAPI.Execute("IsFieldEditable", dataXml, getEditableFieldsCompleted);
    }

    function getEditableFieldsCompleted(response)
    {
        if (responseIsSuccess(response))
        {
            var doc = getDocFromXml(response);

            var fields = doc.documentElement.children[0].children[0].children;

            return fields;

            for (var f in fields)
            {
                
            }
        }
    }

    function getDocFromXml(response)
    {
        var doc;

        if (window.ActiveXObject) // code for IE
        {
            doc = new ActiveXObject("Microsoft.XMLDOM");
            doc.async = "false";
            doc.loadXML(response);
        }
        else // code for Mozilla, Firefox, Opera, etc.
        {
            var parser = new DOMParser();
            doc = parser.parseFromString(response, "text/xml");
        }

        return doc;
    }

    function cancelRowEdit(rowId)
    {
        setCellValue('<div class="MWG_EditRow">&nbsp;</div>', null, activeGrid.Rows[rowId], 'Edit');
        rowEditingCanceled = true;

        return true;
    }
</script>