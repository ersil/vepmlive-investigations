<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:NewsGator.Install.Resources.WpfMessageBox"
    xmlns:Controls="clr-namespace:NewsGator.Install.Resources"
    xmlns:CommonResources="clr-namespace:NewsGator.Install.Resources" >

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="5,5,0,0"></Setter>
    </Style>

    <Style x:Key="OutputUI" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="Margin" Value="0,0,0,0"></Setter>        
        <Setter Property="Padding" Value="0,0,0,0"></Setter>
    </Style>

    <Style x:Key="OutputUIVerbose" TargetType="Label">
        <Setter Property="Foreground" Value="#666666"></Setter>
        <Setter Property="Margin" Value="7,0,7,0"></Setter>
        <Setter Property="Padding" Value="0,0,0,0"></Setter>
    </Style>

    <Style x:Key="OutputUILabel" TargetType="Label">
        <Setter Property="Foreground" Value="#666666"></Setter>
        <Setter Property="Margin" Value="7,3,7,0"></Setter>
        <Setter Property="Padding" Value="0,0,0,0"></Setter>
    </Style>

    <Style x:Key="OutputUIWarnings" TargetType="Label">
        <Setter Property="Foreground" Value="#d3a400"></Setter>
        <Setter Property="Margin" Value="7,0,7,0"></Setter>
        <Setter Property="Padding" Value="0,0,0,0"></Setter>
    </Style>

    <Style x:Key="OutputUIErrors" TargetType="Label">
        <Setter Property="Foreground" Value="#d30000"></Setter>
        <Setter Property="Margin" Value="7,0,7,0"></Setter>
        <Setter Property="Padding" Value="0,0,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" x:Key="ScrollViewBorder">
        <Setter Property="Background" Value="#F2F2F2"></Setter>
        <Setter Property="BorderBrush" Value="#dadada"></Setter>
        <Setter Property="BorderThickness" Value="0,2,0,2"></Setter>
        <Setter Property="Padding" Value="0,0,0,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle
                                    Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                    x:Name="Corner"
                                    Grid.Column="1"
                                    Grid.Row="1"/>
                            <ScrollContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    x:Name="PART_ScrollContentPresenter"
                                    Grid.Column="0"
                                    Grid.Row="0"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"/>
                            <ScrollBar
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                    Cursor="Arrow"
                                    x:Name="PART_VerticalScrollBar"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    Minimum="0"
                                    Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    AutomationProperties.AutomationId="VerticalScrollBar"/>
                            <ScrollBar
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                    Cursor="Arrow" x:Name="PART_HorizontalScrollBar"
                                    Grid.Column="0"
                                    Grid.Row="1"
                                    Orientation="Horizontal"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    Minimum="0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    AutomationProperties.AutomationId="HorizontalScrollBar"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="10,0,10,10"></Setter>
        <Setter Property="Padding" Value="5,5,5,5"></Setter>
        <Setter Property="BorderBrush" Value="#dadada"></Setter>
        <Setter Property="BorderThickness" Value="2"></Setter>
        <Setter Property="Width" Value="300"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="Margin" Value="10,0,10,10"></Setter>
        <Setter Property="Padding" Value="5,5,5,5"></Setter>
        <Setter Property="BorderBrush" Value="#dadada"></Setter>
        <Setter Property="BorderThickness" Value="2"></Setter>
        <Setter Property="Width" Value="300"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Margin" Value="10,0,10,10"></Setter>
        <Setter Property="Padding" Value="5,5,5,5"></Setter>
        <Setter Property="BorderBrush" Value="#dadada"></Setter>
        <Setter Property="BorderThickness" Value="2"></Setter>
        <Setter Property="Width" Value="300"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
    </Style>

    <Style x:Key="ModernUIWindow" TargetType="Window">
        <Setter Property="Background" Value="#f8f8f8"></Setter>
        <Setter Property="Foreground" Value="#666666"></Setter>
        <Setter Property="BorderBrush" Value="#dadada"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Margin" Value="0,0,0,0"></Setter>        
    </Style>

    <Style x:Key="ModernUIGrid" TargetType="Grid">
        <Setter Property="Height" Value="92"></Setter>
        <Setter Property="Margin" Value="0,0,0,0"></Setter>
    </Style>
    
    <Style x:Key="ModernUIBorder" TargetType="Border">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="BorderBrush" Value="#dadada"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,2"></Setter>
        <Setter Property="Padding" Value="16,0,16,0"></Setter>
        <Setter Property="Background" Value="#FFFFFF"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#f8f8f8"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernUIBorderNonInteractive" TargetType="Border">        
        <Setter Property="BorderBrush" Value="#dadada"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,2"></Setter>
        <Setter Property="Padding" Value="16,0,16,0"></Setter>
        <Setter Property="Background" Value="#FFFFFF"></Setter>
    </Style>

    <Style x:Key="ModernUIWindowBackground" TargetType="Grid">
        <Setter Property="Background" Value="#f8f8f8"></Setter>
    </Style>

    <Style x:Key="ModernUIText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
    </Style>

    <Style x:Key="ModernUIToolButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>

    <Style x:Key="ModernUITitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontWeight" Value="Light"></Setter>
        <Setter Property="FontSize" Value="28"></Setter>
        <Setter Property="Foreground" Value="#252525"></Setter>
    </Style>

    <Style x:Key="ModernUISectionTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontWeight" Value="Light"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="Foreground" Value="#f79827"></Setter>
        <Setter Property="Margin" Value="0,10,0,0"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
    </Style>

    <Style x:Key="ModernUISectionTitleNonInteractive" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontWeight" Value="Light"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="Foreground" Value="#252525"></Setter>
        <Setter Property="Margin" Value="0,10,0,0"></Setter>
    </Style>

    <Style x:Key="ModernUISectionTitleNonInteractiveNoMargin" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontWeight" Value="Light"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="Foreground" Value="#252525"></Setter>
        <Setter Property="Margin" Value="0,0,0,0"></Setter>
    </Style>

    <Style x:Key="ModernUISplash" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontWeight" Value="Light"></Setter>
        <Setter Property="FontSize" Value="34"></Setter>
        <Setter Property="Foreground" Value="#f79827"></Setter>
    </Style>

    <Style x:Key="ModernUISubtitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontWeight" Value="Light"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="Foreground" Value="#000000"></Setter>
    </Style>

    <Style x:Key="ModernUITextLabel" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Foreground" Value="#666666"></Setter>        
    </Style>

    <Style x:Key="ModernUITextLabelAction" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Foreground" Value="#f79827"></Setter>
        <Setter Property="TextDecorations" Value="Underline"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="MinHeight" Value="12"></Setter>
    </Style>

    <Style x:Key="ModernUIButtonPrimary" TargetType="Button">
        <Setter Property="Margin" Value="0,0,20,0"></Setter>
        <Setter Property="Foreground" Value="#f79827"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#252525"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernUIButtonSecondary" TargetType="Button">
        <Setter Property="Margin" Value="20,0,0,0"></Setter>
        <Setter Property="Foreground" Value="#f79827"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>        
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#252525"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- WPFMessageBox -->
    <Style TargetType="{x:Type local:WpfMessageBoxControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WpfMessageBoxControl}">
                    <Grid FlowDirection="{Binding ContentFlowDirection}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="2" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="60" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="45" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        
                        <Image Source="{Binding MessageImageSource}" HorizontalAlignment="Left" VerticalAlignment="Center" Height="32" Width="32" Margin="10 2 0 0" />

                        <TextBlock Text="{Binding Message}" Grid.RowSpan="2" Grid.Column="1" TextWrapping="Wrap" TextAlignment="Left" HorizontalAlignment="{Binding ContentTextAlignment}" VerticalAlignment="Top" Margin="10 10 10 10" />
                        
                        <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"  Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 5 0" >
                            <Button Style="{DynamicResource ModernUIButtonSecondary}" Content="{x:Static CommonResources:UserDisplay.ButtonYes}" Visibility="{Binding YesNoVisibility}" Command="{Binding YesCommand}" IsDefault="{Binding IsYesDefault}" Margin="5 5 5 5" Height="30" Width="80">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                RecognizesAccessKey="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button Style="{DynamicResource ModernUIButtonSecondary}" Content="{x:Static CommonResources:UserDisplay.ButtonNo}" Visibility="{Binding YesNoVisibility}" Command="{Binding NoCommand}" IsDefault="{Binding IsNoDefault}" Margin="5 5 5 5" Height="30" Width="80">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                RecognizesAccessKey="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button Style="{DynamicResource ModernUIButtonSecondary}" Content="{x:Static CommonResources:UserDisplay.ButtonOk}" Visibility="{Binding OkVisibility}" Command="{Binding OkCommand}" IsDefault="{Binding IsOkDefault}" Margin="5 5 5 5" Height="30" Width="80">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                RecognizesAccessKey="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button Style="{DynamicResource ModernUIButtonSecondary}" Content="{x:Static CommonResources:UserDisplay.ButtonCancel}" Visibility="{Binding CancelVisibility}" Command="{Binding CancelCommand}" IsDefault="{Binding IsCancelDefault}" Margin="5 5 5 5" Height="24" Width="80">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                RecognizesAccessKey="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>                        
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Chrome Styles -->
    <ControlTemplate
        x:Key="ChromeButtonControlTemplate"
        TargetType="{x:Type ButtonBase}">
        <Border
            x:Name="Chrome"
            BorderBrush="{TemplateBinding BorderBrush}"
            Margin="0"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
            <ContentPresenter
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FFADADAD" />
                <Setter Property="Opacity" TargetName="Chrome" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style
                x:Key="ChromeButtonStyle"
                TargetType="{x:Type Button}">
        <Style.Resources>
            <Storyboard
                        x:Key="OnMouseDownStoryboard">
                <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="{x:Null}">
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
                        x:Key="OnMouseUpStoryboard">
                <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="{x:Null}">
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </Style.Resources>
        <Setter
                    Property="Background"
                    Value="#00000000" />
        <Setter
                    Property="BorderBrush"
                    Value="{x:Null}" />
        <Setter
                    Property="BorderThickness"
                    Value="0" />
        <Setter
                    Property="Padding"
                    Value="0" />
        <Setter
                    Property="Cursor"
                    Value="Hand" />
        <Setter
                    Property="Template"
                    Value="{StaticResource ChromeButtonControlTemplate}" />
        <Style.Triggers>
            <Trigger
                        Property="IsEnabled"
                        Value="False">
                <Setter
                            Property="Opacity"
                            Value="0.5" />
            </Trigger>
            <EventTrigger
                        RoutedEvent="Mouse.PreviewMouseDown">
                <BeginStoryboard
                            x:Name="OnMouseDown_BeginStoryboard"
                            Storyboard="{StaticResource OnMouseDownStoryboard}" />
            </EventTrigger>
            <EventTrigger
                        RoutedEvent="Mouse.PreviewMouseUp">
                <BeginStoryboard
                            x:Name="OnMouseUp_BeginStoryboard"
                            Storyboard="{StaticResource OnMouseUpStoryboard}" />
            </EventTrigger>
        </Style.Triggers>
    </Style>    
</ResourceDictionary>
