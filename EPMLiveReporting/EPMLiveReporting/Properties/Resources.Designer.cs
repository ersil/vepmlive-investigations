//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPMLiveReportsAdmin.Properties
{
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EPMLiveReportsAdmin.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to DECLARE @creatoralter varchar(10)
        ///IF NOT EXISTS (SELECT routine_name FROM INFORMATION_SCHEMA.routines WHERE routine_name = &apos;spGetWebs&apos;)
        ///BEGIN
        ///    PRINT &apos;Creating Stored Procedure spGetWebs&apos;
        ///    SET @creatoralter = &apos;CREATE&apos;
        ///END
        ///ELSE
        ///BEGIN
        ///    PRINT &apos;Updating Stored Procedure spGetWebs&apos;
        ///    SET @creatoralter = &apos;ALTER&apos;
        ///END
        ///EXEC(@creatoralter + &apos; PROCEDURE [dbo].[spGetWebs]
        ///      -- Add the parameters for the stored procedure here
        ///      @UserId AS INT,
        ///      @SiteId AS UNIQUEIDENTIFIER
        ///AS
        ///BEGIN        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CheckReqSP
        {
            get
            {
                return ResourceManager.GetString("CheckReqSP", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ---------------TABLE: ReportListIds----------------------
        ///IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.tables WHERE TABLE_NAME = &apos;ReportListIds&apos;)
        ///BEGIN
        ///	PRINT &apos;Creating Table ReportListIds&apos;
        ///	CREATE TABLE [dbo].[ReportListIds] ( Id uniqueidentifier )
        ///END
        /// 
        ///IF NOT EXISTS (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = &apos;ReportListIds&apos; AND COLUMN_NAME = &apos;ListIcon&apos;)
        ///BEGIN
        ///	PRINT &apos;Add Column ListIcon&apos;
        ///	ALTER TABLE [dbo].[ReportListIds]
        ///	ADD [ListIcon] [NVARCHAR](100)  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CheckSchema
        {
            get
            {
                return ResourceManager.GetString("CheckSchema", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to EPMLIVE.
        /// </summary>
        internal static string EpmliveConnectionStringReference
        {
            get
            {
                return ResourceManager.GetString("EpmliveConnectionStringReference", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to EPMLiveReportsAdmin.ListFieldAdded.
        /// </summary>
        internal static string FieldAddedEvent
        {
            get
            {
                return ResourceManager.GetString("FieldAddedEvent", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to EPMLiveReportsAdmin.ListFieldAdding.
        /// </summary>
        internal static string FieldAddingEvent
        {
            get
            {
                return ResourceManager.GetString("FieldAddingEvent", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to EPMLiveReportsAdmin.ListFieldUpdated.
        /// </summary>
        internal static string FieldUpdatedEvent
        {
            get
            {
                return ResourceManager.GetString("FieldUpdatedEvent", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to declare @createoralter varchar(10)
        ///if not exists (select routine_name from INFORMATION_SCHEMA.routines where routine_name = &apos;spGetReportListData&apos;)
        ///begin
        ///    Print &apos;Creating Function spGetReportListData&apos;
        ///    SET @createoralter = &apos;CREATE&apos;
        ///end
        ///else
        ///begin
        ///    Print &apos;Updating Function spGetReportListData&apos;
        ///    SET @createoralter = &apos;ALTER&apos;
        ///end
        ///exec(@createoralter + &apos;  PROCEDURE [dbo].[spGetReportListData]
        ///
        ///@siteid uniqueidentifier,
        ///@webid uniqueidentifier,
        ///@weburl varchar(255),
        ///@userid	int,
        ///@rollu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string spGetReportListData
        {
            get
            {
                return ResourceManager.GetString("spGetReportListData", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to CREATE PROCEDURE spUpdateStatusFields
        ///
        ///@listtable varchar(255),
        ///@yellow int = 0,
        ///@red int = 30
        ///
        ///AS
        ///BEGIN
        ///
        ///
        ///declare @cols as bit
        ///set @cols = 1
        ///declare @sql as varchar(MAX)
        ///
        ///if exists (select column_name FROM INFORMATION_SCHEMA.COLUMNS where table_name = @listtable and column_name = &apos;DueDate&apos;)
        ///begin
        ///      ----------------------Days Overdue------------
        ///      if exists (select column_name FROM INFORMATION_SCHEMA.COLUMNS where table_name = @listtable and column_name = &apos;DaysOverdue&apos;)
        ///      begin [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string spUpdateStatusFields
        {
            get
            {
                return ResourceManager.GetString("spUpdateStatusFields", resourceCulture);
            }
        }
    }
}
