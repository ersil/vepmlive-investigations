//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeSheets.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TimeSheets.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;GroupTemplate Id=&quot;Ribbon.Templates.Flexible2&quot;&gt;
        ///        &lt;Layout Title=&quot;LargeLarge&quot;&gt;
        ///          &lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;o1&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///          &lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;o2&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///        &lt;/Layout&gt;
        ///        &lt;Layout Title=&quot;LargeMedium&quot;&gt;
        ///          &lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;o1&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///          &lt;OverflowSection Type=&quot;ThreeRow&quot; TemplateAlias=&quot;o2&quot; DisplayMode=&quot;Medium&quot;/&gt;
        ///        &lt;/Layout&gt;
        ///        &lt;Layout [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string flexible2 {
            get {
                return ResourceManager.GetString("flexible2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function fireEvent(element,event){
        ///    if (document.createEventObject){
        ///        // dispatch for IE
        ///        var evt = document.createEventObject();
        ///        return element.fireEvent(&apos;on&apos;+event,evt)
        ///    }
        ///    else{
        ///        // dispatch for firefox + others
        ///        var evt = document.createEvent(&quot;HTMLEvents&quot;);
        ///        evt.initEvent(event, true, true ); // event type,bubbling,cancelable
        ///        return !element.dispatchEvent(evt);
        ///    }
        ///}
        ///
        /////=========================notes========================
        ///fun [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtExcels {
            get {
                return ResourceManager.GetString("txtExcels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script type=&quot;text/javascript&quot;&gt;
        /////&lt;![CDATA[
        ///	function _addCustomPageComponent()
        ///	{
        ///		var _customPageComponent = new ContextualTabWebPart.CustomPageComponent(&apos;{webPartPageComponentId}&apos;, {TSOBJECT});
        ///
        ///		var ribbonPageManager = SP.Ribbon.PageManager.get_instance();
        ///		ribbonPageManager.addPageComponent(_customPageComponent);
        ///		ribbonPageManager.get_focusManager().requestFocusForComponent(_customPageComponent);
        ///	}
        ///
        ///	function _registerCustomPageComponent()
        ///	{
        ///		SP.SOD.registerSod(&quot;MyTimesheetContextu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyTimesheet_DelayScript {
            get {
                return ResourceManager.GetString("txtMyTimesheet_DelayScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///	&lt;Cfg id=&quot;err&quot; Code=&quot;GTACCNPSQEBSLC&quot; Version=&quot;4.0&quot; /&gt;
        ///	&lt;Cfg SuppressCfg=&quot;1&quot; Style=&quot;GM&quot; /&gt;
        ///	&lt;Cfg MainCol=&quot;Title&quot; NameCol=&quot;Title&quot; /&gt;
        ///	&lt;Cfg ConstHeight=&quot;1&quot; ConstWidth=&quot;0&quot; /&gt;
        ///	&lt;Cfg Undo=&quot;0&quot; /&gt;
        ///	&lt;Cfg NumberId=&quot;1&quot; FullId=&quot;0&quot; IdChars=&quot;1234567890&quot; AddFocusCol=&quot;Title&quot; /&gt;
        ///	&lt;Cfg Searching=&quot;1&quot; /&gt;
        ///	&lt;Cfg StaticCursor=&quot;1&quot; Dragging=&quot;0&quot; SelectingCells=&quot;1&quot; SelectClass=&quot;0&quot; /&gt;
        ///	&lt;Cfg NoTreeLines=&quot;1&quot; DetailOn=&quot;0&quot; MinRowHeight=&quot;20&quot; MaxRowHeight=&quot;20&quot; MidWidth=&quot;300&quot; MenuColumnsSort=&quot;1&quot; StandardFilter=&quot;2&quot; /&gt;
        ///	&lt;Cfg P [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyTimesheet_GridErrorLayout {
            get {
                return ResourceManager.GetString("txtMyTimesheet_GridErrorLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot; Version=&quot;4.0&quot; /&gt;
        ///	&lt;Cfg SuppressCfg=&quot;1&quot;  Style=&quot;GM&quot;  CSS=&quot;/_layouts/epmlive/treegrid/myts/grid.css&quot;/&gt;
        ///	&lt;Cfg MainCol=&quot;Title&quot; NameCol=&quot;Title&quot; /&gt;
        ///	&lt;Cfg ConstHeight=&quot;0&quot; ConstWidth=&quot;1&quot; NoVScroll =&quot;1&quot;/&gt;
        ///	&lt;Cfg Undo=&quot;0&quot; /&gt;
        ///	&lt;Cfg NumberId=&quot;1&quot; FullId=&quot;0&quot; IdChars=&quot;1234567890&quot; AddFocusCol=&quot;Title&quot; SortIcons=&quot;1&quot;/&gt;
        ///	&lt;Cfg Searching=&quot;1&quot; /&gt;
        ///	&lt;Cfg StaticCursor=&quot;1&quot; Dragging=&quot;0&quot; SelectingCells=&quot;1&quot; SelectClass=&quot;0&quot; Selecting=&quot;0&quot;/&gt;
        ///	&lt;Cfg NoTreeLines=&quot;1&quot; DetailOn=&quot;0&quot; MinRowHeight=&quot;25&quot; MaxR [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyTimesheet_GridLayout {
            get {
                return ResourceManager.GetString("txtMyTimesheet_GridLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ContextualGroup Id=&quot;Ribbon.MyTimesheetContextualTabGroup&quot; Color=&quot;Green&quot; Title=&quot;{title}&quot; Command=&quot;MyTimesheetContextualTab.EnableContextualGroup&quot; Sequence=&quot;502&quot; ContextualGroupId=&quot;MyTimesheetContextualTabGroup&quot;&gt;
        ///	&lt;Tab Id=&quot;Ribbon.MyTimesheetTab&quot; Title=&quot;My Timesheet&quot; Command=&quot;MyTimesheetContextualTab.EnableMyTimesheetTab&quot; Sequence=&quot;100&quot;&gt;
        ///		&lt;Scaling Id=&quot;Ribbon.MyTimesheet.Scaling&quot;&gt;
        ///			&lt;MaxSize Id=&quot;Ribbon.MyTimesheet.ActionsGroup.MaxSize&quot; GroupId=&quot;Ribbon.MyTimesheet.ActionsGroup&quot; Size=&quot;LargeMediumSmall&quot;/&gt;
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyTimesheet_Ribbon {
            get {
                return ResourceManager.GetString("txtMyTimesheet_Ribbon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;GroupTemplate Id=&quot;Ribbon.Templates.MyTimesheetTemplate&quot;&gt;
        ///	&lt;Layout Title=&quot;LargeMediumSmall&quot; LayoutTitle=&quot;LargeMediumSmall&quot;&gt;
        ///		&lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;oL&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///		&lt;OverflowSection Type=&quot;ThreeRow&quot; TemplateAlias=&quot;oM&quot; DisplayMode=&quot;Medium&quot;/&gt;
        ///		&lt;OverflowSection Type=&quot;ThreeRow&quot; TemplateAlias=&quot;oS&quot; DisplayMode=&quot;Small&quot;/&gt;
        ///	&lt;/Layout&gt;
        ///
        ///	&lt;Layout Title=&quot;SmallSmall&quot; LayoutTitle=&quot;SmallSmall&quot;&gt;
        ///		&lt;Section Alignment=&quot;Top&quot; Type=&quot;OneRow&quot;&gt;
        ///		&lt;Row&gt;
        ///			&lt;ControlRef DisplayMode=&quot;Large&quot;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyTimesheet_Template {
            get {
                return ResourceManager.GetString("txtMyTimesheet_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script type=&quot;text/javascript&quot;&gt;
        /////&lt;![CDATA[
        ///	function _addCustomPageComponent()
        ///	{
        ///		var _customPageComponent = new ContextualTabWebPart.CustomPageComponent(&apos;{webPartPageComponentId}&apos;, {TSOBJECT});
        ///
        ///		var ribbonPageManager = SP.Ribbon.PageManager.get_instance();
        ///		ribbonPageManager.addPageComponent(_customPageComponent);
        ///		ribbonPageManager.get_focusManager().requestFocusForComponent(_customPageComponent);
        ///	}
        ///
        ///	function _registerCustomPageComponent()
        ///	{
        ///		SP.SOD.registerSod(&quot;MyTimesheetApproval [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyTimesheetApprovals_DelayScript {
            get {
                return ResourceManager.GetString("txtMyTimesheetApprovals_DelayScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot; Version=&quot;4.0&quot; id=&quot;TSWork&quot; /&gt;
        ///	&lt;Cfg SuppressCfg=&quot;1&quot; Style=&quot;GM&quot;  CSS=&quot;/_layouts/epmlive/treegrid/myts/gridwork.css&quot;/&gt;
        ///	&lt;Cfg MainCol=&quot;Title&quot; NameCol=&quot;Title&quot; /&gt;
        ///	&lt;Cfg ConstHeight=&quot;0&quot; ConstWidth=&quot;1&quot; NoVScroll =&quot;1&quot;/&gt;
        ///	&lt;Cfg Undo=&quot;0&quot; /&gt;
        ///	&lt;Cfg NumberId=&quot;1&quot; FullId=&quot;0&quot; IdChars=&quot;1234567890&quot; AddFocusCol=&quot;Title&quot; SortIcons=&quot;1&quot;/&gt;
        ///	&lt;Cfg Searching=&quot;1&quot; /&gt;
        ///	&lt;Cfg StaticCursor=&quot;1&quot; Dragging=&quot;0&quot; SelectingCells=&quot;1&quot; SelectClass=&quot;0&quot; /&gt;
        ///	&lt;Cfg NoTreeLines=&quot;1&quot; DetailOn=&quot;0&quot; MinRowHeight=&quot;25&quot; Ma [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyTimesheetWork_GridLayout {
            get {
                return ResourceManager.GetString("txtMyTimesheetWork_GridLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	&lt;Tab Id=&quot;Ribbon.MyTimesheetWorkTab&quot; Title=&quot;Work&quot; Sequence=&quot;400&quot;&gt;
        ///		&lt;Scaling Id=&quot;Ribbon.MyTimesheetWork.Scaling&quot;&gt;
        ///			&lt;MaxSize Id=&quot;Ribbon.MyTimesheetWork.ActionsGroup.MaxSize&quot; GroupId=&quot;Ribbon.MyTimesheetWork.ActionsGroup&quot; Size=&quot;LargeMediumSmall&quot;/&gt;
        ///			&lt;Scale Id=&quot;Ribbon.MyTimesheetWork.ActionsGroup.Scaling.CustomTabScaling&quot; GroupId=&quot;Ribbon.MyTimesheetWork.ActionsGroup&quot; Size=&quot;LargeMediumSmall&quot; /&gt;
        ///
        ///			&lt;MaxSize Id=&quot;Ribbon.MyTimesheetWork.ViewPeriodGroup.MaxSize&quot; GroupId=&quot;Ribbon.MyTimesheetWork.ViewPeriodGrou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyTimesheetWork_Ribbon {
            get {
                return ResourceManager.GetString("txtMyTimesheetWork_Ribbon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Tab Id=&quot;Ribbon.MyTimesheetWorkViewsTab&quot; Title=&quot;Views&quot; Sequence=&quot;410&quot;&gt;
        ///		&lt;Scaling Id=&quot;Ribbon.MyTimesheetWorkViews.Scaling&quot;&gt;
        ///			&lt;MaxSize Id=&quot;Ribbon.MyTimesheetWork.MyTimesheetWorkViewsGroup.MaxSize&quot; GroupId=&quot;Ribbon.MyTimesheetWork.MyTimesheetWorkViewsGroup&quot; Size=&quot;LargeMediumSmall&quot;/&gt;
        ///			&lt;Scale Id=&quot;Ribbon.MyTimesheetWork.MyTimesheetWorkViewsGroup.Scaling.CustomTabScaling&quot; GroupId=&quot;Ribbon.MyTimesheetWork.MyTimesheetWorkViewsGroup&quot; Size=&quot;LargeMediumSmall&quot; /&gt;
        ///		&lt;/Scaling&gt;
        ///		&lt;Groups Id=&quot;Ribbon.MyTimesheetWork [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtMyTimesheetWork_ViewRibbon {
            get {
                return ResourceManager.GetString("txtMyTimesheetWork_ViewRibbon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var timesheets#gridid#;
        ///
        ///mygrid#gridid#._in_header_stat_summ=function(tag,index,c){
        ///	var calck=function(){                                           // define the function which will be used for calculations
        ///		var summ=0;                                                 // set initial counter value 
        ///		this.forEachRow(function(id){                         // for each row
        ///		    var tempval = this.cells(id,index).getValue().toString();        // add row_value
        ///		    if(tempval.split(&apos;|&apos;)[0] != &quot;&quot;)
        ///			{
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtPMApprovalsJS {
            get {
                return ResourceManager.GetString("txtPMApprovalsJS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mygrid#gridid#.addFocusedCommands = function($arr)
        ///{
        ///	
        ///	Array.add($arr, &apos;EnableTimesheetTab&apos;);
        ///	
        ///	Array.add($arr, &apos;EnableTimesheetMain&apos;);
        ///	Array.add($arr, &apos;TimesheetStatusLabel&apos;);
        ///	Array.add($arr, &apos;TimesheetStatus&apos;);
        ///	Array.add($arr, &apos;PreviousPeriod&apos;);
        ///	Array.add($arr, &apos;CurrentPeriod&apos;);
        ///	Array.add($arr, &apos;NextPeriod&apos;);
        ///	Array.add($arr, &apos;ChangePeriod&apos;);
        ///	
        ///	Array.add($arr, &apos;EnableTimesheetApprovals&apos;);
        ///	Array.add($arr, &apos;TimesheetApprove&apos;);
        ///	Array.add($arr, &apos;TimesheetUnlock&apos;);
        ///	Array.add($arr, &apos;T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTimesheetApprovalsRibbonFunctions {
            get {
                return ResourceManager.GetString("txtTimesheetApprovalsRibbonFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Tab Id=&quot;Ribbon.TimesheetApprovals&quot; Title=&quot;Timesheets&quot; Description=&quot;&quot; Command=&quot;EnableTimesheetTab&quot; Sequence=&quot;501&quot;&gt;
        ///		&lt;Scaling Id=&quot;Ribbon.Timesheet.Scaling&quot;&gt;
        ///	    	&lt;MaxSize Id=&quot;Ribbon.Timesheet.Scaling.Main.MaxSize&quot; Sequence=&quot;10&quot; GroupId=&quot;Ribbon.Timesheet.Main&quot; Size=&quot;LargeLarge&quot; /&gt;
        ///			&lt;MaxSize Id=&quot;Ribbon.Timesheet.Scaling.Data.MaxSize&quot; Sequence=&quot;10&quot; GroupId=&quot;Ribbon.Timesheet.Data&quot; Size=&quot;LargeLarge&quot; /&gt;
        ///			&lt;MaxSize Id=&quot;Ribbon.Timesheet.Scaling.Items.MaxSize&quot; Sequence=&quot;11&quot; GroupId=&quot;Ribbon.Timesheet.Items&quot; S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTimesheetApprovalsTab {
            get {
                return ResourceManager.GetString("txtTimesheetApprovalsTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div id=&quot;dlgSaving&quot; class=&quot;dialog&quot;&gt;
        ///    &lt;table width=&quot;100%&quot;&gt;
        ///        &lt;tr&gt;
        ///            &lt;td align=&quot;center&quot; class=&quot;ms-sectionheader&quot;&gt;
        ///                &lt;img src=&quot;/_layouts/images/GEARS_ANv4.GIF&quot; style=&quot;vertical-align: middle;&quot;/&gt;&lt;br /&gt;
        ///                &lt;H3 class=&quot;ms-standardheader&quot;&gt;Saving Timesheet...&lt;/h3&gt;
        ///            &lt;/td&gt;
        ///        &lt;/tr&gt;
        ///    &lt;/table&gt;
        ///&lt;/div&gt;
        ///
        ///&lt;div id=&quot;dlgSubmit&quot; class=&quot;dialog&quot;&gt;
        ///    &lt;table width=&quot;100%&quot;&gt;
        ///        &lt;tr&gt;
        ///            &lt;td align=&quot;center&quot; class=&quot;ms-sectionheader&quot;&gt;
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTimesheetBase {
            get {
                return ResourceManager.GetString("txtTimesheetBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mygrid#gridid#.addFocusedCommands = function($arr)
        ///{
        ///	
        ///	Array.add($arr, &apos;EnableTimesheetTab&apos;);
        ///	
        ///	Array.add($arr, &apos;EnableTimesheetMain&apos;);
        ///	Array.add($arr, &apos;TimesheetStatusLabel&apos;);
        ///	Array.add($arr, &apos;TimesheetStatus&apos;);
        ///	Array.add($arr, &apos;PreviousPeriod&apos;);
        ///	Array.add($arr, &apos;CurrentPeriod&apos;);
        ///	Array.add($arr, &apos;NextPeriod&apos;);
        ///	Array.add($arr, &apos;ChangePeriod&apos;);
        ///	
        ///	Array.add($arr, &apos;EnableTimesheetApprovals&apos;);
        ///	Array.add($arr, &apos;TimesheetApprove&apos;);
        ///	Array.add($arr, &apos;TimesheetUnlock&apos;);
        ///	Array.add($arr, &apos;T [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTimesheetPMApprovalsRibbonFunctions {
            get {
                return ResourceManager.GetString("txtTimesheetPMApprovalsRibbonFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Tab Id=&quot;Ribbon.TimesheetPMApprovals&quot; Title=&quot;Timesheets&quot; Description=&quot;&quot; Command=&quot;EnableTimesheetTab&quot; Sequence=&quot;501&quot;&gt;
        ///		&lt;Scaling Id=&quot;Ribbon.Timesheet.Scaling&quot;&gt;
        ///	    	&lt;MaxSize Id=&quot;Ribbon.Timesheet.Scaling.Main.MaxSize&quot; Sequence=&quot;10&quot; GroupId=&quot;Ribbon.Timesheet.Main&quot; Size=&quot;LargeLarge&quot; /&gt;
        ///			&lt;MaxSize Id=&quot;Ribbon.Timesheet.Scaling.Data.MaxSize&quot; Sequence=&quot;10&quot; GroupId=&quot;Ribbon.Timesheet.Data&quot; Size=&quot;LargeLarge&quot; /&gt;
        ///	    &lt;/Scaling&gt;
        ///		&lt;Groups Id=&quot;TimesheetGroups&quot;&gt;
        ///			&lt;Group Id=&quot;Ribbon.Timesheet.Main&quot; Title=&quot;Timeshee [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTimesheetPMApprovalsTab {
            get {
                return ResourceManager.GetString("txtTimesheetPMApprovalsTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mygrid#gridid#.addFocusedCommands = function($arr)
        ///{
        ///	
        ///	Array.add($arr, &apos;EnableTimesheetTab&apos;);
        ///	
        ///	Array.add($arr, &apos;EnableTimesheetMain&apos;);
        ///	Array.add($arr, &apos;TimesheetStatusLabel&apos;);
        ///	Array.add($arr, &apos;TimesheetStatus&apos;);
        ///	Array.add($arr, &apos;PreviousPeriod&apos;);
        ///	Array.add($arr, &apos;CurrentPeriod&apos;);
        ///	Array.add($arr, &apos;NextPeriod&apos;);
        ///	Array.add($arr, &apos;ChangePeriod&apos;);
        ///	
        ///	Array.add($arr, &apos;EnableTimesheetData&apos;);
        ///	Array.add($arr, &apos;TimesheetSave&apos;);
        ///	Array.add($arr, &apos;TimesheetSubmit&apos;);
        ///	Array.add($arr, &apos;Timesheet [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTimesheetRibbonFunctions {
            get {
                return ResourceManager.GetString("txtTimesheetRibbonFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Tab Id=&quot;Ribbon.Timesheet&quot; Title=&quot;Timesheets&quot; Description=&quot;&quot; Command=&quot;EnableTimesheetTab&quot; Sequence=&quot;501&quot;&gt;
        ///		&lt;Scaling Id=&quot;Ribbon.Timesheet.Scaling&quot;&gt;
        ///	    	&lt;MaxSize Id=&quot;Ribbon.Timesheet.Scaling.Main.MaxSize&quot; Sequence=&quot;10&quot; GroupId=&quot;Ribbon.Timesheet.Main&quot; Size=&quot;LargeLarge&quot; /&gt;
        ///			&lt;MaxSize Id=&quot;Ribbon.Timesheet.Scaling.Data.MaxSize&quot; Sequence=&quot;10&quot; GroupId=&quot;Ribbon.Timesheet.Data&quot; Size=&quot;LargeLarge&quot; /&gt;
        ///			&lt;MaxSize Id=&quot;Ribbon.Timesheet.Scaling.Items.MaxSize&quot; Sequence=&quot;11&quot; GroupId=&quot;Ribbon.Timesheet.Items&quot; Size=&quot;Larg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTimesheetTab {
            get {
                return ResourceManager.GetString("txtTimesheetTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&lt;GroupTemplate Id=&quot;Ribbon.Templates.Timesheet.Status&quot;&gt;
        ///	&lt;Layout Title=&quot;LargeLarge&quot;&gt;
        ///		&lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;o1&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///		&lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;o2&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///		&lt;Section Type=&quot;ThreeRow&quot;&gt;
        ///			&lt;Row&gt;
        ///			  &lt;ControlRef TemplateAlias=&quot;row1control&quot; DisplayMode=&quot;Medium&quot; /&gt;
        ///			&lt;/Row&gt;
        ///			&lt;Row&gt;
        ///			  &lt;ControlRef TemplateAlias=&quot;row2control&quot; DisplayMode=&quot;Medium&quot; /&gt;
        ///			&lt;/Row&gt;            
        ///			&lt;Row&gt;
        ///			  &lt;Strip&gt;            
        ///			    &lt;Control [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTimesheetTemplate {
            get {
                return ResourceManager.GetString("txtTimesheetTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ContextualGroup Id=&quot;Ribbon.MyTimesheetContextualTabGroup&quot; Color=&quot;Green&quot; Title=&quot;{title}&quot; Command=&quot;MyTimesheetContextualTab.EnableContextualGroup&quot; Sequence=&quot;502&quot; ContextualGroupId=&quot;MyTimesheetContextualTabGroup&quot;&gt;
        ///	&lt;Tab Id=&quot;Ribbon.MyTimesheetTab&quot; Title=&quot;My Timesheet&quot; Command=&quot;MyTimesheetContextualTab.EnableMyTimesheetTab&quot; Sequence=&quot;100&quot;&gt;
        ///		&lt;Scaling Id=&quot;Ribbon.MyTimesheet.Scaling&quot;&gt;
        ///			&lt;MaxSize Id=&quot;Ribbon.MyTimesheet.ActionsGroup.MaxSize&quot; GroupId=&quot;Ribbon.MyTimesheet.ActionsGroup&quot; Size=&quot;LargeMediumSmall&quot;/&gt;
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTSApprovalRibbon {
            get {
                return ResourceManager.GetString("txtTSApprovalRibbon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table border=0 cellpadding=0 cellspacing=0 style=&apos;margin-right: 4px&apos;&gt;
        ///	&lt;tr&gt; 
        ///		&lt;td nowrap class=&quot;ms-listheaderlabel&quot;&gt;View:&amp;nbsp;&lt;/td&gt;
        ///        &lt;td id=&quot;&quot; nowrap=&quot;nowrap&quot; class=&quot;ms-viewselector&quot; onmouseover=&quot;this.className=&apos;ms-viewselectorhover&apos;&quot; onmouseout=&quot;this.className=&apos;ms-viewselector&apos;&quot;&gt;
        ///			&lt;span style=&quot;display:none&quot;&gt;
        ///
        ///
        ///                &lt;menu type=&apos;ServerMenu&apos; id=&quot;EPMLiveTaskRollupViewSelectorMenu&quot; CompactMode=&quot;true&quot;&gt;
        ///                #viewList#
        ///                &lt;/menu&gt;
        ///            
        ///            &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTSApprovalsHeader {
            get {
                return ResourceManager.GetString("txtTSApprovalsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var timesheets#gridid#;
        ///
        ///function viewItem#gridid#(link, action)
        ///{
        ///
        ///    var rowIdFull = link.parentNode.parentNode.parentNode.parentNode.idd;
        ///    var weburl = mygrid#gridid#.getUserData(rowIdFull,&quot;SiteUrl&quot;);
        ///    var listId = mygrid#gridid#.getUserData(rowIdFull,&quot;listid&quot;);
        ///    var webid = mygrid#gridid#.getUserData(rowIdFull,&quot;webid&quot;);
        ///    var siteid = mygrid#gridid#.getUserData(rowIdFull,&quot;siteid&quot;);
        ///    var editurl = mygrid#gridid#.getUserData(rowIdFull,&quot;editurl&quot;);
        ///    var viewurl = mygrid#gridid#. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtTSApprovalsJS {
            get {
                return ResourceManager.GetString("txtTSApprovalsJS", resourceCulture);
            }
        }
    }
}
