(function (n, t, i, r) { "use strict"; var f = function () { var u = function () { function b() { r.lang("en", { calendar: { lastDay: "[Yesterday -]  MMMM D", sameDay: "[Today -] MMMM D", nextDay: "[Tomorrow -] MMMM D", lastWeek: "[Last] dddd [-] MMMM D", nextWeek: "dddd [-] MMMM D", sameElse: "MMMM D YYYY" } }) } function g() { i.registerPartial("user-avatar", e._userAvatar); i.registerPartial("thread-icon", e._threadIcon); i.registerPartial("thread-title", e._threadTitle); i.registerPartial("thread-info", e._threadInfo); i.registerPartial("activity-icon", e._activityIcon); i.registerPartial("user-info", e._userInfo); i.registerPartial("activity-info", e._activityInfo); i.registerPartial("activity-time", e._activityTime); i.registerPartial("object-info", e._objectInfo); i.registerPartial("comment-box", e._commentBox); h.initialize(); v.configureBox({ element: f.statusUpdateBox, placeholder: "What are you working on?" }) } function nt(n) { for (var i = 0; i < n.threads.length; i++) t.publish("se.threadLoaded", n.threads[i], n) } function tt() { t.subscribe("se.creatableLoaded", function (n) { h.addCreatable(n) }); t.subscribe("se.creatableAllLoaded", function (n) { h.addCreatable(n, !0) }); t.subscribe("se.dataLoaded", function (n) { nt(n) }); t.subscribe("se.threadLoaded", function (n, t) { d.render(n, t) }); t.subscribe("se.threadRendered", function (n, t, i) { s.render(n, t, i); v.render(n, t, i); v.configureBox({ element: t.parent().find("div.epm-se-comment-box[data-threadId='" + n.id + "']"), placeholder: "Add a comment...", thread: n, $thread: t, disabled: i.disabled }) }); t.subscribe("se.olderactivitiesLoaded", function (n) { s.renderOlder(n) }); t.subscribe("se.oldercommentsLoaded", function (n) { v.renderOlder(n) }); f.root.on("click", "a.epm-se-link", function (t) { l.navigate(n(this), t) }); f.root.on("click", ".epm-show-older", function () { l.showOlder(n(this)) }); f.content.scroll(function () { l.paginate() }); f.loadMoreButton.click(function (n) { n.preventDefault(); l.paginate() }) } var y = window.epmLive.currentWebUrl.slice(1) + "/", p = y === "/" ? y : "/" + y, w = {}, k, c; w[window.epmLive.currentWebId] = p; var u = { pagination: null, ui: { selectors: { comments: "div.epm-se-comments", commentBox: "div.epm-se-comment-input", latestComments: "ul.epm-se-latest-comments" }, classes: { placeholder: "epm-se-placeholder", expanded: "epm-se-expanded", active: "epm-se-active", hidden: "epm-se-hidden", overlay: "epm-se-overlay", disabled: "epm-se-disabled" } }, apiUrl: p + "_vti_bin/SocialEngine.svc", statusUpdateServiceUrl: p + "_vti_bin/WorkEngine.asmx/Execute", commentServiceUrl: function (n) { return w[n] + "_layouts/15/epmlive/CommentsProxy.aspx" } }, f = { root: n("#epm-social-stream"), content: n(document.getElementById("s4-workspace")), pagination: n("#epm-social-stream div#epm-se-pagination span"), noActivity: n("#epm-social-stream div#epm-se-no-activity"), threads: n("#epm-social-stream ul#epm-se-threads"), toolbarItems: n("#epm-social-stream ul#epm-se-toolbar-items"), toolbarItemsAll: n("#epm-social-stream ul#epm-se-toolbar-items-all"), toolbarMore: n("#epm-social-stream ul#epm-se-toolbar-items li.epm-se-show-more"), statusUpdateBox: n("#epm-social-stream div#epm-se-status-update-box"), loadMoreButton: n("button#epm-se-load-more") }, e = { thread: i.compile(n("script#epm-se-thread-template").html()), activity: i.compile(n("script#epm-se-activity-template").html()), comment: i.compile(n("script#epm-se-comment-template").html()), toolbarItem: i.compile(n("script#epm-se-toolbar-item-template").html()), _userAvatar: i.compile(n("script#_epm-se-user-avatar-template").html()), _threadIcon: i.compile(n("script#_epm-se-thread-icon-template").html()), _threadTitle: i.compile(n("script#_epm-se-thread-title-template").html()), _threadInfo: i.compile(n("script#_epm-se-thread-info-template").html()), _activityIcon: i.compile(n("script#_epm-se-activity-icon-template").html()), _userInfo: i.compile(n("script#_epm-se-user-info-template").html()), _activityInfo: i.compile(n("script#_epm-se-activity-info-template").html()), _activityTime: i.compile(n("script#_epm-se-activity-time-template").html()), _objectInfo: i.compile(n("script#_epm-se-object-info-template").html()), _commentBox: i.compile(n("script#_epm-se-comment-box-template").html()) }, o = function () { function t(n) { if (window.epmLive.currentUserTimeZone) try { return r.tz(n, window.epmLive.currentUserTimeZone.olsonName) } catch (t) { window.epmLive.debugMode && console.log(t.message) } return n } var i = function (n, i) { var u = i ? n : t(n); return r.lang("en", { calendar: { lastDay: "[Yesterday]  MMM D", sameDay: "[Today] MMM D", nextDay: "[Tomorrow] MMM D", lastWeek: "[Last] ddd MMM D", nextWeek: "ddd MMM D", sameElse: "MMMM D YYYY" } }), u = u.calendar(), b(), u }, e = function (n) { return t(n).format("LLLL") }, o = function (n) { return parseInt(window.epmLive.currentUserId) === n.id ? "You" : n.displayName }, s = function (n) { return window.epmLive.currentWebUrl + "/_layouts/15/userdisp.aspx?ID=" + n.id }, h = function (n) { n.length && n.sort(function (n, t) { if (n && t) { var i = n.time, r = t.time; return i > r ? 1 : -1 } return !0 }) }, c = function () { u.pagination = { isLoading: !1, firstTimeLoad: !0, page: 1, limit: 10, activityLimit: 1, commentLimit: 4 } }, l = function () { var i = f.root.get(0).id, t; window.EPM.UI.Loader.current().startLoading({ id: i }); u.loaderStarted = !0; t = n("#" + i + "_epm_loader"); t.css("margin-left", "-10px"); t.width(t.width() + 10); t.css("height", "100%") }, a = function () { f.statusUpdateBox.show(); window.EPM.UI.Loader.current().stopLoading(f.root.get(0).id); u.loaderStarted = !1 }, v = function () { var t = u.apiUrl + "/webs?v=" + (new Date).getTime(); n.getJSON(t).then(function (n) { var i, t; if (!n.error && n.collection.length) for (i = n.collection, t = 0; t < i.length; t++) try { var u = i[t], r = u.url.slice(1) + "/", f = r === "/" ? r : "/" + r; w[u.id] = f } catch (e) { } }) }; return { getFriendlyTime: i, getLongTime: e, getUserFriendlyName: o, getUserProfileUrl: s, sortComments: h, resetPagination: c, startLoader: l, stopLoader: a, getWebUrl: v } }(), l = function () { var i = function (n, t) { var i, r, u, f, e; t.preventDefault(); i = n.data("kind"); r = n.attr("href"); i !== "Workspace" && i !== "creatable" ? OpenCreateWebPageDialog(r) : i === "creatable" && (u = r.match(/listid=(.*?)$/i), u.length === 2 && (f = { id: u[1], url: window.epmLive.currentWebUrl + "/_layouts/15/epmlive/redirectionproxy.aspx?action=gotolist&webid=" + window.epmLive.currentWebId + "&listid=" + u[1], name: n.text(), icon: n.parent().find("span").attr("class") }, e = { url: r, dialogReturnValueCallback: Function.createCallback(Function.createDelegate(null, h.handleCreationAction), f) }, window.SP.UI.ModalDialog.showModalDialog(e))) }, r = function (i) { var r = i.data("kind"), f = u.apiUrl + "/thread/" + i.data("threadid") + "/" + r + "?offset=" + i.data("offset") + "&v=" + (new Date).getTime(); i.parent().find("ul.epm-se-older-" + r).show(); i.remove(); n.getJSON(f).then(function (n) { n.threads[0][r].length && t.publish("se.older" + r + "Loaded", n) }) }, e = function () { if (n("#epm-social-stream div#epm-se-pagination").offset().top < n(window).height() + 200) { if (u.pagination.isLoading) return; if (u.pagination.page === 0) return; f.pagination.show(); c() } }; return { navigate: i, showOlder: r, paginate: e } }(), a = function () { var n = function (n, t) { for (var i, f, u, r = 0; r < t.length; r++) if (i = t[r], i.id === n) { f = {}; for (u in i) i.hasOwnProperty(u) && (f[u] = i[u]); return f } return null }; return { getById: n } }(), d = function () { function n(n, t) { var i = "1986-11-06T13:03:00", r = { time: i }, f = { time: i }, e, o; return (n.activities.length && (r = n.activities[0]), n.comments.length && (f = n.comments[n.comments.length - 1]), r.time === i && f.time === i) ? !1 : (e = r.time <= f.time, n.activities.length && (o = n.activities[0].userId, n.user = a.getById(o, t.users)), n.kind === "Workspace" ? n.icon = "icon-tree-2" : n.kind === "StatusUpdate" ? (n.icon = "icon-bubble-12", n.url = null) : (n.list = a.getById(n.listId, t.lists), n.list.icon = n.list.icon || "icon-square", n.icon = n.list.icon, window.epmLive.currentWebId !== n.webId && (r.web = a.getById(n.webId, t.webs))), n.hasMoreActivities = e ? n.totalActivities >= u.pagination.activityLimit : n.totalActivities > u.pagination.activityLimit, n.hasMoreComments = n.totalComments > u.pagination.commentLimit, n.commentsHidden = n.comments.length > 0 ? "" : "epm-se-hidden", n.activities.length && (n.earliestActivityTime = n.activities[n.activities.length - 1].time), n.comments.length && (n.earliestCommentTime = n.comments[0].time), n) } var i = function (i, r) { var u = "li#epm-se-thread-" + i.id, s = f.threads.find(u); s.length ? t.publish("se.threadRendered", i, s, r) : (o.sortComments(i.comments), (i = n(i, r)) && (r.newItem ? f.threads.prepend(e.thread(i)) : f.threads.append(e.thread(i)), t.publish("se.threadRendered", i, f.threads.find(u), r))) }; return { render: i } }(), s = function () { function f(n, u, f) { if (u.comments.length) { var e = u.comments[u.comments.length - 1]; e.time > n.time && (n = e, n.icon = "icon-bubble-12", n.action = "made a comment") } return n.icon || (n = t(n, u)), n = i(n, f), r(n) } function s(n, u, f) { return n = t(n, u), n = i(n, f), r(n) } function h(n, t, i) { var r = n.activities[0], u, o; r && (u = "ul.epm-se-activities li#epm-se-activity-" + r.id, o = t.find(u), o.length || (r = f(r, n, i)) && t.find("ul.epm-se-activities").append(e.activity(r))) } function u(n, t, i) { for (var u = 0; u < n.activities.length; u++) { var r = n.activities[u], f = "ul.epm-se-activities li#epm-se-activity-" + r.id, o = t.find(f); o.length || (f = "ul.epm-se-older-activities li#epm-se-activity-" + r.id, o = t.find(f), o.length || (r = s(r, n, i)) && t.find("ul.epm-se-older-activities").append(e.activity(r))) } } var c = function (n, t, i) { h(n, t, i); u(n, t, i) }, l = function (t) { var i = t.threads[0], r = n("li#epm-se-thread-" + i.id); u(i, r, t) }, t = function (n, t) { if (t.kind === "StatusUpdate") n.icon = "icon-bubble-12", n.action = "made a comment"; else { var i = (t.kind === "ListItem" ? "item" : t.kind).toLowerCase(); switch (n.kind) { case "Created": n.icon = "icon-plus-2"; n.action = "created this " + i; break; case "Updated": n.icon = "icon-pencil"; n.action = "made an update" } } return n }, i = function (n, t) { return n.user = a.getById(n.userId, t.users), n.user.friendlyName = o.getUserFriendlyName(n.user), n.user.profileUrl = o.getUserProfileUrl(n.user), n }, r = function (n) { return n.friendlyTime = o.getFriendlyTime(n.time), n.longTime = o.getLongTime(n.time), n }; return { render: c, renderOlder: l, setIconAndAction: t, setUser: i, setTime: r } }(), v = function () { function l(n, t, i) { return n = s.setIconAndAction(n, t), n = s.setUser(n, i), n = s.setTime(n), n.text = eval("(" + n.data + ")").comment, n } function h(n, t, i, r) { var u; for (o.sortComments(n.comments), u = 0; u < n.comments.length; u++) { var f = n.comments[u], s = "ul.epm-se-comments li#epm-se-comment-" + f.id, h = t.find(s); h.length || (f = l(f, n, i)) && t.find(r ? "ul.epm-se-older-comments" : "ul.epm-se-comments").append(e.comment(f)) } } function i(n) { n.input.addClass(u.ui.classes.placeholder); n.input.html(n.placeholder) } function a(n) { n.input.removeClass(u.ui.classes.placeholder); n.input.html("") } function c(n) { n.input.removeClass(u.ui.classes.expanded); n.button.hide(); n.button.removeClass(u.ui.classes.active) } function v(n) { var i = parseInt(window.epmLive.currentUserId), r = window.epmLive.currentWebId, u = { lists: [], threads: [{ activities: [{ data: null, id: (new Date).getTime(), isBulkOperation: !1, key: (new Date).getTime(), kind: "Created", time: (new Date).toUTCString(), userId: i }], comments: [], id: (new Date).getTime(), kind: "StatusUpdate", title: n.text, totalActivities: 1, totalComments: 0, webId: r }], users: [{ displayName: window.epmLive.currentUserDisplayName, id: i, picture: window.epmLive.currentUserAvatar }], webs: [{ id: r, url: window.epmLive.currentWebUrl }], newItem: !0, disabled: !0 }; n.payload = u; t.publish("se.dataLoaded", u); f.noActivity.fadeOut("fast") } function y(n) { var t = r().tz(window.epmLive.currentUserTimeZone.olsonName), i = { id: (new Date).getTime(), text: n.text, friendlyTime: o.getFriendlyTime(t, !0), longTime: t.format("LLLL"), user: { friendlyName: "You", picture: window.epmLive.currentUserAvatar, profileUrl: window.epmLive.currentWebUrl + "/_layouts/15/userdisp.aspx?ID=" + window.epmLive.currentUserId } }; n.$thread ? (f.noActivity.fadeOut("fast"), n.$thread.find(u.ui.selectors.latestComments).append(e.comment(i)), n.$thread.find(u.ui.selectors.comments).removeClass(u.ui.classes.hidden)) : v(n) } function p(i) { var e = 0, o = null, s; i.thread && (e = i.thread.itemId); e !== 0 ? o = i.thread.listId : e = null; i.thread ? n.post(u.commentServiceUrl(i.thread.webId), { command: "CreateComment", comment: i.text, newcomment: null, itemId: e, listId: o, userId: window.epmLive.currentUserId, commentItemId: e, kind: i.thread.kind, suid: i.thread.activities[0].key }).then(function (n) { window.epmLive.debugMode && console.log(n) }) : (s = i.text.replace(/'/g, "&apos;").replace(/"/g, "&quot;"), n.ajax({ url: u.statusUpdateServiceUrl, type: "POST", contentType: "application/json; charset=utf-8", dataType: "json", data: "{ Function: 'CreatePublicComment', Dataxml: '<Data><Param key=\"Comment\"><![CDATA[" + s + "]\]><\/Param><\/Data>' }" }).then(function (e) { var s, o, c, h; e.d && (s = e.d.match(/<Result Status="(\d)">/), s.length && 0 === parseInt(s[1]) && (o = e.d.match(/<PublicCommentItem listId="(.*?)" itemId="(\d+)" \/>/), o.length === 3 && (c = 0, h = function (e) { e > 20 || n.get(u.apiUrl + "/suid/" + o[1] + "/" + o[2] + "?v=" + (new Date).getTime()).then(function (n) { var u, s; if (n.error) { window.setTimeout(function () { h(++e) }, 500); return } u = r.utc().format(); i.payload.lists = [{ icon: null, id: o[1], name: null, url: null }]; s = i.payload.threads[0].id; i.payload.threads[0].id = n.suid; i.payload.threads[0].listId = o[1]; i.payload.threads[0].itemId = parseInt(o[2]); i.payload.threads[0].firstActivityOn = u; i.payload.threads[0].lastActivityOn = u; i.payload.threads[0].activities[0].time = u; i.payload.threads[0].activities[0].key = n.suid; i.payload.disabled = !1; f.threads.find("li#epm-se-thread-" + s).remove(); t.publish("se.dataLoaded", i.payload) }) }, h(++c)))); window.epmLive.debugMode && console.log(e) })) } function w(t) { var r = t.$thread.height() + 10, i = n("<div><\/div>"); i.addClass(u.ui.classes.overlay); i.height(r); i.css("margin-top", "-" + r + "px"); t.$thread.append(i) } function b(t) { t.input.focus(function () { var i = n(this).html(); i === t.placeholder && a(t); t.input.addClass(u.ui.classes.expanded); t.button.show(); i !== "" && i !== "<br>" && i !== t.placeholder && t.button.addClass(u.ui.classes.active) }); t.input.blur(function () { var r = n(this).html(); (r === "" || r === "<br>") && i(t); u.lastClickedElement.id !== t.button.get(0).id && c(t) }); t.input.keyup(function () { var i = n(this).html(); i !== "" && i !== "<br>" && i !== t.placeholder ? t.button.addClass(u.ui.classes.active) : t.button.removeClass(u.ui.classes.active) }); t.button.click(function (r) { var f, o, e; (r.preventDefault(), n(this).hasClass(u.ui.classes.active)) && (f = n.trim(t.input.html()), n(f).filter("a").length > 0 ? (o = n(f).attr("target", "_blank"), f = o[0].outerHTML) : n(f).find("a").length > 0 && n(f).find("a").each(function () { var t = n(this)[0].outerHTML, i = n(this).attr("target", "_blank"); f = f.replace(t, i[0].outerHTML) }), e = { text: f, thread: t.thread, $thread: t.$thread }, e.text.length !== 0) && (y(e), i(t), c(t), p(e)) }); f.root.mousedown(function (n) { u.lastClickedElement = n.target }); n("body").tooltip({ selector: "span.epm-se-has-tooltip", delay: { show: 500, hide: 100 } }) } var k = function (n, t, i) { h(n, t, i) }, d = function (t) { var i = t.threads[0], r = n("li#epm-se-thread-" + i.id); h(i, r, t, !0) }, g = function (n) { n.input = n.element.find(u.ui.selectors.commentBox); n.button = n.element.find("button"); i(n); b(n); n.disabled && (n.input.attr("contenteditable", !1), n.$thread.addClass(u.ui.classes.disabled), w(n)) }; return { render: k, renderOlder: d, configureBox: g } }(), h = function () { var r = function (n) { for (var e, o, i, r = window.epmLive.socialStream.toolbarDisplayItemCount, u = 0; u < n.collection.length; u++) e = n.collection[u], e.icon = e.icon || "icon-square", o = u < r ? "se.creatableLoaded" : "se.creatableAllLoaded", t.publish(o, e); f.toolbarItems.hide(); f.toolbarItemsAll.hide(); i = r > 0 ? f.toolbarItems : f.toolbarItemsAll; i.show().css("display", "table-cell"); r > 0 && f.toolbarMore.remove().appendTo(i).click(function () { i.fadeOut("fast", function () { f.toolbarItemsAll.fadeIn("fast").css("display", "table-cell") }) }); n.collection.length <= r && f.toolbarMore.hide(); i.parent().fadeIn("fast") }, i = function (t) { t = t || 0; n.get(u.apiUrl + "/creatables?v=" + (new Date).getTime()).then(function (n) { if (n.error) { t < 10 && window.setTimeout(function () { i(++t) }, 250); return } r(n) }) }, o = function (n, t) { t || f.toolbarItems.append(e.toolbarItem(n)); f.toolbarItemsAll.append(e.toolbarItem(n)) }, s = function (i, r, u) { var e = ""; e = u.name == "Link" ? _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbyid('" + u.id + "')/Items?$select=ID,Title,Created,FileLeafRef,URL&$orderby=Created desc&$top=1" : _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbyid('" + u.id + "')/Items?$select=ID,Title,Created,FileLeafRef&$orderby=Created desc&$top=1"; i === 1 && n.ajax({ url: e, type: "GET", headers: { accept: "application/json;odata=verbose" } }).then(function (n) { var i, r, e; n && n.d && n.d.results && n.d.results.length && (i = n.d.results[0], r = i.__metadata.type === "SP.Data.DocumentsItem" ? i.FileLeafRef : i.Title, u.name == "Link" && i.URL.Description != "" && (r = i.URL.Description), (r == null || r == "") && (r = i.FileLeafRef), e = { lists: [{ icon: u.icon, id: u.id, name: u.name, url: u.url }], threads: [{ activities: [{ data: null, id: (new Date).getTime(), isBulkOperation: !1, key: null, kind: "Created", time: i.Created, userId: window.epmLive.currentUserId }], comments: [], firstActivityOn: i.Created, id: (new Date).getTime(), itemId: i.ID, kind: "ListItem", lastActivityOn: i.Created, listId: u.id, title: r, totalActivities: 1, totalComments: 0, url: window.epmLive.currentWebUrl + "/_layouts/15/epmlive/redirectionproxy.aspx?action=view&webid=" + window.epmLive.currentWebId + "&listid=" + u.id + "&id=" + i.ID, webId: window.epmLive.currentWebId }], users: [{ displayName: window.epmLive.currentUserDisplayName, id: window.epmLive.currentUserId, picture: window.epmLive.currentUserAvatar }], webs: [{ id: window.epmLive.currentWebId, url: window.epmLive.currentWebUrl }], newItem: !0 }, t.publish("se.dataLoaded", e), f.noActivity.fadeOut("fast")) }) }; return { initialize: i, addCreatable: o, handleCreationAction: s } }(); return k = function () { o.startLoader(); o.resetPagination(); o.getWebUrl(); b(); g(); tt() }, c = function (i, r) { var s, h, e; if (u.pagination.page !== 0) { if (r > 5) { f.pagination.hide(); u.pagination.page = 0; u.pagination.isLoading = !1; f.noActivity.fadeIn("fast"); return } r = r || 0; i = i || { page: u.pagination.page, limit: u.pagination.limit, activityLimit: u.pagination.activityLimit, commentLimit: u.pagination.commentLimit }; u.pagination.isLoading = !0; s = u.apiUrl + "/activities?"; h = []; for (e in i) i.hasOwnProperty(e) && h.push(e + "=" + i[e]); s += h.join("&") + "&v=" + (new Date).getTime(); n.getJSON(s).success(function (n) { var e, s, h; if (n.error) { window.setTimeout(function () { c(i, ++r) }); return } for (f.pagination.hide(), e = !1, s = 0; s < n.threads.length; s++) if (h = n.threads[s], h.activities.length || h.comments.length) { e = !0; break } e ? (t.publish("se.dataLoaded", n), u.pagination.page++, f.noActivity.is(":visible") && f.noActivity.fadeOut("fast"), n.threads.length < u.pagination.limit ? (u.pagination.page = 0, f.loadMoreButton.is(":visible") && f.loadMoreButton.fadeOut("fast")) : f.loadMoreButton.is(":visible") || f.loadMoreButton.fadeIn("fast")) : (u.pagination.page = 0, f.loadMoreButton.is(":visible") && f.loadMoreButton.fadeOut("fast")); u.pagination.isLoading = !1; u.pagination.firstTimeLoad && !e && f.noActivity.fadeIn("fast"); u.pagination.firstTimeLoad = !1; u.loaderStarted && o.stopLoader() }).error(function (n) { window.epmLive.debugMode && console.log(n); window.setTimeout(function () { c(i, ++r) }) }) } }, { configure: k, load: c, toolbarManager: h } }(); return u.configure(), u.load(), { SE: u } }, u = function () { window.epmLive ? window.epmLive.SocialStream_SE = f().SE : window.setTimeout(function () { u() }, 1) }; n(function () { u() }) })(jQuery, amplify, Handlebars, moment);