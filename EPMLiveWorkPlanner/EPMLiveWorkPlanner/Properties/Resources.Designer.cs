//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPMLiveWorkPlanner.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EPMLiveWorkPlanner.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///  &lt;Cfg id=&apos;WorkPlannerAddLinks&apos; Style=&apos;Standard&apos;
        ///    VarHeight=&apos;0&apos; Dragging=&apos;0&apos; Adding=&apos;0&apos; 
        ///    Deleting=&apos;0&apos; Selecting=&apos;0&apos; Sorting=&apos;0&apos; MainCol=&apos;Title&apos; NameCol=&apos;Title&apos; StaticCursor=&apos;1&apos; MaxVScroll=&apos;2000&apos;/&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;&gt;&lt;/Toolbar&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot;/&gt;
        ///  &lt;Cols&gt;
        ///    &lt;C Name=&apos;id&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; Visible=&apos;0&apos;/&gt;
        ///	&lt;C Name=&apos;Title&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; RelWidth=&apos;100&apos;/&gt;
        ///  &lt;/Cols&gt;
        ///  &lt;Header Title=&apos;Task Name&apos;/&gt;
        ///  &lt;Def&gt;
        ///	&lt;D Name=&apos;R&apos; CanFocus=&apos;1&apos;/&gt;
        ///	&lt;D Name=&apos;Folder&apos; CanFocus= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtAddLinksLayout {
            get {
                return ResourceManager.GetString("txtAddLinksLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TreeGrid( { Debug:&quot;&quot;, Layout:{ Url:&quot;../../_vti_bin/WorkPlanner.asmx&quot;, Method:&quot;Soap&quot;,Function:&quot;Execute&quot;,Namespace:&quot;workengine.com&quot;,Param:{Functionname:&quot;GetAgileLayout&quot;,Dataxml:&quot;&lt;%=sPlannerLayoutParam%&gt;&quot; } }, SuppressMessage:1 }, &quot;agileDiv&quot; ); .
        /// </summary>
        internal static string txtAgileDiv {
            get {
                return ResourceManager.GetString("txtAgileDiv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///	&lt;Cfg id=&apos;AgileGrid&apos; SuppressCfg=&apos;1&apos;  DateStrings=&apos;2&apos;  /&gt; &lt;!-- Configuration is not saved to cookies --&gt;
        ///	&lt;Cfg MainCol=&apos;Title&apos; NameCol=&apos;Title&apos; Style=&apos;Standard&apos;/&gt;
        ///	&lt;Cfg ConstHeight=&apos;0&apos;/&gt;&lt;!-- Grid will always fill its main tag --&gt;
        ///	&lt;Cfg Undo=&apos;1&apos;/&gt;&lt;!-- Undo / redo is supported, Ctrl+Z / Ctrl+Y --&gt;
        ///	&lt;!--&lt;Cfg SuppressMessage=&apos;2&apos;/&gt; Grid produces no informational message --&gt;
        ///	&lt;Cfg ExportType=&apos;Expanded,Outline&apos;/&gt;&lt;!-- Export setting, all rows will be exported expanded and will be used Excel outline --&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtAgileLayout {
            get {
                return ResourceManager.GetString("txtAgileLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///   &lt;Cfg id=&quot;AllocationGrid&quot; Style=&apos;Standard&apos; RightCanResize=&quot;1&quot; RightWidth=&quot;50&quot; Undo=&quot;1&quot; IdNames=&quot;Title&quot; AppendId=&quot;1&quot; IdChars=&quot;0123456789&quot; NumberId=&quot;1&quot; ConstWidth=&quot;1&quot; SuppressCfg=&apos;1&apos; /&gt;
        ///   &lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot; MidWidth=&apos;300&apos; /&gt;
        ///   &lt;Cfg GanttResourcesMaster=&quot;WorkPlannerGrid&quot; GanttResourcesName=&quot;NAME&quot; GanttResourcesType=&quot;TYPE&quot; GanttResourcesAvailability=&quot;MAX&quot; GanttResourcesGantt=&quot;G&quot; GanttResourcesChart=&quot;G&quot; Dragging=&quot;0&quot; Dropping=&quot;0&quot;/&gt;
        ///   
        ///   &lt;Panel Visible=&apos;0&apos;/&gt;
        ///
        ///   &lt;LeftCols&gt;
        ///      &lt;C Nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtAllocationGrid {
            get {
                return ResourceManager.GetString("txtAllocationGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///	&lt;Cfg id=&apos;WorkPlannerGrid&apos; SuppressCfg=&apos;1&apos;  DateStrings=&apos;2&apos; ConstWidth=&quot;0&quot; ConstHeight=&quot;1&quot;/&gt;
        ///	&lt;Cfg MainCol=&apos;Title&apos; NameCol=&apos;Title&apos; Style=&apos;Standard&apos; Paging=&quot;2&quot; PageLength=&quot;10&quot; MaxPages=&quot;2&quot; FastColumns=&quot;1&quot;/&gt;
        ///	&lt;Cfg Undo=&apos;1&apos;/&gt;
        ///	&lt;Cfg ExportType=&apos;Expanded,Outline&apos; GanttLap=&apos;1&apos;/&gt;
        ///	&lt;Cfg ChildParts=&apos;0&apos;/&gt;
        ///	&lt;Cfg PrintCols=&apos;1&apos;/&gt;
        ///	&lt;Cfg ExportCols=&apos;1&apos;/&gt;
        ///	&lt;Cfg ShowDeleted=&apos;0&apos;/&gt;
        ///	&lt;Cfg NumberId=&apos;1&apos; FullId=&apos;0&apos; IdChars=&apos;1234567890&apos; AddFocusCol=&apos;Title&apos; AutoIdPrefix=&apos;&apos;/&gt;
        ///	&lt;Cfg SelectingCells=&apos;0&apos;/&gt;
        ///	&lt;Cfg Search [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtDefaultConfig {
            get {
                return ResourceManager.GetString("txtDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///  &lt;Cfg id=&apos;WorkPlannerDetail&apos; Style=&apos;Standard&apos; DateStrings=&apos;2&apos;
        ///    VarHeight=&apos;1&apos; Dragging=&apos;0&apos; Adding=&apos;0&apos; 
        ///    Deleting=&apos;0&apos; Selecting=&apos;0&apos; Sorting=&apos;0&apos; MaxVScroll=&apos;2000&apos;/&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;&gt;&lt;/Toolbar&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot;/&gt;
        ///  &lt;Cols&gt;
        ///    &lt;C Name=&apos;N&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; Width=&apos;100&apos;/&gt;
        ///    &lt;C Name=&apos;V&apos; Type=&apos;Text&apos; RelWidth=&apos;100&apos;/&gt;
        ///  &lt;/Cols&gt;
        ///  &lt;Header N=&apos;Item&apos; V=&apos;Value&apos;/&gt;
        ///  &lt;Def&gt;
        ///	&lt;D Name=&apos;R&apos;/&gt;
        ///  &lt;/Def&gt;
        ///  &lt;Body&gt;
        ///    &lt;B&gt;
        ///      
        ///    &lt;/B&gt;
        ///  &lt;/Body&gt;
        ///&lt;/Grid&gt;
        ///.
        /// </summary>
        internal static string txtDetailLayout {
            get {
                return ResourceManager.GetString("txtDetailLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///  &lt;Cfg id=&apos;WorkPlannerExternalLinks&apos; Style=&apos;Standard&apos; MaxVScroll=&quot;600&quot;
        ///    VarHeight=&apos;1&apos; Dragging=&apos;0&apos; Adding=&apos;0&apos; 
        ///    Deleting=&apos;0&apos; Selecting=&apos;0&apos; Sorting=&apos;0&apos; StaticCursor=&apos;1&apos; /&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;&gt;&lt;/Toolbar&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot;/&gt;
        ///  &lt;Cols&gt;
        ///    &lt;C Name=&apos;ID&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; Visible=&apos;0&apos; WidthLap=&apos;1&apos;/&gt;
        ///	&lt;C Name=&apos;puid&apos; Type=&apos;Text&apos; Visible=&apos;0&apos; /&gt;
        ///	&lt;C Name=&apos;Reject&apos; Type=&apos;Bool&apos; CanEdit=&apos;1&apos; Width=&apos;40&apos; CanFocus=&apos;0&apos; WidthLap=&apos;1&apos;/&gt;
        ///	&lt;C Name=&apos;Action&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; Width=&apos;50&apos; C [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtExternalLinksApproval {
            get {
                return ResourceManager.GetString("txtExternalLinksApproval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///	&lt;Cfg id=&apos;ExternalProjects&apos; SuppressCfg=&apos;1&apos;  DateStrings=&apos;2&apos; ConstWidth=&quot;1&quot; MaxVScroll=&apos;2000&apos; StaticCursor=&apos;1&apos;/&gt;
        ///	&lt;Cfg MainCol=&apos;Title&apos; NameCol=&apos;Title&apos; Style=&apos;Standard&apos; Paging=&quot;2&quot; PageLength=&quot;10&quot;/&gt;
        ///	&lt;Cfg Undo=&apos;1&apos; Editing=&apos;0&apos; Dragging=&quot;0&quot;/&gt;
        ///	&lt;Cfg ExportType=&apos;Expanded,Outline&apos;/&gt;
        ///	&lt;Cfg ChildParts=&apos;0&apos;/&gt;
        ///	&lt;Cfg PrintCols=&apos;1&apos;/&gt;
        ///	&lt;Cfg ExportCols=&apos;1&apos;/&gt;
        ///	&lt;Cfg ShowDeleted=&apos;0&apos;/&gt;
        ///	&lt;Cfg NumberId=&apos;1&apos; FullId=&apos;0&apos; IdChars=&apos;1234567890&apos; AutoIdPrefix=&apos;&apos;/&gt;
        ///	&lt;Cfg FocusWholeRow=&apos;1&apos;/&gt;
        ///	&lt;Cfg Searching=&apos;1&apos;/&gt;
        ///	&lt;Pager [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtExternalProjects {
            get {
                return ResourceManager.GetString("txtExternalProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;
        ///            function GanttZoomIn()
        ///            {
        ///	            var G2antt1 = document.getElementById(&quot;G2antt1&quot;);
        ///	            switch(G2antt1.Chart.UnitScale)
        ///	            {
        ///		            case 2:
        ///			            G2antt1.Chart.UnitScale = 16;
        ///			            G2antt1.Chart.UnitWidth = 18;
        ///			            G2antt1.Chart.Level(1).Label = &quot;&lt;%m1%&gt;&quot;;
        ///                        G2antt1.Chart.Level(0).Label = &quot;&lt;%yyyy%&gt;&quot;;
        ///			            break;
        ///		            cas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtFileFunctions {
            get {
                return ResourceManager.GetString("txtFileFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BeginUpdate
        ///BackColor = RGB(255,255,255)
        ///MarkSearchColumn = False
        ///ShowFocusRect = False
        ///HasLines = False
        ///LinesAtRoot = 1
        ///Indent = 24
        ///DefaultItemHeight = 20
        ///
        ///HTMLPicture(&quot;excel&quot;) = &quot;gAAAABgYAEAgBEChSohIAC0KFEKEEKIEKgkNhQAAkZjkCgkejshkUjkklk0nlEplUrlRofQSADbMhEABwl8xmYAI0KaoPawANgYYwAeIDIIARE3mU0A08n1AoVEo1IBVDYrjo7NrFQoaoqoAK5+IYAXE3N1iAB2tCcfcwQFosswpsCns/fDVmlBobQm4GHVMi0KJQBBcceE3VAscJ3XgADAAucFgWDwt1ADNVa6bgUtoAcxSxeWxuPyMfAGUjhwfkwGmdQ5kxbXAL/f+jyGByeEjhQzrwEJ1OOy2m20uC3SszpvE/A4m40+6TfLOOqmEZS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtFileTemplate {
            get {
                return ResourceManager.GetString("txtFileTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;Grid&gt;
        ///	&lt;Cfg id=&apos;FolderGrid&apos; SuppressCfg=&apos;1&apos; CSS=&apos;TreeGrid/Folder/Grid.css&apos; UsePrefix=&apos;1&apos; Style=&apos;Office&apos;/&gt; &lt;!-- Configuration is not saved to cookies --&gt;
        ///	&lt;Cfg MainCol=&apos;Title&apos;/&gt;
        ///	
        ///	&lt;Cfg Undo=&apos;1&apos;/&gt;&lt;!-- Undo / redo is supported, Ctrl+Z / Ctrl+Y --&gt;
        ///	&lt;!--&lt;Cfg SuppressMessage=&apos;2&apos;/&gt; Grid produces no informational message --&gt;
        ///	&lt;Cfg ChildParts=&apos;0&apos;/&gt;&lt;!-- Rendering children on background is disabled --&gt;
        ///	&lt;Cfg SelectingCells=&apos;0&apos; SelectClass=&apos;0&apos; FocusWholeRow=&apos;1&apos;/&gt;
        ///	&lt;To [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtFolderLayoutConfig {
            get {
                return ResourceManager.GetString("txtFolderLayoutConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///  &lt;Cfg id=&apos;WorkPlannerLinks&apos; Style=&apos;Standard&apos;
        ///    VarHeight=&apos;1&apos; Dragging=&apos;0&apos; Adding=&apos;0&apos; 
        ///    Deleting=&apos;0&apos; Selecting=&apos;0&apos; Sorting=&apos;0&apos; StaticCursor=&apos;1&apos; MaxVScroll=&apos;2000&apos;/&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;&gt;&lt;/Toolbar&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot;/&gt;
        ///  &lt;Cols&gt;
        ///    &lt;C Name=&apos;ID&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; Visible=&apos;0&apos;/&gt;
        ///	&lt;C Name=&apos;N&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; RelWidth=&apos;100&apos;/&gt;
        ///    &lt;C Name=&apos;T&apos; Type=&apos;Enum&apos; Width=&apos;80&apos; Enum=&apos;|FS|FF|SS|SF&apos;/&gt;
        ///	&lt;C Name=&apos;L&apos; Type=&apos;Text&apos; Width=&apos;50&apos;/&gt;
        ///  &lt;/Cols&gt;
        ///  &lt;Header N=&apos;Task&apos; T=&apos;Type&apos; L=&apos;Lag [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtLinksLayout {
            get {
                return ResourceManager.GetString("txtLinksLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///  &lt;Cfg id=&apos;ProjectInfo&apos; Style=&apos;Standard&apos;
        ///     ConstHeight=&apos;1&apos; Dragging=&apos;0&apos; Adding=&apos;0&apos; DateStrings=&apos;2&apos; 
        ///    Deleting=&apos;0&apos; Selecting=&apos;0&apos; Sorting=&apos;0&apos;/&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;&gt;&lt;/Toolbar&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot;/&gt;
        ///  &lt;Cols&gt;
        ///    &lt;C Name=&apos;N&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; Width=&apos;100&apos;/&gt;
        ///    &lt;C Name=&apos;V&apos; Type=&apos;Text&apos; RelWidth=&apos;100&apos;/&gt;
        ///  &lt;/Cols&gt;
        ///  &lt;Header N=&apos;Item&apos; V=&apos;Value&apos;/&gt;
        ///  &lt;Def&gt;
        ///	&lt;D Name=&apos;R&apos;/&gt;
        ///  &lt;/Def&gt;
        ///  &lt;Body&gt;
        ///    &lt;B&gt;
        ///      
        ///    &lt;/B&gt;
        ///  &lt;/Body&gt;
        ///&lt;/Grid&gt;
        ///.
        /// </summary>
        internal static string txtProjectLayout {
            get {
                return ResourceManager.GetString("txtProjectLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Tab Id=&quot;Ribbon.Project&quot; Title=&quot;Project&quot; Description=&quot;Project&quot; Sequence=&quot;1110&quot;&gt;
        ///    &lt;Scaling Id=&quot;Ribbon.Project.Scaling&quot;&gt;
        ///
        ///        &lt;MaxSize Id=&quot;Ribbon.Project.StandardGroup.MaxSize&quot; GroupId=&quot;Ribbon.Project.StandardGroup&quot; Size=&quot;OneLargeTwoMedium&quot;/&gt;
        ///        &lt;Scale Id=&quot;Ribbon.Project.StandardGroup.Scaling.CustomTabScaling&quot; GroupId=&quot;Ribbon.Project.StandardGroup&quot; Size=&quot;SmallSmall&quot; /&gt;
        ///
        ///		&lt;MaxSize Id=&quot;Ribbon.Project.StatusGroup.MaxSize&quot; GroupId=&quot;Ribbon.Project.StatusGroup&quot; Size=&quot;OneLargeTwoMedium&quot;/&gt;
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtProjectTab {
            get {
                return ResourceManager.GetString("txtProjectTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///  &lt;Cfg id=&apos;WorkPlannerAssignments&apos; Style=&apos;Standard&apos;
        ///    VarHeight=&apos;1&apos; Dragging=&apos;0&apos; Adding=&apos;0&apos; 
        ///    Deleting=&apos;0&apos; Selecting=&apos;0&apos; Sorting=&apos;0&apos; StaticCursor=&apos;1&apos; MaxVScroll=&apos;2000&apos;/&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;&gt;&lt;/Toolbar&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot;/&gt;
        ///  &lt;Cols&gt;
        ///    &lt;C Name=&apos;R&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; RelWidth=&apos;100&apos;/&gt;
        ///	&lt;C Name=&apos;Work&apos; Type=&apos;Float&apos; Width=&apos;50&apos; Format=&apos;0.##&apos; CanCopyPaste=&apos;0&apos;/&gt;
        ///  &lt;/Cols&gt;
        ///  &lt;Header R=&apos;Resource&apos; U=&apos;Units&apos; H=&apos;Hours&apos;/&gt;
        ///  &lt;Def&gt;
        ///	&lt;D Name=&apos;R&apos;/&gt;
        ///  &lt;/Def&gt;
        ///  &lt;Body&gt;
        ///    &lt;B&gt;
        ///      
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtResourcesLayout {
            get {
                return ResourceManager.GetString("txtResourcesLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///  &lt;Cfg id=&apos;UpdateDetail&apos; Style=&apos;Standard&apos;
        ///    VarHeight=&apos;0&apos; Dragging=&apos;0&apos; Adding=&apos;0&apos; 
        ///    Deleting=&apos;0&apos; Selecting=&apos;0&apos; Sorting=&apos;0&apos; MaxVScroll=&apos;1000&apos;/&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;&gt;&lt;/Toolbar&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot;/&gt;
        ///  &lt;Cols&gt;
        ///    &lt;C Name=&apos;N&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; RelWidth=&apos;100&apos;/&gt;
        ///    &lt;C Name=&apos;V&apos; Type=&apos;Text&apos; Width=&apos;150&apos; NoEscape=&apos;1&apos;/&gt;
        ///	&lt;C Name=&apos;O&apos; Type=&apos;Text&apos; Width=&apos;150&apos; NoEscape=&apos;1&apos;/&gt;
        ///  &lt;/Cols&gt;
        ///  &lt;Header N=&apos;Field&apos; V=&apos;New Value&apos; O=&apos;Old Value&apos;/&gt;
        ///  &lt;Def&gt;
        ///	&lt;D Name=&apos;R&apos;/&gt;
        ///  &lt;/Def&gt;
        ///  &lt;Body&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtUpdateDetailLayout {
            get {
                return ResourceManager.GetString("txtUpdateDetailLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///	&lt;Cfg id=&apos;UpdateGrid&apos; ConstHeight=&apos;1&apos; ConstWidth=&apos;1&apos; Style=&apos;Standard&apos; SortIcons=&apos;0&apos;/&gt;
        ///	&lt;Toolbar Visible=&apos;0&apos;/&gt;
        ///	&lt;Panel Visible=&apos;0&apos;/&gt;
        ///	&lt;Cfg AutoIdPrefix=&apos;NT&apos;/&gt;
        ///	&lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot; NoColorState=&apos;1&apos;/&gt;
        ///	&lt;LeftCols&gt;
        ///		&lt;C Name=&apos;Accept&apos; Width=&apos;40&apos; Type=&apos;Bool&apos;/&gt;
        ///		&lt;C Name=&apos;Reject&apos; Width=&apos;40&apos; Type=&apos;Bool&apos;/&gt;
        ///		&lt;C CanEdit=&apos;0&apos; Name=&apos;Title&apos; RelWidth=&apos;1&apos;/&gt;
        ///	&lt;/LeftCols&gt;
        ///	&lt;Cols&gt;&lt;/Cols&gt;
        ///	&lt;RightCols&gt;
        ///		&lt;C Type=&apos;Text&apos; Name=&apos;ApprovalNotes&apos; Width=&apos;150&apos;/&gt;
        ///	&lt;/RightCols&gt;
        ///	&lt;Body&gt;
        ///		&lt;B&gt;&lt;/B&gt;
        ///	&lt;/Body&gt;
        ///	&lt;H [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtUpdatesLayout {
            get {
                return ResourceManager.GetString("txtUpdatesLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Grid&gt;
        ///  &lt;Cfg id=&apos;WorkPlannerViews&apos; Style=&apos;Standard&apos;
        ///    VarHeight=&apos;1&apos; Dragging=&apos;0&apos; Adding=&apos;0&apos; 
        ///    Deleting=&apos;0&apos; Selecting=&apos;0&apos; Sorting=&apos;0&apos; StaticCursor=&apos;1&apos;/&gt;
        ///  &lt;Toolbar Visible=&apos;0&apos;/&gt;
        ///  &lt;Cfg Code=&quot;GTACCNPSQEBSLC&quot;/&gt;
        ///  &lt;Cols&gt;
        ///    &lt;C Name=&apos;N&apos; Type=&apos;Text&apos; CanEdit=&apos;0&apos; RelWidth=&apos;100&apos;/&gt;
        ///  &lt;/Cols&gt;
        ///  &lt;Header Visible=&apos;0&apos;/&gt;
        ///  &lt;Def&gt;
        ///	&lt;D Name=&apos;R&apos;/&gt;
        ///  &lt;/Def&gt;
        ///  &lt;Body&gt;
        ///    &lt;B&gt;
        ///      &lt;I N=&apos;Default View&apos; Background=&apos;#FFFFFF&apos;/&gt;
        ///	  &lt;I N=&apos;Custom Views&apos; Background=&apos;#F4F4F4&apos; CanSelect=&apos;0&apos; CanFocus=&apos;0&apos;/&gt;
        ///    &lt;/B&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtViewsLayout {
            get {
                return ResourceManager.GetString("txtViewsLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Tab Id=&quot;Ribbon.WorkViews&quot; Title=&quot;Views&quot; Description=&quot;Views&quot; Sequence=&quot;1115&quot;&gt;
        ///    &lt;Scaling Id=&quot;Ribbon.WorkViews.Scaling&quot;&gt;
        ///
        ///        &lt;MaxSize Id=&quot;Ribbon.WorkViews.StandardGroup.MaxSize&quot; GroupId=&quot;Ribbon.WorkViews.StandardGroup&quot; Size=&quot;OneLargeTwoMedium&quot;/&gt;
        ///        &lt;Scale Id=&quot;Ribbon.WorkViews.StandardGroup.Scaling.CustomTabScaling&quot; GroupId=&quot;Ribbon.WorkViews.StandardGroup&quot; Size=&quot;SmallSmall&quot; /&gt;
        ///
        ///		&lt;MaxSize Id=&quot;Ribbon.WorkViews.GanttGroup.MaxSize&quot; GroupId=&quot;Ribbon.WorkViews.GanttGroup&quot; Size=&quot;OneLargeTwoMedium&quot;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtViewsTab {
            get {
                return ResourceManager.GetString("txtViewsTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Tab Id=&quot;Ribbon.WorkPlanner&quot; Title=&quot;Tasks&quot; Description=&quot;Tasks&quot; Sequence=&quot;1105&quot;&gt;
        ///    &lt;Scaling Id=&quot;Ribbon.WorkPlanner.Scaling&quot;&gt;
        ///
        ///        &lt;MaxSize Id=&quot;Ribbon.WorkPlanner.StandardGroup.MaxSize&quot; GroupId=&quot;Ribbon.WorkPlanner.StandardGroup&quot; Size=&quot;OneLargeTwoMedium&quot;/&gt;
        ///        &lt;Scale Id=&quot;Ribbon.WorkPlanner.StandardGroup.Scaling.CustomTabScaling&quot; GroupId=&quot;Ribbon.WorkPlanner.StandardGroup&quot; Size=&quot;SmallSmall&quot; /&gt;
        ///
        ///		&lt;MaxSize Id=&quot;Ribbon.WorkPlanner.InsertGroup.MaxSize&quot; GroupId=&quot;Ribbon.WorkPlanner.InsertGroup&quot; Size=&quot;O [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtWorkPlannerTab {
            get {
                return ResourceManager.GetString("txtWorkPlannerTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;GroupTemplate Id=&quot;Ribbon.Templates.StandardGroup&quot;&gt;
        ///	&lt;Layout Title=&quot;OneLargeTwoMedium&quot; LayoutTitle=&quot;OneLargeTwoMedium&quot;&gt;
        ///		&lt;Section Alignment=&quot;Top&quot; Type=&quot;OneRow&quot;&gt;
        ///		&lt;Row&gt;
        ///			&lt;ControlRef DisplayMode=&quot;Large&quot; TemplateAlias=&quot;cust1&quot; /&gt;
        ///			&lt;ControlRef DisplayMode=&quot;Large&quot; TemplateAlias=&quot;cust2&quot; /&gt;
        ///		&lt;/Row&gt;
        ///		&lt;/Section&gt;
        ///		&lt;OverflowSection Type=&quot;OneRow&quot; TemplateAlias=&quot;o3&quot; DisplayMode=&quot;Large&quot;/&gt;
        ///		&lt;OverflowSection Type=&quot;ThreeRow&quot; TemplateAlias=&quot;oM1&quot; DisplayMode=&quot;Medium&quot;/&gt;
        ///		&lt;OverflowSection Type=&quot;ThreeRow&quot; Tem [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string txtWorkPlannerTabTempalte {
            get {
                return ResourceManager.GetString("txtWorkPlannerTabTempalte", resourceCulture);
            }
        }
    }
}
