<table id="idWorkspaceTable" width="100%" border="0" cellpadding="0" cellspacing="0">
	<tr id="idWorkspaceArea">
		<td>
			<div id="EPKDisplayDiv">
				<object classid="CLSID:7393552F-C4E6-49F0-8B01-52819BB9A0BC" type="application/x-oleobject"  codebase='***EPKURL***/CAB/WE_Client.CAB#version=***CABVERSION***' style="display: none"></object>
			</div>
		</td>
	</tr>
</table>
<script src="/_layouts/epmlive/DHTML/dhtmlxajax.js"></script>
<script type="text/jscript">

	var sWebUrl = "***WEBURL***";

	document.body.onresize = Body_OnResize;
    
	function findAbsoluteTop(obj) {
        var y = 0;
        if (obj.offsetParent) { do { y+=obj.offsetTop; } while (obj = obj.offsetParent); }
        return y;
    }

	function getHeight()
	{
		var scnHei = 0;;
		if (self.innerHeight) // all except Explorer
			scnHei = self.innerHeight;
		else if (document.documentElement && document.documentElement.clientHeight)
			scnHei = document.documentElement.clientHeight;
		else if (document.body) // other Explorers
			scnHei = document.body.clientHeight;
		scnHei = (scnHei - findAbsoluteTop(document.getElementById("EPKDisplay")) - 60);
		if (scnHei <= 20) return 20;
		return scnHei;
	}

	function Body_OnResize()
	{
		try {
			if(***RESIZE***) { var id = document.getElementById('EPKDisplay'); if (id != null) id.style.height = getHeight() + 'px'; }
		}
		catch (e) {
			alert("OnResize exception : Exception. \nType=" + e.name + "; \nMessage=" + e.Message + ";\n\nPlease report this to your System Administrator");
		}
				
	}

    function Body_OnBeforeUnload() {
		var s = document.all("EPKDisplay").HandleData("Event", "<CanUnload/>");
        if (s != '')
            event.returnValue = unescape(s);
    }

    function Body_OnUnload() {
		//document.all("EPKDisplay").HandleData("Event", "<Unload/>");
    }

	function click()
	{
		var wp = document.getElementById('MSOZoneCell_WebPart');
		fireEvent(wp, 'mouseup');
	}

	function CreateControl(sDivID, sHTML) {
		var d = document.getElementById(sDivID);
		d.innerHTML = sHTML;
	}

	function fireEvent(element,event)
	{
		if (document.createEventObject){
			// dispatch for IE
			var evt = document.createEventObject();
			return element.fireEvent('on'+event,evt)
		}
		else{
			// dispatch for firefox + others
			var evt = document.createEvent("HTMLEvents");
			evt.initEvent(event, true, true ); // event type,bubbling,cancelable
			return !element.dispatchEvent(evt);
		}
	}

	function HandleRequest(sContext, sXML, Control) {
		switch (sContext) {
			case "ParentRequest":
				switch(sXML)
				{
					case "LeftMouseButtonClick":
						fireEvent(Control.parentNode, 'mouseup');
						break;
					case "Close":
						if(SP.UI.DialogResult)
							SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.OK, '');
						else
							SP.UI.ModalDialog.commonModalDialogClose(0, '');
						break;
					default:
						alert(sXML);
						break;
				}
				break;
			case "PageTitle":
				//document.getElementById('PageTitleInTitleArea').innerHtml = sXML;
				break;
			case "Redirect":
				// we don't want to unescape here as params may be encoded
				window.location.href = sXML;
				break;
			case "RedirectParent":
				window.location.href = sXML;
				break;
			case "MinClientHeight":
				break;
			case "EPKRequest":
			case "EPKCSRequest":
			case "DBARequest":
				var sReplyXML = HandleServerRequest(sContext, sXML);
				if (sReplyXML != "") {
					document.all("EPKDisplay").HandleData("RequestResponse", sReplyXML);
				}
				break;
            case "RefreshPage":
                window.location.reload();
                break;
			default:
				alert(sContext);
				break;
		}
	}

	function HandleServerRequest(sContext, sXML) {
		var sReplyXML = "";
		var sURL = "";
		try {
			switch (sContext) {
				case "EPKRequest":
					sURL = BuildURL("EPKRequest.ashx");
					break;
				case "EPKCSRequest":
					sURL = BuildURL("EPKCSRequest.ashx");
					break;
				case "DBARequest":
					sURL = BuildURL("DBARequest.ashx");
					break;
				default:
					sURL = sContext;
					break;
			}
			var oXMLHttp = new XMLHttpRequest();
			oXMLHttp.open("POST", sURL, false);
			oXMLHttp.setRequestHeader("Content-Type", "text/xml; charset=utf-8");
			oXMLHttp.send(sXML);
			sReplyXML = oXMLHttp.responseText;
			if (oXMLHttp.status != 200) {
				alert("HandleServerRequest : Invalid status reply.\n\nstatus=" + oXMLHttp.status.toString() + " : " + oXMLHttp.statusText + ";\n\nPlease report this to your System Administrator");
				alert("HandleServerRequest : Extra Info.\n\nURL=" + sURL + ";\n\nresponseText=" + sReplyXML + ";\n\nPlease report this to your System Administrator");
			}
			else if (sReplyXML.length == 0) {
				alert("HandleServerRequest : Invalid (zero length) reply from server.\n\nURL=" + sURL + ";\n\nstatus=" + oXMLHttp.status.toString() + " : " + oXMLHttp.statusText + ";\n\nPlease report this to your System Administrator");
			}
			else if (sReplyXML.substr(0, 16) == "Server Request Error" || sReplyXML.substr(4, 9) == "<!DOCTYPE") {
				sReplyXML = "<Reply><HRESULT>0</HRESULT><Error>Server Request Error</Error><STATUS>8</STATUS></Reply>";
			}
		}
		catch (e) {
			alert("HandleServerRequest : Exception. \nType=" + e.name + "; \nMessage=" + e.Message + ";\nURL=" + sURL + ";\n\nPlease report this to your System Administrator");
			alert("HandleServerRequest : status=" + oXMLHttp.status.toString() + " : " + oXMLHttp.statusText + ";\n\nPlease report this to your System Administrator");
		}
		return HandleChunking(sContext, sReplyXML);
	}

	function BuildRootURL() {
		var baseUrl = sWebUrl;
		var qi = baseUrl.lastIndexOf("?");
		var url2 = qi > 0 ? baseUrl.substr(0, qi) : baseUrl;
		return url2.substr(0, url2.lastIndexOf("/"));
	}

	function BuildURL(sPageName) {
		var url = sWebUrl;
		var i = url.toLowerCase().lastIndexOf("/_layouts/ppm");
		url = i > 0 ? url.substr(0, i) : url;
		return url + "/_layouts/ppm/" + sPageName;
	}

	function HandleChunking(sContext, sXML) {
		if (sXML.search("<CHUNKS>") < 0)
			return sXML;
		var xml = new ActiveXObject("Microsoft.XMLDOM");
		if (xml == null)
			return sXML;
		xml.preserveWhiteSpace = true;
		xml.loadXML(sXML);
		if (xml.parseError.errorCode != 0)
			alert("HandleChunking : xml parseError");
		var node = xml.selectSingleNode("CHUNKS");
		if (node == null)
			return sXML;

		var lChunks = Number(node.text);
		var sReplyXML = "";
		var s = "";
		for (var i = 1; i <= lChunks; i++) {
			var sRequest = "<CHUNK>" + i.toString() + "</CHUNK>";
			s = SendRequestToServer(sContext, sRequest);
			var xmlChunk = new ActiveXObject("Microsoft.XMLDOM");
			xmlChunk.preserveWhiteSpace = true;
			xmlChunk.loadXML(s);
			if (xmlChunk.parseError.errorCode != 0)
				alert("HandleChunking : xmldom parseError");

			var xmlChunkData = xmlChunk.selectSingleNode("CHUNKDATA");
			if (xmlChunkData == null)
				sReplyXML = "";
			else
				sReplyXML += xmlChunkData.text;
		}
		return sReplyXML;
	}

	function GetQueryParam(name) {
		name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
		var regexS = "[\\?&]" + name + "=([^&#]*)";
		var regex = new RegExp(regexS);
		var results = regex.exec(window.location.href);

		if (results == null)
			return "";
		else
			return results[1];
	}

	function decodeXML(sIn) {
		var s = decodeURIComponent(sIn);
		s = s.replace(/\&sp\;/g, " ");
		return s;
	}
</script>

<script for="EPKDisplay" event="Request(sContext,sXML);" type="text/jscript">
	HandleRequest(sContext,sXML,this);
</script>
 
<script type="text/jscript">
    if (typeof (window.ActiveXObject) == "undefined") {
        alert("Your browser does not support ActiveX controls.\n\nPage can not be displayed.");
		if(SP.UI.DialogResult)
			SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.OK, '');
		else
			SP.UI.ModalDialog.commonModalDialogClose(0, '');
    }

	CreateControl("EPKDisplayDiv", "<object classid='CLSID:7393552F-C4E6-49F0-8B01-52819BB9A0BC' id='EPKDisplay' type='application/x-oleobject' style='width: 100%; height:300px' viewastext codebase='***EPKURL***/CAB/WE_Client.CAB#version=***CABVERSION***'><div style='color:Red; vertical-align:top; height:100%;'><p>Please install the PfE client controls.</p></div></object>");
	
	function this_Onload() {
		if (typeof(document.all("EPKDisplay").HandleData) == "undefined")
			alert("Please re-open this page and install the PfE client controls");
		else {
			if ("***TestMode***" == "Yes")
				document.all("EPKDisplay").HandleData("ShowTestPanel", "");
			else
				document.all("EPKDisplay").HandleData("HideTestPanel", "");

			***SessionInfo***

			document.all("EPKDisplay").HandleData("SetControl", "***CONTROL***");
			document.all("EPKDisplay").HandleData("SetPage", "***PAGE***");
			document.all("EPKDisplay").HandleData("SetParam1", '***PARAMS***');
			
            document.all("EPKDisplay").HandleData("DisplayControl", "");
            window.setTimeout('Body_OnResize();', 100);
			
		}
	}

	function postResp(loader)
	{
	}

    //document.body.onload = this_Onload;
    //document.body.onbeforeunload = Body_OnBeforeUnload;
    //document.body.onunload = Body_OnUnload;
    //document.body.onresize = Body_OnResize;
    if (document.addEventListener != null) { // e.g. Firefox
        window.addEventListener("load", this_Onload, true);
        window.addEventListener("beforeunload", Body_OnBeforeUnload, true);
        window.addEventListener("unload", Body_OnUnload, true);
        window.addEventListener("resize", Body_OnResize, true);
    }
    else { // e.g. IE
        window.attachEvent("onload", this_Onload);
        window.attachEvent("onbeforeunload", Body_OnBeforeUnload);
        window.attachEvent("onunload", Body_OnUnload);
        window.attachEvent("onresize", Body_OnResize);
    }

</script>