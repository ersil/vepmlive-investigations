//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ProjectPublisher2016.EPMLivePublisher {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EPMLivePublisherSoap", Namespace="http://epmlive.com/")]
    public partial class EPMLivePublisher : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFileVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveTaskFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveProjectFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskCustomFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskCustomFields2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectCustomFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectCustomFields2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getProjectSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDefaultPublishURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSiteWithTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback isTaskUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPublishTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback setApprovedTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllTaskEnterpriseFieldListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllProjectEnterpriseFieldListOperationCompleted;
        
        private System.Threading.SendOrPostCallback publishOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSiteTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnterpriseSettingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EPMLivePublisher() {
            this.Url = global::ProjectPublisher2016.Properties.Settings.Default.ProjectPublisher2016_EPMLivePublisher_EPMLivePublisher;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getVersionCompletedEventHandler getVersionCompleted;
        
        /// <remarks/>
        public event getFileVersionCompletedEventHandler getFileVersionCompleted;
        
        /// <remarks/>
        public event saveTaskFieldsCompletedEventHandler saveTaskFieldsCompleted;
        
        /// <remarks/>
        public event saveProjectFieldsCompletedEventHandler saveProjectFieldsCompleted;
        
        /// <remarks/>
        public event getTaskCustomFieldsCompletedEventHandler getTaskCustomFieldsCompleted;
        
        /// <remarks/>
        public event getTaskCustomFields2CompletedEventHandler getTaskCustomFields2Completed;
        
        /// <remarks/>
        public event getProjectCustomFieldsCompletedEventHandler getProjectCustomFieldsCompleted;
        
        /// <remarks/>
        public event getProjectCustomFields2CompletedEventHandler getProjectCustomFields2Completed;
        
        /// <remarks/>
        public event getProjectSiteCompletedEventHandler getProjectSiteCompleted;
        
        /// <remarks/>
        public event getDefaultPublishURLCompletedEventHandler getDefaultPublishURLCompleted;
        
        /// <remarks/>
        public event createSiteCompletedEventHandler createSiteCompleted;
        
        /// <remarks/>
        public event createSiteWithTemplateCompletedEventHandler createSiteWithTemplateCompleted;
        
        /// <remarks/>
        public event isTaskUpdatesCompletedEventHandler isTaskUpdatesCompleted;
        
        /// <remarks/>
        public event getPublishTypeCompletedEventHandler getPublishTypeCompleted;
        
        /// <remarks/>
        public event setApprovedTasksCompletedEventHandler setApprovedTasksCompleted;
        
        /// <remarks/>
        public event getUpdatesCompletedEventHandler getUpdatesCompleted;
        
        /// <remarks/>
        public event getAllTaskEnterpriseFieldListCompletedEventHandler getAllTaskEnterpriseFieldListCompleted;
        
        /// <remarks/>
        public event getAllProjectEnterpriseFieldListCompletedEventHandler getAllProjectEnterpriseFieldListCompleted;
        
        /// <remarks/>
        public event publishCompletedEventHandler publishCompleted;
        
        /// <remarks/>
        public event getSiteTemplatesCompletedEventHandler getSiteTemplatesCompleted;
        
        /// <remarks/>
        public event getEnterpriseSettingCompletedEventHandler getEnterpriseSettingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getVersion", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getVersion() {
            object[] results = this.Invoke("getVersion", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionAsync() {
            this.getVersionAsync(null);
        }
        
        /// <remarks/>
        public void getVersionAsync(object userState) {
            if ((this.getVersionOperationCompleted == null)) {
                this.getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionOperationCompleted);
            }
            this.InvokeAsync("getVersion", new object[0], this.getVersionOperationCompleted, userState);
        }
        
        private void OngetVersionOperationCompleted(object arg) {
            if ((this.getVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionCompleted(this, new getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getFileVersion", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFileVersion() {
            object[] results = this.Invoke("getFileVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFileVersionAsync() {
            this.getFileVersionAsync(null);
        }
        
        /// <remarks/>
        public void getFileVersionAsync(object userState) {
            if ((this.getFileVersionOperationCompleted == null)) {
                this.getFileVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFileVersionOperationCompleted);
            }
            this.InvokeAsync("getFileVersion", new object[0], this.getFileVersionOperationCompleted, userState);
        }
        
        private void OngetFileVersionOperationCompleted(object arg) {
            if ((this.getFileVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFileVersionCompleted(this, new getFileVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/saveTaskFields", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveTaskFields(CustomField[] cfs, string[] delFields) {
            this.Invoke("saveTaskFields", new object[] {
                        cfs,
                        delFields});
        }
        
        /// <remarks/>
        public void saveTaskFieldsAsync(CustomField[] cfs, string[] delFields) {
            this.saveTaskFieldsAsync(cfs, delFields, null);
        }
        
        /// <remarks/>
        public void saveTaskFieldsAsync(CustomField[] cfs, string[] delFields, object userState) {
            if ((this.saveTaskFieldsOperationCompleted == null)) {
                this.saveTaskFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveTaskFieldsOperationCompleted);
            }
            this.InvokeAsync("saveTaskFields", new object[] {
                        cfs,
                        delFields}, this.saveTaskFieldsOperationCompleted, userState);
        }
        
        private void OnsaveTaskFieldsOperationCompleted(object arg) {
            if ((this.saveTaskFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveTaskFieldsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/saveProjectFields", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void saveProjectFields(CustomField[] cfs, string[] delFields) {
            this.Invoke("saveProjectFields", new object[] {
                        cfs,
                        delFields});
        }
        
        /// <remarks/>
        public void saveProjectFieldsAsync(CustomField[] cfs, string[] delFields) {
            this.saveProjectFieldsAsync(cfs, delFields, null);
        }
        
        /// <remarks/>
        public void saveProjectFieldsAsync(CustomField[] cfs, string[] delFields, object userState) {
            if ((this.saveProjectFieldsOperationCompleted == null)) {
                this.saveProjectFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveProjectFieldsOperationCompleted);
            }
            this.InvokeAsync("saveProjectFields", new object[] {
                        cfs,
                        delFields}, this.saveProjectFieldsOperationCompleted, userState);
        }
        
        private void OnsaveProjectFieldsOperationCompleted(object arg) {
            if ((this.saveProjectFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveProjectFieldsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getTaskCustomFields", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomField[] getTaskCustomFields() {
            object[] results = this.Invoke("getTaskCustomFields", new object[0]);
            return ((CustomField[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskCustomFieldsAsync() {
            this.getTaskCustomFieldsAsync(null);
        }
        
        /// <remarks/>
        public void getTaskCustomFieldsAsync(object userState) {
            if ((this.getTaskCustomFieldsOperationCompleted == null)) {
                this.getTaskCustomFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskCustomFieldsOperationCompleted);
            }
            this.InvokeAsync("getTaskCustomFields", new object[0], this.getTaskCustomFieldsOperationCompleted, userState);
        }
        
        private void OngetTaskCustomFieldsOperationCompleted(object arg) {
            if ((this.getTaskCustomFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskCustomFieldsCompleted(this, new getTaskCustomFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getTaskCustomFields2", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomField[] getTaskCustomFields2(string projectServerUrl) {
            object[] results = this.Invoke("getTaskCustomFields2", new object[] {
                        projectServerUrl});
            return ((CustomField[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskCustomFields2Async(string projectServerUrl) {
            this.getTaskCustomFields2Async(projectServerUrl, null);
        }
        
        /// <remarks/>
        public void getTaskCustomFields2Async(string projectServerUrl, object userState) {
            if ((this.getTaskCustomFields2OperationCompleted == null)) {
                this.getTaskCustomFields2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskCustomFields2OperationCompleted);
            }
            this.InvokeAsync("getTaskCustomFields2", new object[] {
                        projectServerUrl}, this.getTaskCustomFields2OperationCompleted, userState);
        }
        
        private void OngetTaskCustomFields2OperationCompleted(object arg) {
            if ((this.getTaskCustomFields2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskCustomFields2Completed(this, new getTaskCustomFields2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getProjectCustomFields", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomField[] getProjectCustomFields() {
            object[] results = this.Invoke("getProjectCustomFields", new object[0]);
            return ((CustomField[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectCustomFieldsAsync() {
            this.getProjectCustomFieldsAsync(null);
        }
        
        /// <remarks/>
        public void getProjectCustomFieldsAsync(object userState) {
            if ((this.getProjectCustomFieldsOperationCompleted == null)) {
                this.getProjectCustomFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectCustomFieldsOperationCompleted);
            }
            this.InvokeAsync("getProjectCustomFields", new object[0], this.getProjectCustomFieldsOperationCompleted, userState);
        }
        
        private void OngetProjectCustomFieldsOperationCompleted(object arg) {
            if ((this.getProjectCustomFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectCustomFieldsCompleted(this, new getProjectCustomFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getProjectCustomFields2", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomField[] getProjectCustomFields2(string projectServerUrl) {
            object[] results = this.Invoke("getProjectCustomFields2", new object[] {
                        projectServerUrl});
            return ((CustomField[])(results[0]));
        }
        
        /// <remarks/>
        public void getProjectCustomFields2Async(string projectServerUrl) {
            this.getProjectCustomFields2Async(projectServerUrl, null);
        }
        
        /// <remarks/>
        public void getProjectCustomFields2Async(string projectServerUrl, object userState) {
            if ((this.getProjectCustomFields2OperationCompleted == null)) {
                this.getProjectCustomFields2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectCustomFields2OperationCompleted);
            }
            this.InvokeAsync("getProjectCustomFields2", new object[] {
                        projectServerUrl}, this.getProjectCustomFields2OperationCompleted, userState);
        }
        
        private void OngetProjectCustomFields2OperationCompleted(object arg) {
            if ((this.getProjectCustomFields2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectCustomFields2Completed(this, new getProjectCustomFields2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getProjectSite", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getProjectSite(System.Guid projectUID) {
            object[] results = this.Invoke("getProjectSite", new object[] {
                        projectUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getProjectSiteAsync(System.Guid projectUID) {
            this.getProjectSiteAsync(projectUID, null);
        }
        
        /// <remarks/>
        public void getProjectSiteAsync(System.Guid projectUID, object userState) {
            if ((this.getProjectSiteOperationCompleted == null)) {
                this.getProjectSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProjectSiteOperationCompleted);
            }
            this.InvokeAsync("getProjectSite", new object[] {
                        projectUID}, this.getProjectSiteOperationCompleted, userState);
        }
        
        private void OngetProjectSiteOperationCompleted(object arg) {
            if ((this.getProjectSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProjectSiteCompleted(this, new getProjectSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getDefaultPublishURL", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDefaultPublishURL() {
            object[] results = this.Invoke("getDefaultPublishURL", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDefaultPublishURLAsync() {
            this.getDefaultPublishURLAsync(null);
        }
        
        /// <remarks/>
        public void getDefaultPublishURLAsync(object userState) {
            if ((this.getDefaultPublishURLOperationCompleted == null)) {
                this.getDefaultPublishURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultPublishURLOperationCompleted);
            }
            this.InvokeAsync("getDefaultPublishURL", new object[0], this.getDefaultPublishURLOperationCompleted, userState);
        }
        
        private void OngetDefaultPublishURLOperationCompleted(object arg) {
            if ((this.getDefaultPublishURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDefaultPublishURLCompleted(this, new getDefaultPublishURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/createSite", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createSite(string url, string projectName) {
            object[] results = this.Invoke("createSite", new object[] {
                        url,
                        projectName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createSiteAsync(string url, string projectName) {
            this.createSiteAsync(url, projectName, null);
        }
        
        /// <remarks/>
        public void createSiteAsync(string url, string projectName, object userState) {
            if ((this.createSiteOperationCompleted == null)) {
                this.createSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSiteOperationCompleted);
            }
            this.InvokeAsync("createSite", new object[] {
                        url,
                        projectName}, this.createSiteOperationCompleted, userState);
        }
        
        private void OncreateSiteOperationCompleted(object arg) {
            if ((this.createSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSiteCompleted(this, new createSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/createSiteWithTemplate", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createSiteWithTemplate(string url, string projectName, string template) {
            object[] results = this.Invoke("createSiteWithTemplate", new object[] {
                        url,
                        projectName,
                        template});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createSiteWithTemplateAsync(string url, string projectName, string template) {
            this.createSiteWithTemplateAsync(url, projectName, template, null);
        }
        
        /// <remarks/>
        public void createSiteWithTemplateAsync(string url, string projectName, string template, object userState) {
            if ((this.createSiteWithTemplateOperationCompleted == null)) {
                this.createSiteWithTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSiteWithTemplateOperationCompleted);
            }
            this.InvokeAsync("createSiteWithTemplate", new object[] {
                        url,
                        projectName,
                        template}, this.createSiteWithTemplateOperationCompleted, userState);
        }
        
        private void OncreateSiteWithTemplateOperationCompleted(object arg) {
            if ((this.createSiteWithTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSiteWithTemplateCompleted(this, new createSiteWithTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/isTaskUpdates", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isTaskUpdates(System.Guid projectGuid) {
            object[] results = this.Invoke("isTaskUpdates", new object[] {
                        projectGuid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isTaskUpdatesAsync(System.Guid projectGuid) {
            this.isTaskUpdatesAsync(projectGuid, null);
        }
        
        /// <remarks/>
        public void isTaskUpdatesAsync(System.Guid projectGuid, object userState) {
            if ((this.isTaskUpdatesOperationCompleted == null)) {
                this.isTaskUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisTaskUpdatesOperationCompleted);
            }
            this.InvokeAsync("isTaskUpdates", new object[] {
                        projectGuid}, this.isTaskUpdatesOperationCompleted, userState);
        }
        
        private void OnisTaskUpdatesOperationCompleted(object arg) {
            if ((this.isTaskUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isTaskUpdatesCompleted(this, new isTaskUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getPublishType", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getPublishType(System.Guid projectGuid) {
            object[] results = this.Invoke("getPublishType", new object[] {
                        projectGuid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getPublishTypeAsync(System.Guid projectGuid) {
            this.getPublishTypeAsync(projectGuid, null);
        }
        
        /// <remarks/>
        public void getPublishTypeAsync(System.Guid projectGuid, object userState) {
            if ((this.getPublishTypeOperationCompleted == null)) {
                this.getPublishTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPublishTypeOperationCompleted);
            }
            this.InvokeAsync("getPublishType", new object[] {
                        projectGuid}, this.getPublishTypeOperationCompleted, userState);
        }
        
        private void OngetPublishTypeOperationCompleted(object arg) {
            if ((this.getPublishTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPublishTypeCompleted(this, new getPublishTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/setApprovedTasks", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setApprovedTasks(TaskApprovalItem[] taskItems, System.Guid projectGuid) {
            this.Invoke("setApprovedTasks", new object[] {
                        taskItems,
                        projectGuid});
        }
        
        /// <remarks/>
        public void setApprovedTasksAsync(TaskApprovalItem[] taskItems, System.Guid projectGuid) {
            this.setApprovedTasksAsync(taskItems, projectGuid, null);
        }
        
        /// <remarks/>
        public void setApprovedTasksAsync(TaskApprovalItem[] taskItems, System.Guid projectGuid, object userState) {
            if ((this.setApprovedTasksOperationCompleted == null)) {
                this.setApprovedTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetApprovedTasksOperationCompleted);
            }
            this.InvokeAsync("setApprovedTasks", new object[] {
                        taskItems,
                        projectGuid}, this.setApprovedTasksOperationCompleted, userState);
        }
        
        private void OnsetApprovedTasksOperationCompleted(object arg) {
            if ((this.setApprovedTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setApprovedTasksCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getUpdates", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateTaskItem[] getUpdates(string projectGuid) {
            object[] results = this.Invoke("getUpdates", new object[] {
                        projectGuid});
            return ((UpdateTaskItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getUpdatesAsync(string projectGuid) {
            this.getUpdatesAsync(projectGuid, null);
        }
        
        /// <remarks/>
        public void getUpdatesAsync(string projectGuid, object userState) {
            if ((this.getUpdatesOperationCompleted == null)) {
                this.getUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUpdatesOperationCompleted);
            }
            this.InvokeAsync("getUpdates", new object[] {
                        projectGuid}, this.getUpdatesOperationCompleted, userState);
        }
        
        private void OngetUpdatesOperationCompleted(object arg) {
            if ((this.getUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUpdatesCompleted(this, new getUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getAllTaskEnterpriseFieldList", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getAllTaskEnterpriseFieldList() {
            object[] results = this.Invoke("getAllTaskEnterpriseFieldList", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllTaskEnterpriseFieldListAsync() {
            this.getAllTaskEnterpriseFieldListAsync(null);
        }
        
        /// <remarks/>
        public void getAllTaskEnterpriseFieldListAsync(object userState) {
            if ((this.getAllTaskEnterpriseFieldListOperationCompleted == null)) {
                this.getAllTaskEnterpriseFieldListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTaskEnterpriseFieldListOperationCompleted);
            }
            this.InvokeAsync("getAllTaskEnterpriseFieldList", new object[0], this.getAllTaskEnterpriseFieldListOperationCompleted, userState);
        }
        
        private void OngetAllTaskEnterpriseFieldListOperationCompleted(object arg) {
            if ((this.getAllTaskEnterpriseFieldListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllTaskEnterpriseFieldListCompleted(this, new getAllTaskEnterpriseFieldListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getAllProjectEnterpriseFieldList", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getAllProjectEnterpriseFieldList() {
            object[] results = this.Invoke("getAllProjectEnterpriseFieldList", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllProjectEnterpriseFieldListAsync() {
            this.getAllProjectEnterpriseFieldListAsync(null);
        }
        
        /// <remarks/>
        public void getAllProjectEnterpriseFieldListAsync(object userState) {
            if ((this.getAllProjectEnterpriseFieldListOperationCompleted == null)) {
                this.getAllProjectEnterpriseFieldListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllProjectEnterpriseFieldListOperationCompleted);
            }
            this.InvokeAsync("getAllProjectEnterpriseFieldList", new object[0], this.getAllProjectEnterpriseFieldListOperationCompleted, userState);
        }
        
        private void OngetAllProjectEnterpriseFieldListOperationCompleted(object arg) {
            if ((this.getAllProjectEnterpriseFieldListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllProjectEnterpriseFieldListCompleted(this, new getAllProjectEnterpriseFieldListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/publish", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool publish(System.Guid projectUid, int pubType, string url) {
            object[] results = this.Invoke("publish", new object[] {
                        projectUid,
                        pubType,
                        url});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void publishAsync(System.Guid projectUid, int pubType, string url) {
            this.publishAsync(projectUid, pubType, url, null);
        }
        
        /// <remarks/>
        public void publishAsync(System.Guid projectUid, int pubType, string url, object userState) {
            if ((this.publishOperationCompleted == null)) {
                this.publishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpublishOperationCompleted);
            }
            this.InvokeAsync("publish", new object[] {
                        projectUid,
                        pubType,
                        url}, this.publishOperationCompleted, userState);
        }
        
        private void OnpublishOperationCompleted(object arg) {
            if ((this.publishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.publishCompleted(this, new publishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getSiteTemplates", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getSiteTemplates() {
            object[] results = this.Invoke("getSiteTemplates", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getSiteTemplatesAsync() {
            this.getSiteTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void getSiteTemplatesAsync(object userState) {
            if ((this.getSiteTemplatesOperationCompleted == null)) {
                this.getSiteTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSiteTemplatesOperationCompleted);
            }
            this.InvokeAsync("getSiteTemplates", new object[0], this.getSiteTemplatesOperationCompleted, userState);
        }
        
        private void OngetSiteTemplatesOperationCompleted(object arg) {
            if ((this.getSiteTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSiteTemplatesCompleted(this, new getSiteTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getEnterpriseSetting", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getEnterpriseSetting(string setting) {
            object[] results = this.Invoke("getEnterpriseSetting", new object[] {
                        setting});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEnterpriseSettingAsync(string setting) {
            this.getEnterpriseSettingAsync(setting, null);
        }
        
        /// <remarks/>
        public void getEnterpriseSettingAsync(string setting, object userState) {
            if ((this.getEnterpriseSettingOperationCompleted == null)) {
                this.getEnterpriseSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnterpriseSettingOperationCompleted);
            }
            this.InvokeAsync("getEnterpriseSetting", new object[] {
                        setting}, this.getEnterpriseSettingOperationCompleted, userState);
        }
        
        private void OngetEnterpriseSettingOperationCompleted(object arg) {
            if ((this.getEnterpriseSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnterpriseSettingCompleted(this, new getEnterpriseSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epmlive.com/")]
    public partial class CustomField {
        
        private string nameField;
        
        private string displayNameField;
        
        private string wssFieldNameField;
        
        private bool lockedField;
        
        private bool visibleField;
        
        private bool editableField;
        
        private SPFieldType fieldTypeField;
        
        private int fieldCategoryField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string wssFieldName {
            get {
                return this.wssFieldNameField;
            }
            set {
                this.wssFieldNameField = value;
            }
        }
        
        /// <remarks/>
        public bool locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        public bool visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public bool editable {
            get {
                return this.editableField;
            }
            set {
                this.editableField = value;
            }
        }
        
        /// <remarks/>
        public SPFieldType fieldType {
            get {
                return this.fieldTypeField;
            }
            set {
                this.fieldTypeField = value;
            }
        }
        
        /// <remarks/>
        public int fieldCategory {
            get {
                return this.fieldCategoryField;
            }
            set {
                this.fieldCategoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epmlive.com/")]
    public enum SPFieldType {
        
        /// <remarks/>
        Invalid,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Note,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Counter,
        
        /// <remarks/>
        Choice,
        
        /// <remarks/>
        Lookup,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        Number,
        
        /// <remarks/>
        Currency,
        
        /// <remarks/>
        URL,
        
        /// <remarks/>
        Computed,
        
        /// <remarks/>
        Threading,
        
        /// <remarks/>
        Guid,
        
        /// <remarks/>
        MultiChoice,
        
        /// <remarks/>
        GridChoice,
        
        /// <remarks/>
        Calculated,
        
        /// <remarks/>
        File,
        
        /// <remarks/>
        Attachments,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Recurrence,
        
        /// <remarks/>
        CrossProjectLink,
        
        /// <remarks/>
        ModStat,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        ContentTypeId,
        
        /// <remarks/>
        PageSeparator,
        
        /// <remarks/>
        ThreadIndex,
        
        /// <remarks/>
        WorkflowStatus,
        
        /// <remarks/>
        AllDayEvent,
        
        /// <remarks/>
        WorkflowEventType,
        
        /// <remarks/>
        MaxItems,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epmlive.com/")]
    public partial class UpdateFieldItem {
        
        private string displayNameField;
        
        private string valueField;
        
        private int fieldIdField;
        
        private string internalFieldNameField;
        
        private System.Guid fieldGuidField;
        
        /// <remarks/>
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public int fieldId {
            get {
                return this.fieldIdField;
            }
            set {
                this.fieldIdField = value;
            }
        }
        
        /// <remarks/>
        public string internalFieldName {
            get {
                return this.internalFieldNameField;
            }
            set {
                this.internalFieldNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid fieldGuid {
            get {
                return this.fieldGuidField;
            }
            set {
                this.fieldGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epmlive.com/")]
    public partial class UpdateTaskItem {
        
        private string tasknameField;
        
        private string taskuidField;
        
        private string startDateField;
        
        private string finishDateField;
        
        private string percentCompleteField;
        
        private string notesField;
        
        private int listItemIdField;
        
        private UpdateFieldItem[] updatefieldsField;
        
        private string taskHierarchyField;
        
        /// <remarks/>
        public string taskname {
            get {
                return this.tasknameField;
            }
            set {
                this.tasknameField = value;
            }
        }
        
        /// <remarks/>
        public string taskuid {
            get {
                return this.taskuidField;
            }
            set {
                this.taskuidField = value;
            }
        }
        
        /// <remarks/>
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string finishDate {
            get {
                return this.finishDateField;
            }
            set {
                this.finishDateField = value;
            }
        }
        
        /// <remarks/>
        public string percentComplete {
            get {
                return this.percentCompleteField;
            }
            set {
                this.percentCompleteField = value;
            }
        }
        
        /// <remarks/>
        public string notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public int listItemId {
            get {
                return this.listItemIdField;
            }
            set {
                this.listItemIdField = value;
            }
        }
        
        /// <remarks/>
        public UpdateFieldItem[] updatefields {
            get {
                return this.updatefieldsField;
            }
            set {
                this.updatefieldsField = value;
            }
        }
        
        /// <remarks/>
        public string taskHierarchy {
            get {
                return this.taskHierarchyField;
            }
            set {
                this.taskHierarchyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epmlive.com/")]
    public partial class TaskApprovalItem {
        
        private int listItemIdField;
        
        private int approvalStatusField;
        
        private string approvalNotesField;
        
        private string taskuidField;
        
        /// <remarks/>
        public int listItemId {
            get {
                return this.listItemIdField;
            }
            set {
                this.listItemIdField = value;
            }
        }
        
        /// <remarks/>
        public int approvalStatus {
            get {
                return this.approvalStatusField;
            }
            set {
                this.approvalStatusField = value;
            }
        }
        
        /// <remarks/>
        public string approvalNotes {
            get {
                return this.approvalNotesField;
            }
            set {
                this.approvalNotesField = value;
            }
        }
        
        /// <remarks/>
        public string taskuid {
            get {
                return this.taskuidField;
            }
            set {
                this.taskuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getVersionCompletedEventHandler(object sender, getVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getFileVersionCompletedEventHandler(object sender, getFileVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFileVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFileVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void saveTaskFieldsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void saveProjectFieldsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getTaskCustomFieldsCompletedEventHandler(object sender, getTaskCustomFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getTaskCustomFields2CompletedEventHandler(object sender, getTaskCustomFields2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskCustomFields2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskCustomFields2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getProjectCustomFieldsCompletedEventHandler(object sender, getProjectCustomFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getProjectCustomFields2CompletedEventHandler(object sender, getProjectCustomFields2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectCustomFields2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectCustomFields2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getProjectSiteCompletedEventHandler(object sender, getProjectSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProjectSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProjectSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getDefaultPublishURLCompletedEventHandler(object sender, getDefaultPublishURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDefaultPublishURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDefaultPublishURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void createSiteCompletedEventHandler(object sender, createSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void createSiteWithTemplateCompletedEventHandler(object sender, createSiteWithTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSiteWithTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSiteWithTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void isTaskUpdatesCompletedEventHandler(object sender, isTaskUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isTaskUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isTaskUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getPublishTypeCompletedEventHandler(object sender, getPublishTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPublishTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPublishTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void setApprovedTasksCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getUpdatesCompletedEventHandler(object sender, getUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateTaskItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateTaskItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllTaskEnterpriseFieldListCompletedEventHandler(object sender, getAllTaskEnterpriseFieldListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllTaskEnterpriseFieldListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllTaskEnterpriseFieldListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getAllProjectEnterpriseFieldListCompletedEventHandler(object sender, getAllProjectEnterpriseFieldListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllProjectEnterpriseFieldListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllProjectEnterpriseFieldListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void publishCompletedEventHandler(object sender, publishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class publishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal publishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getSiteTemplatesCompletedEventHandler(object sender, getSiteTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSiteTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSiteTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void getEnterpriseSettingCompletedEventHandler(object sender, getEnterpriseSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnterpriseSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnterpriseSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591