//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EPMLiveAccountManagement.accounts {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://epmlive.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback createTrialSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSiteAddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback isSiteAvailableOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelSiteSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkspaceSiteStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnterpriseSiteStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAccountSilentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAccountFromRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPartnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback findUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeNameOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = "https://my.epmlive.com/_vti_bin/epmlive/accounts/service.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getLoginCompletedEventHandler getLoginCompleted;
        
        /// <remarks/>
        public event createTrialSiteCompletedEventHandler createTrialSiteCompleted;
        
        /// <remarks/>
        public event createSiteAddUserCompletedEventHandler createSiteAddUserCompleted;
        
        /// <remarks/>
        public event createSiteCompletedEventHandler createSiteCompleted;
        
        /// <remarks/>
        public event isSiteAvailableCompletedEventHandler isSiteAvailableCompleted;
        
        /// <remarks/>
        public event cancelSiteSubscriptionCompletedEventHandler cancelSiteSubscriptionCompleted;
        
        /// <remarks/>
        public event enableAccountCompletedEventHandler enableAccountCompleted;
        
        /// <remarks/>
        public event getWorkspaceSiteStatisticsCompletedEventHandler getWorkspaceSiteStatisticsCompleted;
        
        /// <remarks/>
        public event getEnterpriseSiteStatisticsCompletedEventHandler getEnterpriseSiteStatisticsCompleted;
        
        /// <remarks/>
        public event getSitesCompletedEventHandler getSitesCompleted;
        
        /// <remarks/>
        public event createAccountCompletedEventHandler createAccountCompleted;
        
        /// <remarks/>
        public event createAccountSilentCompletedEventHandler createAccountSilentCompleted;
        
        /// <remarks/>
        public event createAccountFromRegisterCompletedEventHandler createAccountFromRegisterCompleted;
        
        /// <remarks/>
        public event addPartnerCompletedEventHandler addPartnerCompleted;
        
        /// <remarks/>
        public event findUserCompletedEventHandler findUserCompleted;
        
        /// <remarks/>
        public event getNameCompletedEventHandler getNameCompleted;
        
        /// <remarks/>
        public event getEmailCompletedEventHandler getEmailCompleted;
        
        /// <remarks/>
        public event resetPasswordCompletedEventHandler resetPasswordCompleted;
        
        /// <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
        /// <remarks/>
        public event changeNameCompletedEventHandler changeNameCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getLogin", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getLogin() {
            object[] results = this.Invoke("getLogin", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLoginAsync() {
            this.getLoginAsync(null);
        }
        
        /// <remarks/>
        public void getLoginAsync(object userState) {
            if ((this.getLoginOperationCompleted == null)) {
                this.getLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLoginOperationCompleted);
            }
            this.InvokeAsync("getLogin", new object[0], this.getLoginOperationCompleted, userState);
        }
        
        private void OngetLoginOperationCompleted(object arg) {
            if ((this.getLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLoginCompleted(this, new getLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/createTrialSite", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createTrialSite(string title, string url, string email, string template, string templateAlias, out string error) {
            object[] results = this.Invoke("createTrialSite", new object[] {
                        title,
                        url,
                        email,
                        template,
                        templateAlias});
            error = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createTrialSiteAsync(string title, string url, string email, string template, string templateAlias) {
            this.createTrialSiteAsync(title, url, email, template, templateAlias, null);
        }
        
        /// <remarks/>
        public void createTrialSiteAsync(string title, string url, string email, string template, string templateAlias, object userState) {
            if ((this.createTrialSiteOperationCompleted == null)) {
                this.createTrialSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTrialSiteOperationCompleted);
            }
            this.InvokeAsync("createTrialSite", new object[] {
                        title,
                        url,
                        email,
                        template,
                        templateAlias}, this.createTrialSiteOperationCompleted, userState);
        }
        
        private void OncreateTrialSiteOperationCompleted(object arg) {
            if ((this.createTrialSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createTrialSiteCompleted(this, new createTrialSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/createSiteAddUser", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createSiteAddUser(string title, string url, string email, string template, string templateAlias, string siteadmin, out string error) {
            object[] results = this.Invoke("createSiteAddUser", new object[] {
                        title,
                        url,
                        email,
                        template,
                        templateAlias,
                        siteadmin});
            error = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createSiteAddUserAsync(string title, string url, string email, string template, string templateAlias, string siteadmin) {
            this.createSiteAddUserAsync(title, url, email, template, templateAlias, siteadmin, null);
        }
        
        /// <remarks/>
        public void createSiteAddUserAsync(string title, string url, string email, string template, string templateAlias, string siteadmin, object userState) {
            if ((this.createSiteAddUserOperationCompleted == null)) {
                this.createSiteAddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSiteAddUserOperationCompleted);
            }
            this.InvokeAsync("createSiteAddUser", new object[] {
                        title,
                        url,
                        email,
                        template,
                        templateAlias,
                        siteadmin}, this.createSiteAddUserOperationCompleted, userState);
        }
        
        private void OncreateSiteAddUserOperationCompleted(object arg) {
            if ((this.createSiteAddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSiteAddUserCompleted(this, new createSiteAddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/createSite", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createSite(string title, string url, string email, string template, string templateAlias, out string error) {
            object[] results = this.Invoke("createSite", new object[] {
                        title,
                        url,
                        email,
                        template,
                        templateAlias});
            error = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createSiteAsync(string title, string url, string email, string template, string templateAlias) {
            this.createSiteAsync(title, url, email, template, templateAlias, null);
        }
        
        /// <remarks/>
        public void createSiteAsync(string title, string url, string email, string template, string templateAlias, object userState) {
            if ((this.createSiteOperationCompleted == null)) {
                this.createSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSiteOperationCompleted);
            }
            this.InvokeAsync("createSite", new object[] {
                        title,
                        url,
                        email,
                        template,
                        templateAlias}, this.createSiteOperationCompleted, userState);
        }
        
        private void OncreateSiteOperationCompleted(object arg) {
            if ((this.createSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSiteCompleted(this, new createSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/isSiteAvailable", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isSiteAvailable(string url) {
            object[] results = this.Invoke("isSiteAvailable", new object[] {
                        url});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isSiteAvailableAsync(string url) {
            this.isSiteAvailableAsync(url, null);
        }
        
        /// <remarks/>
        public void isSiteAvailableAsync(string url, object userState) {
            if ((this.isSiteAvailableOperationCompleted == null)) {
                this.isSiteAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisSiteAvailableOperationCompleted);
            }
            this.InvokeAsync("isSiteAvailable", new object[] {
                        url}, this.isSiteAvailableOperationCompleted, userState);
        }
        
        private void OnisSiteAvailableOperationCompleted(object arg) {
            if ((this.isSiteAvailableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isSiteAvailableCompleted(this, new isSiteAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/cancelSiteSubscription", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool cancelSiteSubscription(string url) {
            object[] results = this.Invoke("cancelSiteSubscription", new object[] {
                        url});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void cancelSiteSubscriptionAsync(string url) {
            this.cancelSiteSubscriptionAsync(url, null);
        }
        
        /// <remarks/>
        public void cancelSiteSubscriptionAsync(string url, object userState) {
            if ((this.cancelSiteSubscriptionOperationCompleted == null)) {
                this.cancelSiteSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelSiteSubscriptionOperationCompleted);
            }
            this.InvokeAsync("cancelSiteSubscription", new object[] {
                        url}, this.cancelSiteSubscriptionOperationCompleted, userState);
        }
        
        private void OncancelSiteSubscriptionOperationCompleted(object arg) {
            if ((this.cancelSiteSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelSiteSubscriptionCompleted(this, new cancelSiteSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/enableAccount", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool enableAccount(string login, bool enable) {
            object[] results = this.Invoke("enableAccount", new object[] {
                        login,
                        enable});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void enableAccountAsync(string login, bool enable) {
            this.enableAccountAsync(login, enable, null);
        }
        
        /// <remarks/>
        public void enableAccountAsync(string login, bool enable, object userState) {
            if ((this.enableAccountOperationCompleted == null)) {
                this.enableAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableAccountOperationCompleted);
            }
            this.InvokeAsync("enableAccount", new object[] {
                        login,
                        enable}, this.enableAccountOperationCompleted, userState);
        }
        
        private void OnenableAccountOperationCompleted(object arg) {
            if ((this.enableAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableAccountCompleted(this, new enableAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getWorkspaceSiteStatistics", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("projectsCount")]
        public int getWorkspaceSiteStatistics(string url, out int usersCount, out int diskUsed) {
            object[] results = this.Invoke("getWorkspaceSiteStatistics", new object[] {
                        url});
            usersCount = ((int)(results[1]));
            diskUsed = ((int)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkspaceSiteStatisticsAsync(string url) {
            this.getWorkspaceSiteStatisticsAsync(url, null);
        }
        
        /// <remarks/>
        public void getWorkspaceSiteStatisticsAsync(string url, object userState) {
            if ((this.getWorkspaceSiteStatisticsOperationCompleted == null)) {
                this.getWorkspaceSiteStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkspaceSiteStatisticsOperationCompleted);
            }
            this.InvokeAsync("getWorkspaceSiteStatistics", new object[] {
                        url}, this.getWorkspaceSiteStatisticsOperationCompleted, userState);
        }
        
        private void OngetWorkspaceSiteStatisticsOperationCompleted(object arg) {
            if ((this.getWorkspaceSiteStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkspaceSiteStatisticsCompleted(this, new getWorkspaceSiteStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getEnterpriseSiteStatistics", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("projectsCount")]
        public int getEnterpriseSiteStatistics(string url, out int pmCount, out int tmCount, out int diskUsed) {
            object[] results = this.Invoke("getEnterpriseSiteStatistics", new object[] {
                        url});
            pmCount = ((int)(results[1]));
            tmCount = ((int)(results[2]));
            diskUsed = ((int)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getEnterpriseSiteStatisticsAsync(string url) {
            this.getEnterpriseSiteStatisticsAsync(url, null);
        }
        
        /// <remarks/>
        public void getEnterpriseSiteStatisticsAsync(string url, object userState) {
            if ((this.getEnterpriseSiteStatisticsOperationCompleted == null)) {
                this.getEnterpriseSiteStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnterpriseSiteStatisticsOperationCompleted);
            }
            this.InvokeAsync("getEnterpriseSiteStatistics", new object[] {
                        url}, this.getEnterpriseSiteStatisticsOperationCompleted, userState);
        }
        
        private void OngetEnterpriseSiteStatisticsOperationCompleted(object arg) {
            if ((this.getEnterpriseSiteStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnterpriseSiteStatisticsCompleted(this, new getEnterpriseSiteStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getSites", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiteInfo[] getSites(string username) {
            object[] results = this.Invoke("getSites", new object[] {
                        username});
            return ((SiteInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getSitesAsync(string username) {
            this.getSitesAsync(username, null);
        }
        
        /// <remarks/>
        public void getSitesAsync(string username, object userState) {
            if ((this.getSitesOperationCompleted == null)) {
                this.getSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSitesOperationCompleted);
            }
            this.InvokeAsync("getSites", new object[] {
                        username}, this.getSitesOperationCompleted, userState);
        }
        
        private void OngetSitesOperationCompleted(object arg) {
            if ((this.getSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSitesCompleted(this, new getSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/createAccount", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createAccount(string email, string firstname, string lastname, out string error) {
            object[] results = this.Invoke("createAccount", new object[] {
                        email,
                        firstname,
                        lastname});
            error = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAccountAsync(string email, string firstname, string lastname) {
            this.createAccountAsync(email, firstname, lastname, null);
        }
        
        /// <remarks/>
        public void createAccountAsync(string email, string firstname, string lastname, object userState) {
            if ((this.createAccountOperationCompleted == null)) {
                this.createAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAccountOperationCompleted);
            }
            this.InvokeAsync("createAccount", new object[] {
                        email,
                        firstname,
                        lastname}, this.createAccountOperationCompleted, userState);
        }
        
        private void OncreateAccountOperationCompleted(object arg) {
            if ((this.createAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAccountCompleted(this, new createAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/createAccountSilent", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createAccountSilent(string email, string firstname, string lastname, out string error) {
            object[] results = this.Invoke("createAccountSilent", new object[] {
                        email,
                        firstname,
                        lastname});
            error = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAccountSilentAsync(string email, string firstname, string lastname) {
            this.createAccountSilentAsync(email, firstname, lastname, null);
        }
        
        /// <remarks/>
        public void createAccountSilentAsync(string email, string firstname, string lastname, object userState) {
            if ((this.createAccountSilentOperationCompleted == null)) {
                this.createAccountSilentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAccountSilentOperationCompleted);
            }
            this.InvokeAsync("createAccountSilent", new object[] {
                        email,
                        firstname,
                        lastname}, this.createAccountSilentOperationCompleted, userState);
        }
        
        private void OncreateAccountSilentOperationCompleted(object arg) {
            if ((this.createAccountSilentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAccountSilentCompleted(this, new createAccountSilentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/createAccountFromRegister", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createAccountFromRegister(string email, string firstname, string lastname, out string error) {
            object[] results = this.Invoke("createAccountFromRegister", new object[] {
                        email,
                        firstname,
                        lastname});
            error = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAccountFromRegisterAsync(string email, string firstname, string lastname) {
            this.createAccountFromRegisterAsync(email, firstname, lastname, null);
        }
        
        /// <remarks/>
        public void createAccountFromRegisterAsync(string email, string firstname, string lastname, object userState) {
            if ((this.createAccountFromRegisterOperationCompleted == null)) {
                this.createAccountFromRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAccountFromRegisterOperationCompleted);
            }
            this.InvokeAsync("createAccountFromRegister", new object[] {
                        email,
                        firstname,
                        lastname}, this.createAccountFromRegisterOperationCompleted, userState);
        }
        
        private void OncreateAccountFromRegisterOperationCompleted(object arg) {
            if ((this.createAccountFromRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAccountFromRegisterCompleted(this, new createAccountFromRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/addPartner", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string addPartner(string email, out string error) {
            object[] results = this.Invoke("addPartner", new object[] {
                        email});
            error = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addPartnerAsync(string email) {
            this.addPartnerAsync(email, null);
        }
        
        /// <remarks/>
        public void addPartnerAsync(string email, object userState) {
            if ((this.addPartnerOperationCompleted == null)) {
                this.addPartnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPartnerOperationCompleted);
            }
            this.InvokeAsync("addPartner", new object[] {
                        email}, this.addPartnerOperationCompleted, userState);
        }
        
        private void OnaddPartnerOperationCompleted(object arg) {
            if ((this.addPartnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPartnerCompleted(this, new addPartnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/findUser", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LookUpList[] findUser(string email) {
            object[] results = this.Invoke("findUser", new object[] {
                        email});
            return ((LookUpList[])(results[0]));
        }
        
        /// <remarks/>
        public void findUserAsync(string email) {
            this.findUserAsync(email, null);
        }
        
        /// <remarks/>
        public void findUserAsync(string email, object userState) {
            if ((this.findUserOperationCompleted == null)) {
                this.findUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindUserOperationCompleted);
            }
            this.InvokeAsync("findUser", new object[] {
                        email}, this.findUserOperationCompleted, userState);
        }
        
        private void OnfindUserOperationCompleted(object arg) {
            if ((this.findUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findUserCompleted(this, new findUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getName", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getName() {
            object[] results = this.Invoke("getName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNameAsync() {
            this.getNameAsync(null);
        }
        
        /// <remarks/>
        public void getNameAsync(object userState) {
            if ((this.getNameOperationCompleted == null)) {
                this.getNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNameOperationCompleted);
            }
            this.InvokeAsync("getName", new object[0], this.getNameOperationCompleted, userState);
        }
        
        private void OngetNameOperationCompleted(object arg) {
            if ((this.getNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNameCompleted(this, new getNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/getEmail", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getEmail() {
            object[] results = this.Invoke("getEmail", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEmailAsync() {
            this.getEmailAsync(null);
        }
        
        /// <remarks/>
        public void getEmailAsync(object userState) {
            if ((this.getEmailOperationCompleted == null)) {
                this.getEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEmailOperationCompleted);
            }
            this.InvokeAsync("getEmail", new object[0], this.getEmailOperationCompleted, userState);
        }
        
        private void OngetEmailOperationCompleted(object arg) {
            if ((this.getEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEmailCompleted(this, new getEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/resetPassword", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int resetPassword(string email) {
            object[] results = this.Invoke("resetPassword", new object[] {
                        email});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void resetPasswordAsync(string email) {
            this.resetPasswordAsync(email, null);
        }
        
        /// <remarks/>
        public void resetPasswordAsync(string email, object userState) {
            if ((this.resetPasswordOperationCompleted == null)) {
                this.resetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetPasswordOperationCompleted);
            }
            this.InvokeAsync("resetPassword", new object[] {
                        email}, this.resetPasswordOperationCompleted, userState);
        }
        
        private void OnresetPasswordOperationCompleted(object arg) {
            if ((this.resetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetPasswordCompleted(this, new resetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/changePassword", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string changePassword(string oldpassword, string newpassword) {
            object[] results = this.Invoke("changePassword", new object[] {
                        oldpassword,
                        newpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changePasswordAsync(string oldpassword, string newpassword) {
            this.changePasswordAsync(oldpassword, newpassword, null);
        }
        
        /// <remarks/>
        public void changePasswordAsync(string oldpassword, string newpassword, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        oldpassword,
                        newpassword}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://epmlive.com/changeName", RequestNamespace="http://epmlive.com/", ResponseNamespace="http://epmlive.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string changeName(string firstName, string lastName) {
            object[] results = this.Invoke("changeName", new object[] {
                        firstName,
                        lastName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changeNameAsync(string firstName, string lastName) {
            this.changeNameAsync(firstName, lastName, null);
        }
        
        /// <remarks/>
        public void changeNameAsync(string firstName, string lastName, object userState) {
            if ((this.changeNameOperationCompleted == null)) {
                this.changeNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeNameOperationCompleted);
            }
            this.InvokeAsync("changeName", new object[] {
                        firstName,
                        lastName}, this.changeNameOperationCompleted, userState);
        }
        
        private void OnchangeNameOperationCompleted(object arg) {
            if ((this.changeNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeNameCompleted(this, new changeNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epmlive.com/")]
    public partial class SiteInfo {
        
        private string titleField;
        
        private string urlField;
        
        private string typeField;
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://epmlive.com/")]
    public partial class LookUpList {
        
        private string uidField;
        
        private string nameField;
        
        /// <remarks/>
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getLoginCompletedEventHandler(object sender, getLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createTrialSiteCompletedEventHandler(object sender, createTrialSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createTrialSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createTrialSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createSiteAddUserCompletedEventHandler(object sender, createSiteAddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSiteAddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSiteAddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createSiteCompletedEventHandler(object sender, createSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void isSiteAvailableCompletedEventHandler(object sender, isSiteAvailableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isSiteAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isSiteAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void cancelSiteSubscriptionCompletedEventHandler(object sender, cancelSiteSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelSiteSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelSiteSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void enableAccountCompletedEventHandler(object sender, enableAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getWorkspaceSiteStatisticsCompletedEventHandler(object sender, getWorkspaceSiteStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkspaceSiteStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkspaceSiteStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int usersCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int diskUsed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getEnterpriseSiteStatisticsCompletedEventHandler(object sender, getEnterpriseSiteStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnterpriseSiteStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnterpriseSiteStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int pmCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int tmCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int diskUsed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getSitesCompletedEventHandler(object sender, getSitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createAccountCompletedEventHandler(object sender, createAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createAccountSilentCompletedEventHandler(object sender, createAccountSilentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAccountSilentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAccountSilentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void createAccountFromRegisterCompletedEventHandler(object sender, createAccountFromRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAccountFromRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAccountFromRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void addPartnerCompletedEventHandler(object sender, addPartnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPartnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPartnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void findUserCompletedEventHandler(object sender, findUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LookUpList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LookUpList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getNameCompletedEventHandler(object sender, getNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getEmailCompletedEventHandler(object sender, getEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void resetPasswordCompletedEventHandler(object sender, resetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void changeNameCompletedEventHandler(object sender, changeNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591